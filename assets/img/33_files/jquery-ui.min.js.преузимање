/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */
(function (b) {
    "function" == typeof define && define.amd ? define(["jquery"], b) : b(jQuery)
})(function (k) {
    function G(c) {
        for (var d = c.css("visibility"); "inherit" === d;) {
            c = c.parent(), d = c.css("visibility")
        }
        return "hidden" !== d
    }

    function C(d) {
        for (var f, c; d.length && d[0] !== document;) {
            if (f = d.css("position"), ("absolute" === f || "relative" === f || "fixed" === f) && (c = parseInt(d.css("zIndex"), 10), !isNaN(c) && 0 !== c)) {
                return c
            }
            d = d.parent()
        }
        return 0
    }

    function q() {
        this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        }, this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        }, k.extend(this._defaults, this.regional[""]), this.regional.en = k.extend(!0, {}, this.regional[""]), this.regional["en-US"] = k.extend(!0, {}, this.regional.en), this.dpDiv = z(k("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    }

    function z(d) {
        var c = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return d.on("mouseout", c, function () {
            k(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && k(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && k(this).removeClass("ui-datepicker-next-hover")
        }).on("mouseover", c, y)
    }

    function y() {
        k.datepicker._isDisabledDatepicker(A.inline ? A.dpDiv.parent()[0] : A.input[0]) || (k(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), k(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && k(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && k(this).addClass("ui-datepicker-next-hover"))
    }

    function J(f, c) {
        k.extend(f, c);
        for (var d in c) {
            null == c[d] && (f[d] = c[d])
        }
        return f
    }

    function w(c) {
        return function () {
            var d = this.element.val();
            c.apply(this, arguments), this._refresh(), d !== this.element.val() && this._trigger("change")
        }
    }

    k.ui = k.ui || {}, k.ui.version = "1.12.1";
    var D = 0, B = Array.prototype.slice;
    k.cleanData = function (c) {
        return function (e) {
            var f, h, g;
            for (g = 0; null != (h = e[g]); g++) {
                try {
                    f = k._data(h, "events"), f && f.remove && k(h).triggerHandler("remove")
                } catch (d) {
                }
            }
            c(e)
        }
    }(k.cleanData), k.widget = function (t, m, v) {
        var f, d, u, c = {}, p = t.split(".")[0];
        t = t.split(".")[1];
        var g = p + "-" + t;
        return v || (v = m, m = k.Widget), k.isArray(v) && (v = k.extend.apply(null, [{}].concat(v))), k.expr[":"][g.toLowerCase()] = function (h) {
            return !!k.data(h, g)
        }, k[p] = k[p] || {}, f = k[p][t], d = k[p][t] = function (h, i) {
            return this._createWidget ? (arguments.length && this._createWidget(h, i), void 0) : new d(h, i)
        }, k.extend(d, f, {
            version: v.version,
            _proto: k.extend({}, v),
            _childConstructors: []
        }), u = new m, u.options = k.widget.extend({}, u.options), k.each(v, function (i, h) {
            return k.isFunction(h) ? (c[i] = function () {
                function e() {
                    return m.prototype[i].apply(this, arguments)
                }

                function l(n) {
                    return m.prototype[i].apply(this, n)
                }

                return function () {
                    var r, n = this._super, s = this._superApply;
                    return this._super = e, this._superApply = l, r = h.apply(this, arguments), this._super = n, this._superApply = s, r
                }
            }(), void 0) : (c[i] = h, void 0)
        }), d.prototype = k.widget.extend(u, {widgetEventPrefix: f ? u.widgetEventPrefix || t : t}, c, {
            constructor: d,
            namespace: p,
            widgetName: t,
            widgetFullName: g
        }), f ? (k.each(f._childConstructors, function (n, h) {
            var l = h.prototype;
            k.widget(l.namespace + "." + l.widgetName, d, h._proto)
        }), delete f._childConstructors) : m._childConstructors.push(d), k.widget.bridge(t, d), d
    }, k.widget.extend = function (g) {
        for (var d, f, l = B.call(arguments, 1), h = 0, c = l.length; c > h; h++) {
            for (d in l[h]) {
                f = l[h][d], l[h].hasOwnProperty(d) && void 0 !== f && (g[d] = k.isPlainObject(f) ? k.isPlainObject(g[d]) ? k.widget.extend({}, g[d], f) : k.widget.extend({}, f) : f)
            }
        }
        return g
    }, k.widget.bridge = function (f, c) {
        var d = c.prototype.widgetFullName || f;
        k.fn[f] = function (i) {
            var h = "string" == typeof i, e = B.call(arguments, 1), g = this;
            return h ? this.length || "instance" !== i ? this.each(function () {
                var l, m = k.data(this, d);
                return "instance" === i ? (g = m, !1) : m ? k.isFunction(m[i]) && "_" !== i.charAt(0) ? (l = m[i].apply(m, e), l !== m && void 0 !== l ? (g = l && l.jquery ? g.pushStack(l.get()) : l, !1) : void 0) : k.error("no such method '" + i + "' for " + f + " widget instance") : k.error("cannot call methods on " + f + " prior to initialization; attempted to call method '" + i + "'")
            }) : g = void 0 : (e.length && (i = k.widget.extend.apply(null, [i].concat(e))), this.each(function () {
                var l = k.data(this, d);
                l ? (l.option(i || {}), l._init && l._init()) : k.data(this, d, new c(i, this))
            })), g
        }
    }, k.Widget = function () {
    }, k.Widget._childConstructors = [], k.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {classes: {}, disabled: !1, create: null},
        _createWidget: function (d, c) {
            c = k(c || this.defaultElement || this)[0], this.element = k(c), this.uuid = D++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = k(), this.hoverable = k(), this.focusable = k(), this.classesElementLookup = {}, c !== this && (k.data(c, this.widgetFullName, this), this._on(!0, this.element, {
                remove: function (e) {
                    e.target === c && this.destroy()
                }
            }), this.document = k(c.style ? c.ownerDocument : c.document || c), this.window = k(this.document[0].defaultView || this.document[0].parentWindow)), this.options = k.widget.extend({}, this.options, this._getCreateOptions(), d), this._create(), this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger("create", null, this._getCreateEventData()), this._init()
        },
        _getCreateOptions: function () {
            return {}
        },
        _getCreateEventData: k.noop,
        _create: k.noop,
        _init: k.noop,
        destroy: function () {
            var c = this;
            this._destroy(), k.each(this.classesElementLookup, function (e, d) {
                c._removeClass(d, e)
            }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr("aria-disabled"), this.bindings.off(this.eventNamespace)
        },
        _destroy: k.noop,
        widget: function () {
            return this.element
        },
        option: function (g, d) {
            var f, l, h, c = g;
            if (0 === arguments.length) {
                return k.widget.extend({}, this.options)
            }
            if ("string" == typeof g) {
                if (c = {}, f = g.split("."), g = f.shift(), f.length) {
                    for (l = c[g] = k.widget.extend({}, this.options[g]), h = 0; f.length - 1 > h; h++) {
                        l[f[h]] = l[f[h]] || {}, l = l[f[h]]
                    }
                    if (g = f.pop(), 1 === arguments.length) {
                        return void 0 === l[g] ? null : l[g]
                    }
                    l[g] = d
                } else {
                    if (1 === arguments.length) {
                        return void 0 === this.options[g] ? null : this.options[g]
                    }
                    c[g] = d
                }
            }
            return this._setOptions(c), this
        },
        _setOptions: function (c) {
            var d;
            for (d in c) {
                this._setOption(d, c[d])
            }
            return this
        },
        _setOption: function (c, d) {
            return "classes" === c && this._setOptionClasses(d), this.options[c] = d, "disabled" === c && this._setOptionDisabled(d), this
        },
        _setOptionClasses: function (f) {
            var c, d, g;
            for (c in f) {
                g = this.classesElementLookup[c], f[c] !== this.options.classes[c] && g && g.length && (d = k(g.get()), this._removeClass(g, c), d.addClass(this._classes({
                    element: d,
                    keys: c,
                    classes: f,
                    add: !0
                })))
            }
        },
        _setOptionDisabled: function (c) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!c), c && (this._removeClass(this.hoverable, null, "ui-state-hover"), this._removeClass(this.focusable, null, "ui-state-focus"))
        },
        enable: function () {
            return this._setOptions({disabled: !1})
        },
        disable: function () {
            return this._setOptions({disabled: !0})
        },
        _classes: function (f) {
            function c(h, m) {
                var e, l;
                for (l = 0; h.length > l; l++) {
                    e = g.classesElementLookup[h[l]] || k(), e = f.add ? k(k.unique(e.get().concat(f.element.get()))) : k(e.not(f.element).get()), g.classesElementLookup[h[l]] = e, d.push(h[l]), m && f.classes[h[l]] && d.push(f.classes[h[l]])
                }
            }

            var d = [], g = this;
            return f = k.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, f), this._on(f.element, {remove: "_untrackClassesElement"}), f.keys && c(f.keys.match(/\S+/g) || [], !0), f.extra && c(f.extra.match(/\S+/g) || []), d.join(" ")
        },
        _untrackClassesElement: function (d) {
            var c = this;
            k.each(c.classesElementLookup, function (e, f) {
                -1 !== k.inArray(d.target, f) && (c.classesElementLookup[e] = k(f.not(d.target).get()))
            })
        },
        _removeClass: function (d, f, c) {
            return this._toggleClass(d, f, c, !1)
        },
        _addClass: function (d, f, c) {
            return this._toggleClass(d, f, c, !0)
        },
        _toggleClass: function (d, g, c, f) {
            f = "boolean" == typeof f ? f : c;
            var l = "string" == typeof d || null === d,
                h = {extra: l ? g : c, keys: l ? d : g, element: l ? this.element : d, add: f};
            return h.element.toggleClass(this._classes(h), f), this
        },
        _on: function (f, c, d) {
            var h, g = this;
            "boolean" != typeof f && (d = c, c = f, f = !1), d ? (c = h = k(c), this.bindings = this.bindings.add(c)) : (d = c, c = this.element, h = this.widget()), k.each(d, function (n, i) {
                function o() {
                    return f || g.options.disabled !== !0 && !k(this).hasClass("ui-state-disabled") ? ("string" == typeof i ? g[i] : i).apply(g, arguments) : void 0
                }

                "string" != typeof i && (o.guid = i.guid = i.guid || o.guid || k.guid++);
                var m = n.match(/^([\w:-]*)\s*(.*)$/), e = m[1] + g.eventNamespace, p = m[2];
                p ? h.on(e, p, o) : c.on(e, o)
            })
        },
        _off: function (d, c) {
            c = (c || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, d.off(c).off(c), this.bindings = k(this.bindings.not(d).get()), this.focusable = k(this.focusable.not(d).get()), this.hoverable = k(this.hoverable.not(d).get())
        },
        _delay: function (d, g) {
            function c() {
                return ("string" == typeof d ? f[d] : d).apply(f, arguments)
            }

            var f = this;
            return setTimeout(c, g || 0)
        },
        _hoverable: function (c) {
            this.hoverable = this.hoverable.add(c), this._on(c, {
                mouseenter: function (d) {
                    this._addClass(k(d.currentTarget), null, "ui-state-hover")
                }, mouseleave: function (d) {
                    this._removeClass(k(d.currentTarget), null, "ui-state-hover")
                }
            })
        },
        _focusable: function (c) {
            this.focusable = this.focusable.add(c), this._on(c, {
                focusin: function (d) {
                    this._addClass(k(d.currentTarget), null, "ui-state-focus")
                }, focusout: function (d) {
                    this._removeClass(k(d.currentTarget), null, "ui-state-focus")
                }
            })
        },
        _trigger: function (g, d, f) {
            var l, h, c = this.options[g];
            if (f = f || {}, d = k.Event(d), d.type = (g === this.widgetEventPrefix ? g : this.widgetEventPrefix + g).toLowerCase(), d.target = this.element[0], h = d.originalEvent) {
                for (l in h) {
                    l in d || (d[l] = h[l])
                }
            }
            return this.element.trigger(d, f), !(k.isFunction(c) && c.apply(this.element[0], [d].concat(f)) === !1 || d.isDefaultPrevented())
        }
    }, k.each({show: "fadeIn", hide: "fadeOut"}, function (d, c) {
        k.Widget.prototype["_" + d] = function (f, i, h) {
            "string" == typeof i && (i = {effect: i});
            var e, g = i ? i === !0 || "number" == typeof i ? c : i.effect || c : d;
            i = i || {}, "number" == typeof i && (i = {duration: i}), e = !k.isEmptyObject(i), i.complete = h, i.delay && f.delay(i.delay), e && k.effects && k.effects.effect[g] ? f[d](i) : g !== d && f[g] ? f[g](i.duration, i.easing, h) : f.queue(function (l) {
                k(this)[d](), h && h.call(f[0]), l()
            })
        }
    }), k.widget, function () {
        function L(d, h, c) {
            return [parseFloat(d[0]) * (P.test(d[0]) ? h / 100 : 1), parseFloat(d[1]) * (P.test(d[1]) ? c / 100 : 1)]
        }

        function t(d, c) {
            return parseInt(k.css(d, c), 10) || 0
        }

        function Q(d) {
            var c = d[0];
            return 9 === c.nodeType ? {
                width: d.width(),
                height: d.height(),
                offset: {top: 0, left: 0}
            } : k.isWindow(c) ? {
                width: d.width(),
                height: d.height(),
                offset: {top: d.scrollTop(), left: d.scrollLeft()}
            } : c.preventDefault ? {
                width: 0,
                height: 0,
                offset: {top: c.pageY, left: c.pageX}
            } : {width: d.outerWidth(), height: d.outerHeight(), offset: d.offset()}
        }

        var m, g = Math.max, O = Math.abs, f = /left|center|right/, v = /top|center|bottom/,
            p = /[\+\-]\d+(\.[\d]+)?%?/, N = /^\w+/, P = /%$/, M = k.fn.position;
        k.position = {
            scrollbarWidth: function () {
                if (void 0 !== m) {
                    return m
                }
                var h, c,
                    d = k("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                    l = d.children()[0];
                return k("body").append(d), h = l.offsetWidth, d.css("overflow", "scroll"), c = l.offsetWidth, h === c && (c = d[0].clientWidth), d.remove(), m = h - c
            }, getScrollInfo: function (h) {
                var c = h.isWindow || h.isDocument ? "" : h.element.css("overflow-x"),
                    d = h.isWindow || h.isDocument ? "" : h.element.css("overflow-y"),
                    r = "scroll" === c || "auto" === c && h.width < h.element[0].scrollWidth,
                    l = "scroll" === d || "auto" === d && h.height < h.element[0].scrollHeight;
                return {width: l ? k.position.scrollbarWidth() : 0, height: r ? k.position.scrollbarWidth() : 0}
            }, getWithinInfo: function (h) {
                var c = k(h || window), d = k.isWindow(c[0]), r = !!c[0] && 9 === c[0].nodeType, l = !d && !r;
                return {
                    element: c,
                    isWindow: d,
                    isDocument: r,
                    offset: l ? k(h).offset() : {left: 0, top: 0},
                    scrollLeft: c.scrollLeft(),
                    scrollTop: c.scrollTop(),
                    width: c.outerWidth(),
                    height: c.outerHeight()
                }
            }
        }, k.fn.position = function (d) {
            if (!d || !d.of) {
                return M.apply(this, arguments)
            }
            d = k.extend({}, d);
            var T, c, l, i, e, R, S = k(d.of), r = k.position.getWithinInfo(d.within), o = k.position.getScrollInfo(r),
                s = (d.collision || "flip").split(" "), h = {};
            return R = Q(S), S[0].preventDefault && (d.at = "left top"), c = R.width, l = R.height, i = R.offset, e = k.extend({}, i), k.each(["my", "at"], function () {
                var u, U, n = (d[this] || "").split(" ");
                1 === n.length && (n = f.test(n[0]) ? n.concat(["center"]) : v.test(n[0]) ? ["center"].concat(n) : ["center", "center"]), n[0] = f.test(n[0]) ? n[0] : "center", n[1] = v.test(n[1]) ? n[1] : "center", u = p.exec(n[0]), U = p.exec(n[1]), h[this] = [u ? u[0] : 0, U ? U[0] : 0], d[this] = [N.exec(n[0])[0], N.exec(n[1])[0]]
            }), 1 === s.length && (s[1] = s[0]), "right" === d.at[0] ? e.left += c : "center" === d.at[0] && (e.left += c / 2), "bottom" === d.at[1] ? e.top += l : "center" === d.at[1] && (e.top += l / 2), T = L(h.at, c, l), e.left += T[0], e.top += T[1], this.each(function () {
                var ac, u, W = k(this), V = W.outerWidth(), Y = W.outerHeight(), X = t(this, "marginLeft"),
                    ab = t(this, "marginTop"), Z = V + X + t(this, "marginRight") + o.width,
                    U = Y + ab + t(this, "marginBottom") + o.height, n = k.extend({}, e),
                    aa = L(h.my, W.outerWidth(), W.outerHeight());
                "right" === d.my[0] ? n.left -= V : "center" === d.my[0] && (n.left -= V / 2), "bottom" === d.my[1] ? n.top -= Y : "center" === d.my[1] && (n.top -= Y / 2), n.left += aa[0], n.top += aa[1], ac = {
                    marginLeft: X,
                    marginTop: ab
                }, k.each(["left", "top"], function (ae, ad) {
                    k.ui.position[s[ae]] && k.ui.position[s[ae]][ad](n, {
                        targetWidth: c,
                        targetHeight: l,
                        elemWidth: V,
                        elemHeight: Y,
                        collisionPosition: ac,
                        collisionWidth: Z,
                        collisionHeight: U,
                        offset: [T[0] + aa[0], T[1] + aa[1]],
                        my: d.my,
                        at: d.at,
                        within: r,
                        elem: W
                    })
                }), d.using && (u = function (af) {
                    var ai = i.left - n.left, ae = ai + c - V, ag = i.top - n.top, ah = ag + l - Y, ad = {
                        target: {element: S, left: i.left, top: i.top, width: c, height: l},
                        element: {element: W, left: n.left, top: n.top, width: V, height: Y},
                        horizontal: 0 > ae ? "left" : ai > 0 ? "right" : "center",
                        vertical: 0 > ah ? "top" : ag > 0 ? "bottom" : "middle"
                    };
                    V > c && c > O(ai + ae) && (ad.horizontal = "center"), Y > l && l > O(ag + ah) && (ad.vertical = "middle"), ad.important = g(O(ai), O(ae)) > g(O(ag), O(ah)) ? "horizontal" : "vertical", d.using.call(this, af, ad)
                }), W.offset(k.extend(n, {using: u}))
            })
        }, k.ui.position = {
            fit: {
                left: function (U, S) {
                    var u, V = S.within, d = V.isWindow ? V.scrollLeft : V.offset.left, T = V.width,
                        c = U.left - S.collisionPosition.marginLeft, R = d - c, o = c + S.collisionWidth - T - d;
                    S.collisionWidth > T ? R > 0 && 0 >= o ? (u = U.left + R + S.collisionWidth - T - d, U.left += R - u) : U.left = o > 0 && 0 >= R ? d : R > o ? d + T - S.collisionWidth : d : R > 0 ? U.left += R : o > 0 ? U.left -= o : U.left = g(U.left - c, U.left)
                }, top: function (U, S) {
                    var u, V = S.within, d = V.isWindow ? V.scrollTop : V.offset.top, T = S.within.height,
                        c = U.top - S.collisionPosition.marginTop, R = d - c, o = c + S.collisionHeight - T - d;
                    S.collisionHeight > T ? R > 0 && 0 >= o ? (u = U.top + R + S.collisionHeight - T - d, U.top += R - u) : U.top = o > 0 && 0 >= R ? d : R > o ? d + T - S.collisionHeight : d : R > 0 ? U.top += R : o > 0 ? U.top -= o : U.top = g(U.top - c, U.top)
                }
            }, flip: {
                left: function (ad, Z) {
                    var W, ae, U = Z.within, T = U.offset.left + U.scrollLeft, R = U.width,
                        X = U.isWindow ? U.scrollLeft : U.offset.left, V = ad.left - Z.collisionPosition.marginLeft,
                        ab = V - X, ac = V + Z.collisionWidth - R - X,
                        aa = "left" === Z.my[0] ? -Z.elemWidth : "right" === Z.my[0] ? Z.elemWidth : 0,
                        S = "left" === Z.at[0] ? Z.targetWidth : "right" === Z.at[0] ? -Z.targetWidth : 0,
                        Y = -2 * Z.offset[0];
                    0 > ab ? (W = ad.left + aa + S + Y + Z.collisionWidth - R - T, (0 > W || O(ab) > W) && (ad.left += aa + S + Y)) : ac > 0 && (ae = ad.left - Z.collisionPosition.marginLeft + aa + S + Y - X, (ae > 0 || ac > O(ae)) && (ad.left += aa + S + Y))
                }, top: function (ae, aa) {
                    var W, af, U = aa.within, T = U.offset.top + U.scrollTop, R = U.height,
                        X = U.isWindow ? U.scrollTop : U.offset.top, V = ae.top - aa.collisionPosition.marginTop,
                        ac = V - X, ad = V + aa.collisionHeight - R - X, ab = "top" === aa.my[1],
                        S = ab ? -aa.elemHeight : "bottom" === aa.my[1] ? aa.elemHeight : 0,
                        Z = "top" === aa.at[1] ? aa.targetHeight : "bottom" === aa.at[1] ? -aa.targetHeight : 0,
                        Y = -2 * aa.offset[1];
                    0 > ac ? (af = ae.top + S + Z + Y + aa.collisionHeight - R - T, (0 > af || O(ac) > af) && (ae.top += S + Z + Y)) : ad > 0 && (W = ae.top - aa.collisionPosition.marginTop + S + Z + Y - X, (W > 0 || ad > O(W)) && (ae.top += S + Z + Y))
                }
            }, flipfit: {
                left: function () {
                    k.ui.position.flip.left.apply(this, arguments), k.ui.position.fit.left.apply(this, arguments)
                }, top: function () {
                    k.ui.position.flip.top.apply(this, arguments), k.ui.position.fit.top.apply(this, arguments)
                }
            }
        }
    }(), k.ui.position, k.extend(k.expr[":"], {
        data: k.expr.createPseudo ? k.expr.createPseudo(function (c) {
            return function (d) {
                return !!k.data(d, c)
            }
        }) : function (f, c, d) {
            return !!k.data(f, d[3])
        }
    }), k.fn.extend({
        disableSelection: function () {
            var c = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function () {
                return this.on(c + ".ui-disableSelection", function (d) {
                    d.preventDefault()
                })
            }
        }(), enableSelection: function () {
            return this.off(".ui-disableSelection")
        }
    });
    var I = "ui-effects-", j = "ui-effects-style", H = "ui-effects-animated", x = k;
    k.effects = {effect: {}}, function (V, Q) {
        function N(d, h, c) {
            var f = U[h.type] || {};
            return null == d ? c || !h.def ? null : h.def : (d = f.floor ? ~~d : parseFloat(d), isNaN(d) ? h.def : f.mod ? (d + f.mod) % f.mod : 0 > d ? 0 : d > f.max ? f.max : d)
        }

        function W(c) {
            var d = M(), e = d._rgba = [];
            return c = c.toLowerCase(), P(O, function (n, u) {
                var i, s = u.re.exec(c), p = s && u.parse(s), f = u.space || "rgba";
                return p ? (i = d[f](p), d[S[f].cache] = i[S[f].cache], e = d._rgba = i._rgba, !1) : Q
            }), e.length ? ("0,0,0,0" === e.join() && V.extend(e, v.transparent), d) : v[c]
        }

        function L(d, f, c) {
            return c = (c + 1) % 1, 1 > 6 * c ? d + 6 * (f - d) * c : 1 > 2 * c ? f : 2 > 3 * c ? d + 6 * (f - d) * (2 / 3 - c) : d
        }

        var v,
            T = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
            g = /^([\-+])=\s*(\d+\.?\d*)/, O = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (c) {
                    return [c[1], c[2], c[3], c[4]]
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (c) {
                    return [2.55 * c[1], 2.55 * c[2], 2.55 * c[3], c[4]]
                }
            }, {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (c) {
                    return [parseInt(c[1], 16), parseInt(c[2], 16), parseInt(c[3], 16)]
                }
            }, {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (c) {
                    return [parseInt(c[1] + c[1], 16), parseInt(c[2] + c[2], 16), parseInt(c[3] + c[3], 16)]
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function (c) {
                    return [c[1], c[2] / 100, c[3] / 100, c[4]]
                }
            }], M = V.Color = function (f, c, d, h) {
                return new V.Color.fn.parse(f, c, d, h)
            }, S = {
                rgba: {
                    props: {
                        red: {idx: 0, type: "byte"},
                        green: {idx: 1, type: "byte"},
                        blue: {idx: 2, type: "byte"}
                    }
                },
                hsla: {
                    props: {
                        hue: {idx: 0, type: "degrees"},
                        saturation: {idx: 1, type: "percent"},
                        lightness: {idx: 2, type: "percent"}
                    }
                }
            }, U = {"byte": {floor: !0, max: 255}, percent: {max: 1}, degrees: {mod: 360, floor: !0}}, R = M.support = {},
            m = V("<p>")[0], P = V.each;
        m.style.cssText = "background-color:rgba(1,1,1,.5)", R.rgba = m.style.backgroundColor.indexOf("rgba") > -1, P(S, function (c, d) {
            d.cache = "_" + c, d.props.alpha = {idx: 3, type: "percent", def: 1}
        }), M.fn = V.extend(M.prototype, {
            parse: function (s, c, i, f) {
                if (s === Q) {
                    return this._rgba = [null, null, null, null], this
                }
                (s.jquery || s.nodeType) && (s = V(s).css(c), c = Q);
                var e = this, o = V.type(s), l = this._rgba = [];
                return c !== Q && (s = [s, c, i, f], o = "array"), "string" === o ? this.parse(W(s) || v._default) : "array" === o ? (P(S.rgba.props, function (d, h) {
                    l[h.idx] = N(s[h.idx], h)
                }), this) : "object" === o ? (s instanceof M ? P(S, function (d, h) {
                    s[h.cache] && (e[h.cache] = s[h.cache].slice())
                }) : P(S, function (h, d) {
                    var n = d.cache;
                    P(d.props, function (p, r) {
                        if (!e[n] && d.to) {
                            if ("alpha" === p || null == s[p]) {
                                return
                            }
                            e[n] = d.to(e._rgba)
                        }
                        e[n][r.idx] = N(s[p], r, !0)
                    }), e[n] && 0 > V.inArray(null, e[n].slice(0, 3)) && (e[n][3] = 1, d.from && (e._rgba = d.from(e[n])))
                }), this) : Q
            }, is: function (d) {
                var c = M(d), e = !0, f = this;
                return P(S, function (i, n) {
                    var h, l = c[n.cache];
                    return l && (h = f[n.cache] || n.to && n.to(f._rgba) || [], P(n.props, function (p, o) {
                        return null != l[o.idx] ? e = l[o.idx] === h[o.idx] : Q
                    })), e
                }), e
            }, _space: function () {
                var c = [], d = this;
                return P(S, function (e, f) {
                    d[f.cache] && c.push(e)
                }), c.pop()
            }, transition: function (d, p) {
                var i = M(d), X = i._space(), u = S[X], c = 0 === this.alpha() ? M("transparent") : this,
                    l = c[u.cache] || u.to(c._rgba), f = l.slice();
                return i = i[u.cache], P(u.props, function (r, Z) {
                    var s = Z.idx, h = l[s], e = i[s], Y = U[Z.type] || {};
                    null !== e && (null === h ? f[s] = e : (Y.mod && (e - h > Y.mod / 2 ? h += Y.mod : h - e > Y.mod / 2 && (h -= Y.mod)), f[s] = N((e - h) * p + h, Z)))
                }), this[X](f)
            }, blend: function (f) {
                if (1 === this._rgba[3]) {
                    return this
                }
                var c = this._rgba.slice(), d = c.pop(), h = M(f)._rgba;
                return M(V.map(c, function (i, l) {
                    return (1 - d) * h[l] + d * i
                }))
            }, toRgbaString: function () {
                var d = "rgba(", c = V.map(this._rgba, function (f, h) {
                    return null == f ? h > 2 ? 1 : 0 : f
                });
                return 1 === c[3] && (c.pop(), d = "rgb("), d + c.join() + ")"
            }, toHslaString: function () {
                var d = "hsla(", c = V.map(this.hsla(), function (f, h) {
                    return null == f && (f = h > 2 ? 1 : 0), h && 3 > h && (f = Math.round(100 * f) + "%"), f
                });
                return 1 === c[3] && (c.pop(), d = "hsl("), d + c.join() + ")"
            }, toHexString: function (f) {
                var c = this._rgba.slice(), d = c.pop();
                return f && c.push(~~(255 * d)), "#" + V.map(c, function (e) {
                    return e = (e || 0).toString(16), 1 === e.length ? "0" + e : e
                }).join("")
            }, toString: function () {
                return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
            }
        }), M.fn.parse.prototype = M.fn, S.hsla.to = function (ae) {
            if (null == ae[0] || null == ae[1] || null == ae[2]) {
                return [null, null, null, ae[3]]
            }
            var aa, Y, af = ae[0] / 255, p = ae[1] / 255, f = ae[2] / 255, ac = ae[3], d = Math.max(af, p, f),
                Z = Math.min(af, p, f), X = d - Z, ab = d + Z, ad = 0.5 * ab;
            return aa = Z === d ? 0 : af === d ? 60 * (p - f) / X + 360 : p === d ? 60 * (f - af) / X + 120 : 60 * (af - p) / X + 240, Y = 0 === X ? 0 : 0.5 >= ad ? X / ab : X / (2 - ab), [Math.round(aa) % 360, Y, ad, null == ac ? 1 : ac]
        }, S.hsla.from = function (f) {
            if (null == f[0] || null == f[1] || null == f[2]) {
                return [null, null, null, f[3]]
            }
            var n = f[0] / 360, d = f[1], h = f[2], p = f[3], c = 0.5 >= h ? h * (1 + d) : h + d - h * d, l = 2 * h - c;
            return [Math.round(255 * L(l, c, n + 1 / 3)), Math.round(255 * L(l, c, n)), Math.round(255 * L(l, c, n - 1 / 3)), p]
        }, P(S, function (f, p) {
            var i = p.props, d = p.cache, e = p.to, l = p.from;
            M.fn[f] = function (h) {
                if (e && !this[d] && (this[d] = e(this._rgba)), h === Q) {
                    return this[d].slice()
                }
                var X, o = V.type(h), c = "array" === o || "object" === o ? h : arguments, t = this[d].slice();
                return P(i, function (n, u) {
                    var r = c["object" === o ? n : u.idx];
                    null == r && (r = t[u.idx]), t[u.idx] = N(r, u)
                }), l ? (X = M(l(t)), X[d] = t, X) : M(t)
            }, P(i, function (h, c) {
                M.fn[h] || (M.fn[h] = function (Y) {
                    var u, s = V.type(Y), t = "alpha" === h ? this._hsla ? "hsla" : "rgba" : f, r = this[t](),
                        X = r[c.idx];
                    return "undefined" === s ? X : ("function" === s && (Y = Y.call(this, X), s = V.type(Y)), null == Y && c.empty ? this : ("string" === s && (u = g.exec(Y), u && (Y = X + parseFloat(u[2]) * ("+" === u[1] ? 1 : -1))), r[c.idx] = Y, this[t](r)))
                })
            })
        }), M.hook = function (d) {
            var c = d.split(" ");
            P(c, function (h, f) {
                V.cssHooks[f] = {
                    set: function (s, u) {
                        var t, i, p = "";
                        if ("transparent" !== u && ("string" !== V.type(u) || (t = W(u)))) {
                            if (u = M(t || u), !R.rgba && 1 !== u._rgba[3]) {
                                for (i = "backgroundColor" === f ? s.parentNode : s; ("" === p || "transparent" === p) && i && i.style;) {
                                    try {
                                        p = V.css(i, "backgroundColor"), i = i.parentNode
                                    } catch (l) {
                                    }
                                }
                                u = u.blend(p && "transparent" !== p ? p : "_default")
                            }
                            u = u.toRgbaString()
                        }
                        try {
                            s.style[f] = u
                        } catch (l) {
                        }
                    }
                }, V.fx.step[f] = function (i) {
                    i.colorInit || (i.start = M(i.elem, f), i.end = M(i.end), i.colorInit = !0), V.cssHooks[f].set(i.elem, i.start.transition(i.end, i.pos))
                }
            })
        }, M.hook(T), V.cssHooks.borderColor = {
            expand: function (c) {
                var d = {};
                return P(["Top", "Right", "Bottom", "Left"], function (e, f) {
                    d["border" + f + "Color"] = c
                }), d
            }
        }, v = V.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    }(x), function () {
        function f(m) {
            var h, l,
                r = m.ownerDocument.defaultView ? m.ownerDocument.defaultView.getComputedStyle(m, null) : m.currentStyle,
                p = {};
            if (r && r.length && r[0] && r[r[0]]) {
                for (l = r.length; l--;) {
                    h = r[l], "string" == typeof r[h] && (p[k.camelCase(h)] = r[h])
                }
            } else {
                for (h in r) {
                    "string" == typeof r[h] && (p[h] = r[h])
                }
            }
            return p
        }

        function c(n, l) {
            var m, p, h = {};
            for (m in l) {
                p = l[m], n[m] !== p && (g[m] || (k.fx.step[m] || !isNaN(parseFloat(p))) && (h[m] = p))
            }
            return h
        }

        var d = ["add", "remove", "toggle"], g = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        k.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (l, h) {
            k.fx.step[h] = function (e) {
                ("none" !== e.end && !e.setAttr || 1 === e.pos && !e.setAttr) && (x.style(e.elem, h, e.end), e.setAttr = !0)
            }
        }), k.fn.addBack || (k.fn.addBack = function (e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }), k.effects.animateClass = function (p, m, e, l) {
            var i = k.speed(m, e, l);
            return this.queue(function () {
                var t, n = k(this), s = n.attr("class") || "", h = i.children ? n.find("*").addBack() : n;
                h = h.map(function () {
                    var o = k(this);
                    return {el: o, start: f(this)}
                }), t = function () {
                    k.each(d, function (o, r) {
                        p[r] && n[r + "Class"](p[r])
                    })
                }, t(), h = h.map(function () {
                    return this.end = f(this.el[0]), this.diff = c(this.start, this.end), this
                }), n.attr("class", s), h = h.map(function () {
                    var u = this, o = k.Deferred(), r = k.extend({}, i, {
                        queue: !1, complete: function () {
                            o.resolve(u)
                        }
                    });
                    return this.el.animate(this.diff, r), o.promise()
                }), k.when.apply(k, h.get()).done(function () {
                    t(), k.each(arguments, function () {
                        var o = this.el;
                        k.each(this.diff, function (r) {
                            o.css(r, "")
                        })
                    }), i.complete.call(n[0])
                })
            })
        }, k.fn.extend({
            addClass: function (h) {
                return function (e, l, p, m) {
                    return l ? k.effects.animateClass.call(this, {add: e}, l, p, m) : h.apply(this, arguments)
                }
            }(k.fn.addClass), removeClass: function (h) {
                return function (e, l, p, m) {
                    return arguments.length > 1 ? k.effects.animateClass.call(this, {remove: e}, l, p, m) : h.apply(this, arguments)
                }
            }(k.fn.removeClass), toggleClass: function (h) {
                return function (l, m, r, p, e) {
                    return "boolean" == typeof m || void 0 === m ? r ? k.effects.animateClass.call(this, m ? {add: l} : {remove: l}, r, p, e) : h.apply(this, arguments) : k.effects.animateClass.call(this, {toggle: l}, m, r, p)
                }
            }(k.fn.toggleClass), switchClass: function (m, h, l, r, p) {
                return k.effects.animateClass.call(this, {add: h, remove: m}, l, r, p)
            }
        })
    }(), function () {
        function f(l, g, h, m) {
            return k.isPlainObject(l) && (g = l, l = l.effect), l = {effect: l}, null == g && (g = {}), k.isFunction(g) && (m = g, h = null, g = {}), ("number" == typeof g || k.fx.speeds[g]) && (m = h, h = g, g = {}), k.isFunction(h) && (m = h, h = null), g && k.extend(l, g), h = h || g.duration, l.duration = k.fx.off ? 0 : "number" == typeof h ? h : h in k.fx.speeds ? k.fx.speeds[h] : k.fx.speeds._default, l.complete = m || g.complete, l
        }

        function c(g) {
            return !g || "number" == typeof g || k.fx.speeds[g] ? !0 : "string" != typeof g || k.effects.effect[g] ? k.isFunction(g) ? !0 : "object" != typeof g || g.effect ? !1 : !0 : !0
        }

        function d(h, m) {
            var g = m.outerWidth(), l = m.outerHeight(),
                r = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,
                p = r.exec(h) || ["", 0, g, l, 0];
            return {
                top: parseFloat(p[1]) || 0,
                right: "auto" === p[2] ? g : parseFloat(p[2]),
                bottom: "auto" === p[3] ? l : parseFloat(p[3]),
                left: parseFloat(p[4]) || 0
            }
        }

        k.expr && k.expr.filters && k.expr.filters.animated && (k.expr.filters.animated = function (g) {
            return function (e) {
                return !!k(e).data(H) || g(e)
            }
        }(k.expr.filters.animated)), k.uiBackCompat !== !1 && k.extend(k.effects, {
            save: function (h, m) {
                for (var g = 0, l = m.length; l > g; g++) {
                    null !== m[g] && h.data(I + m[g], h[0].style[m[g]])
                }
            }, restore: function (h, m) {
                for (var g, l = 0, o = m.length; o > l; l++) {
                    null !== m[l] && (g = h.data(I + m[l]), h.css(m[l], g))
                }
            }, setMode: function (g, h) {
                return "toggle" === h && (h = g.is(":hidden") ? "show" : "hide"), h
            }, createWrapper: function (m) {
                if (m.parent().is(".ui-effects-wrapper")) {
                    return m.parent()
                }
                var h = {width: m.outerWidth(!0), height: m.outerHeight(!0), "float": m.css("float")},
                    l = k("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    }), r = {width: m.width(), height: m.height()}, p = document.activeElement;
                try {
                    p.id
                } catch (g) {
                    p = document.body
                }
                return m.wrap(l), (m[0] === p || k.contains(m[0], p)) && k(p).trigger("focus"), l = m.parent(), "static" === m.css("position") ? (l.css({position: "relative"}), m.css({position: "relative"})) : (k.extend(h, {
                    position: m.css("position"),
                    zIndex: m.css("z-index")
                }), k.each(["top", "left", "bottom", "right"], function (e, i) {
                    h[i] = m.css(i), isNaN(parseInt(h[i], 10)) && (h[i] = "auto")
                }), m.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })), m.css(r), l.css(h).show()
            }, removeWrapper: function (h) {
                var g = document.activeElement;
                return h.parent().is(".ui-effects-wrapper") && (h.parent().replaceWith(h), (h[0] === g || k.contains(h[0], g)) && k(g).trigger("focus")), h
            }
        }), k.extend(k.effects, {
            version: "1.12.1", define: function (l, g, h) {
                return h || (h = g, g = "effect"), k.effects.effect[l] = h, k.effects.effect[l].mode = g, h
            }, scaledDimensions: function (h, m, g) {
                if (0 === m) {
                    return {height: 0, width: 0, outerHeight: 0, outerWidth: 0}
                }
                var l = "horizontal" !== g ? (m || 100) / 100 : 1, o = "vertical" !== g ? (m || 100) / 100 : 1;
                return {
                    height: h.height() * o,
                    width: h.width() * l,
                    outerHeight: h.outerHeight() * o,
                    outerWidth: h.outerWidth() * l
                }
            }, clipToBox: function (e) {
                return {
                    width: e.clip.right - e.clip.left,
                    height: e.clip.bottom - e.clip.top,
                    left: e.clip.left,
                    top: e.clip.top
                }
            }, unshift: function (h, m, g) {
                var l = h.queue();
                m > 1 && l.splice.apply(l, [1, 0].concat(l.splice(m, g))), h.dequeue()
            }, saveStyle: function (e) {
                e.data(j, e[0].style.cssText)
            }, restoreStyle: function (e) {
                e[0].style.cssText = e.data(j) || "", e.removeData(j)
            }, mode: function (h, l) {
                var g = h.is(":hidden");
                return "toggle" === l && (l = g ? "show" : "hide"), (g ? "hide" === l : "show" === l) && (l = "none"), l
            }, getBaseline: function (h, m) {
                var g, l;
                switch (h[0]) {
                    case"top":
                        g = 0;
                        break;
                    case"middle":
                        g = 0.5;
                        break;
                    case"bottom":
                        g = 1;
                        break;
                    default:
                        g = h[0] / m.height
                }
                switch (h[1]) {
                    case"left":
                        l = 0;
                        break;
                    case"center":
                        l = 0.5;
                        break;
                    case"right":
                        l = 1;
                        break;
                    default:
                        l = h[1] / m.width
                }
                return {x: l, y: g}
            }, createPlaceholder: function (l) {
                var g, h = l.css("position"), m = l.position();
                return l.css({
                    marginTop: l.css("marginTop"),
                    marginBottom: l.css("marginBottom"),
                    marginLeft: l.css("marginLeft"),
                    marginRight: l.css("marginRight")
                }).outerWidth(l.outerWidth()).outerHeight(l.outerHeight()), /^(static|relative)/.test(h) && (h = "absolute", g = k("<" + l[0].nodeName + ">").insertAfter(l).css({
                    display: /^(inline|ruby)/.test(l.css("display")) ? "inline-block" : "block",
                    visibility: "hidden",
                    marginTop: l.css("marginTop"),
                    marginBottom: l.css("marginBottom"),
                    marginLeft: l.css("marginLeft"),
                    marginRight: l.css("marginRight"),
                    "float": l.css("float")
                }).outerWidth(l.outerWidth()).outerHeight(l.outerHeight()).addClass("ui-effects-placeholder"), l.data(I + "placeholder", g)), l.css({
                    position: h,
                    left: m.left,
                    top: m.top
                }), g
            }, removePlaceholder: function (h) {
                var l = I + "placeholder", g = h.data(l);
                g && (g.remove(), h.removeData(l))
            }, cleanUp: function (g) {
                k.effects.restoreStyle(g), k.effects.removePlaceholder(g)
            }, setTransition: function (l, g, h, m) {
                return m = m || {}, k.each(g, function (n, e) {
                    var p = l.cssUnit(e);
                    p[0] > 0 && (m[e] = p[0] * h + p[1])
                }), m
            }
        }), k.fn.extend({
            effect: function () {
                function t(o) {
                    function l() {
                        n.removeData(H), k.effects.cleanUp(n), "hide" === O.mode && n.hide(), h()
                    }

                    function h() {
                        k.isFunction(v) && v.call(n[0]), k.isFunction(o) && o()
                    }

                    var n = k(this);
                    O.mode = L.shift(), k.uiBackCompat === !1 || g ? "none" === O.mode ? (n[p](), h()) : m.call(n[0], O, l) : (n.is(":hidden") ? "hide" === p : "show" === p) ? (n[p](), h()) : m.call(n[0], O, h)
                }

                var O = f.apply(this, arguments), m = k.effects.effect[O.effect], g = m.mode, M = O.queue,
                    e = M || "fx", v = O.complete, p = O.mode, L = [], N = function (n) {
                        var h = k(this), l = k.effects.mode(h, p) || g;
                        h.data(H, !0), L.push(l), g && ("show" === l || l === g && "hide" === l) && h.show(), g && "none" === l || k.effects.saveStyle(h), k.isFunction(n) && n()
                    };
                return k.fx.off || !m ? p ? this[p](O.duration, v) : this.each(function () {
                    v && v.call(this)
                }) : M === !1 ? this.each(N).each(t) : this.queue(e, N).queue(e, t)
            }, show: function (e) {
                return function (g) {
                    if (c(g)) {
                        return e.apply(this, arguments)
                    }
                    var h = f.apply(this, arguments);
                    return h.mode = "show", this.effect.call(this, h)
                }
            }(k.fn.show), hide: function (e) {
                return function (g) {
                    if (c(g)) {
                        return e.apply(this, arguments)
                    }
                    var h = f.apply(this, arguments);
                    return h.mode = "hide", this.effect.call(this, h)
                }
            }(k.fn.hide), toggle: function (e) {
                return function (g) {
                    if (c(g) || "boolean" == typeof g) {
                        return e.apply(this, arguments)
                    }
                    var h = f.apply(this, arguments);
                    return h.mode = "toggle", this.effect.call(this, h)
                }
            }(k.fn.toggle), cssUnit: function (l) {
                var g = this.css(l), h = [];
                return k.each(["em", "px", "%", "pt"], function (i, m) {
                    g.indexOf(m) > 0 && (h = [parseFloat(g), m])
                }), h
            }, cssClip: function (e) {
                return e ? this.css("clip", "rect(" + e.top + "px " + e.right + "px " + e.bottom + "px " + e.left + "px)") : d(this.css("clip"), this)
            }, transfer: function (M, v) {
                var R = k(this), p = k(M.to), m = "fixed" === p.css("position"), P = k("body"),
                    g = m ? P.scrollTop() : 0, L = m ? P.scrollLeft() : 0, t = p.offset(),
                    O = {top: t.top - g, left: t.left - L, height: p.innerHeight(), width: p.innerWidth()},
                    Q = R.offset(),
                    N = k("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(M.className).css({
                        top: Q.top - g,
                        left: Q.left - L,
                        height: R.innerHeight(),
                        width: R.innerWidth(),
                        position: m ? "fixed" : "absolute"
                    }).animate(O, M.duration, M.easing, function () {
                        N.remove(), k.isFunction(v) && v()
                    })
            }
        }), k.fx.step.clip = function (g) {
            g.clipInit || (g.start = k(g.elem).cssClip(), "string" == typeof g.end && (g.end = d(g.end, g.elem)), g.clipInit = !0), k(g.elem).cssClip({
                top: g.pos * (g.end.top - g.start.top) + g.start.top,
                right: g.pos * (g.end.right - g.start.right) + g.start.right,
                bottom: g.pos * (g.end.bottom - g.start.bottom) + g.start.bottom,
                left: g.pos * (g.end.left - g.start.left) + g.start.left
            })
        }
    }(), function () {
        var c = {};
        k.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, d) {
            c[d] = function (f) {
                return Math.pow(f, e + 2)
            }
        }), k.extend(c, {
            Sine: function (d) {
                return 1 - Math.cos(d * Math.PI / 2)
            }, Circ: function (d) {
                return 1 - Math.sqrt(1 - d * d)
            }, Elastic: function (d) {
                return 0 === d || 1 === d ? d : -Math.pow(2, 8 * (d - 1)) * Math.sin((80 * (d - 1) - 7.5) * Math.PI / 15)
            }, Back: function (d) {
                return d * d * (3 * d - 2)
            }, Bounce: function (f) {
                for (var g, d = 4; ((g = Math.pow(2, --d)) - 1) / 11 > f;) {
                }
                return 1 / Math.pow(4, 3 - d) - 7.5625 * Math.pow((3 * g - 2) / 22 - f, 2)
            }
        }), k.each(c, function (f, d) {
            k.easing["easeIn" + f] = d, k.easing["easeOut" + f] = function (e) {
                return 1 - d(1 - e)
            }, k.easing["easeInOut" + f] = function (e) {
                return 0.5 > e ? d(2 * e) / 2 : 1 - d(-2 * e + 2) / 2
            }
        })
    }();
    var F = k.effects;
    k.effects.define("blind", "hide", function (m, d) {
        var g = {
                up: ["bottom", "top"],
                vertical: ["bottom", "top"],
                down: ["top", "bottom"],
                left: ["right", "left"],
                horizontal: ["right", "left"],
                right: ["left", "right"]
            }, t = k(this), p = m.direction || "up", c = t.cssClip(), l = {clip: k.extend({}, c)},
            f = k.effects.createPlaceholder(t);
        l.clip[g[p][0]] = l.clip[g[p][1]], "show" === m.mode && (t.cssClip(l.clip), f && f.css(k.effects.clipToBox(l)), l.clip = c), f && f.animate(k.effects.clipToBox(l), m.duration, m.easing), t.animate(l, {
            queue: !1,
            duration: m.duration,
            easing: m.easing,
            complete: d
        })
    }), k.effects.define("bounce", function (X, T) {
        var M, Q, P, ab = k(this), N = X.mode, U = "hide" === N, S = "show" === N, Z = X.direction || "up",
            L = X.distance, Y = X.times || 5, O = 2 * Y + (S || U ? 1 : 0), W = X.duration / O, V = X.easing,
            R = "up" === Z || "down" === Z ? "top" : "left", ac = "up" === Z || "left" === Z, t = 0,
            aa = ab.queue().length;
        for (k.effects.createPlaceholder(ab), P = ab.css(R), L || (L = ab["top" === R ? "outerHeight" : "outerWidth"]() / 3), S && (Q = {opacity: 1}, Q[R] = P, ab.css("opacity", 0).css(R, ac ? 2 * -L : 2 * L).animate(Q, W, V)), U && (L /= Math.pow(2, Y - 1)), Q = {}, Q[R] = P; Y > t; t++) {
            M = {}, M[R] = (ac ? "-=" : "+=") + L, ab.animate(M, W, V).animate(Q, W, V), L = U ? 2 * L : L / 2
        }
        U && (M = {opacity: 0}, M[R] = (ac ? "-=" : "+=") + L, ab.animate(M, W, V)), ab.queue(T), k.effects.unshift(ab, aa, O + 1)
    }), k.effects.define("clip", "hide", function (t, m) {
        var v, f = {}, d = k(this), u = t.direction || "vertical", c = "both" === u, p = c || "horizontal" === u,
            g = c || "vertical" === u;
        v = d.cssClip(), f.clip = {
            top: g ? (v.bottom - v.top) / 2 : v.top,
            right: p ? (v.right - v.left) / 2 : v.right,
            bottom: g ? (v.bottom - v.top) / 2 : v.bottom,
            left: p ? (v.right - v.left) / 2 : v.left
        }, k.effects.createPlaceholder(d), "show" === t.mode && (d.cssClip(f.clip), f.clip = v), d.animate(f, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: m
        })
    }), k.effects.define("drop", "hide", function (v, p) {
        var O, g = k(this), f = v.mode, M = "show" === f, d = v.direction || "left",
            t = "up" === d || "down" === d ? "top" : "left", m = "up" === d || "left" === d ? "-=" : "+=",
            L = "+=" === m ? "-=" : "+=", N = {opacity: 0};
        k.effects.createPlaceholder(g), O = v.distance || g["top" === t ? "outerHeight" : "outerWidth"](!0) / 2, N[t] = m + O, M && (g.css(N), N[t] = L + O, N.opacity = 1), g.animate(N, {
            queue: !1,
            duration: v.duration,
            easing: v.easing,
            complete: p
        })
    }), k.effects.define("explode", "hide", function (X, T) {
        function M() {
            aa.push(this), aa.length === L * Y && Q()
        }

        function Q() {
            O.css({visibility: "visible"}), k(aa).remove(), T()
        }

        var P, ab, N, U, S, Z, L = X.pieces ? Math.round(Math.sqrt(X.pieces)) : 3, Y = L, O = k(this), W = X.mode,
            V = "show" === W, R = O.show().css("visibility", "hidden").offset(), ac = Math.ceil(O.outerWidth() / Y),
            t = Math.ceil(O.outerHeight() / L), aa = [];
        for (P = 0; L > P; P++) {
            for (U = R.top + P * t, Z = P - (L - 1) / 2, ab = 0; Y > ab; ab++) {
                N = R.left + ab * ac, S = ab - (Y - 1) / 2, O.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -ab * ac,
                    top: -P * t
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: ac,
                    height: t,
                    left: N + (V ? S * ac : 0),
                    top: U + (V ? Z * t : 0),
                    opacity: V ? 0 : 1
                }).animate({
                    left: N + (V ? 0 : S * ac),
                    top: U + (V ? 0 : Z * t),
                    opacity: V ? 1 : 0
                }, X.duration || 500, X.easing, M)
            }
        }
    }), k.effects.define("fade", "toggle", function (f, c) {
        var d = "show" === f.mode;
        k(this).css("opacity", d ? 0 : 1).animate({opacity: d ? 1 : 0}, {
            queue: !1,
            duration: f.duration,
            easing: f.easing,
            complete: c
        })
    }), k.effects.define("fold", "hide", function (T, P) {
        var Z = k(this), M = T.mode, L = "show" === M, W = "hide" === M, t = T.size || 15, Q = /([0-9]+)%/.exec(t),
            O = !!T.horizFirst, V = O ? ["right", "bottom"] : ["bottom", "right"], Y = T.duration / 2,
            U = k.effects.createPlaceholder(Z), v = Z.cssClip(), S = {clip: k.extend({}, v)},
            R = {clip: k.extend({}, v)}, N = [v[V[0]], v[V[1]]], X = Z.queue().length;
        Q && (t = parseInt(Q[1], 10) / 100 * N[W ? 0 : 1]), S.clip[V[0]] = t, R.clip[V[0]] = t, R.clip[V[1]] = 0, L && (Z.cssClip(R.clip), U && U.css(k.effects.clipToBox(R)), R.clip = v), Z.queue(function (c) {
            U && U.animate(k.effects.clipToBox(S), Y, T.easing).animate(k.effects.clipToBox(R), Y, T.easing), c()
        }).animate(S, Y, T.easing).animate(R, Y, T.easing).queue(P), k.effects.unshift(Z, X, 4)
    }), k.effects.define("highlight", "show", function (f, c) {
        var d = k(this), g = {backgroundColor: d.css("backgroundColor")};
        "hide" === f.mode && (g.opacity = 0), k.effects.saveStyle(d), d.css({
            backgroundImage: "none",
            backgroundColor: f.color || "#ffff99"
        }).animate(g, {queue: !1, duration: f.duration, easing: f.easing, complete: c})
    }), k.effects.define("size", function (X, T) {
        var M, Q, P, aa = k(this), N = ["fontSize"],
            U = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            S = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], Z = X.mode, L = "effect" !== Z,
            Y = X.scale || "both", O = X.origin || ["middle", "center"], W = aa.css("position"), V = aa.position(),
            R = k.effects.scaledDimensions(aa), ab = X.from || R, t = X.to || k.effects.scaledDimensions(aa, 0);
        k.effects.createPlaceholder(aa), "show" === Z && (P = ab, ab = t, t = P), Q = {
            from: {
                y: ab.height / R.height,
                x: ab.width / R.width
            }, to: {y: t.height / R.height, x: t.width / R.width}
        }, ("box" === Y || "both" === Y) && (Q.from.y !== Q.to.y && (ab = k.effects.setTransition(aa, U, Q.from.y, ab), t = k.effects.setTransition(aa, U, Q.to.y, t)), Q.from.x !== Q.to.x && (ab = k.effects.setTransition(aa, S, Q.from.x, ab), t = k.effects.setTransition(aa, S, Q.to.x, t))), ("content" === Y || "both" === Y) && Q.from.y !== Q.to.y && (ab = k.effects.setTransition(aa, N, Q.from.y, ab), t = k.effects.setTransition(aa, N, Q.to.y, t)), O && (M = k.effects.getBaseline(O, R), ab.top = (R.outerHeight - ab.outerHeight) * M.y + V.top, ab.left = (R.outerWidth - ab.outerWidth) * M.x + V.left, t.top = (R.outerHeight - t.outerHeight) * M.y + V.top, t.left = (R.outerWidth - t.outerWidth) * M.x + V.left), aa.css(ab), ("content" === Y || "both" === Y) && (U = U.concat(["marginTop", "marginBottom"]).concat(N), S = S.concat(["marginLeft", "marginRight"]), aa.find("*[width]").each(function () {
            var d = k(this), e = k.effects.scaledDimensions(d), f = {
                height: e.height * Q.from.y,
                width: e.width * Q.from.x,
                outerHeight: e.outerHeight * Q.from.y,
                outerWidth: e.outerWidth * Q.from.x
            }, c = {
                height: e.height * Q.to.y,
                width: e.width * Q.to.x,
                outerHeight: e.height * Q.to.y,
                outerWidth: e.width * Q.to.x
            };
            Q.from.y !== Q.to.y && (f = k.effects.setTransition(d, U, Q.from.y, f), c = k.effects.setTransition(d, U, Q.to.y, c)), Q.from.x !== Q.to.x && (f = k.effects.setTransition(d, S, Q.from.x, f), c = k.effects.setTransition(d, S, Q.to.x, c)), L && k.effects.saveStyle(d), d.css(f), d.animate(c, X.duration, X.easing, function () {
                L && k.effects.restoreStyle(d)
            })
        })), aa.animate(t, {
            queue: !1, duration: X.duration, easing: X.easing, complete: function () {
                var c = aa.offset();
                0 === t.opacity && aa.css("opacity", ab.opacity), L || (aa.css("position", "static" === W ? "relative" : W).offset(c), k.effects.saveStyle(aa)), T()
            }
        })
    }), k.effects.define("scale", function (g, d) {
        var f = k(this), l = g.mode,
            h = parseInt(g.percent, 10) || (0 === parseInt(g.percent, 10) ? 0 : "effect" !== l ? 0 : 100),
            c = k.extend(!0, {
                from: k.effects.scaledDimensions(f),
                to: k.effects.scaledDimensions(f, h, g.direction || "both"),
                origin: g.origin || ["middle", "center"]
            }, g);
        g.fade && (c.from.opacity = 1, c.to.opacity = 0), k.effects.effect.size.call(this, c, d)
    }), k.effects.define("puff", "hide", function (f, c) {
        var d = k.extend(!0, {}, f, {fade: !0, percent: parseInt(f.percent, 10) || 150});
        k.effects.effect.scale.call(this, d, c)
    }), k.effects.define("pulsate", "show", function (L, t) {
        var Q = k(this), m = L.mode, g = "show" === m, O = "hide" === m, f = g || O,
            v = 2 * (L.times || 5) + (f ? 1 : 0), p = L.duration / v, N = 0, P = 1, M = Q.queue().length;
        for ((g || !Q.is(":visible")) && (Q.css("opacity", 0).show(), N = 1); v > P; P++) {
            Q.animate({opacity: N}, p, L.easing), N = 1 - N
        }
        Q.animate({opacity: N}, p, L.easing), Q.queue(t), k.effects.unshift(Q, M, v + 1)
    }), k.effects.define("shake", function (R, N) {
        var W = 1, L = k(this), v = R.direction || "left", U = R.distance || 20, m = R.times || 3, O = 2 * m + 1,
            M = Math.round(R.duration / O), T = "up" === v || "down" === v ? "top" : "left",
            V = "up" === v || "left" === v, S = {}, t = {}, Q = {}, P = L.queue().length;
        for (k.effects.createPlaceholder(L), S[T] = (V ? "-=" : "+=") + U, t[T] = (V ? "+=" : "-=") + 2 * U, Q[T] = (V ? "-=" : "+=") + 2 * U, L.animate(S, M, R.easing); m > W; W++) {
            L.animate(t, M, R.easing).animate(Q, M, R.easing)
        }
        L.animate(t, M, R.easing).animate(S, M / 2, R.easing).queue(N), k.effects.unshift(L, P, O + 1)
    }), k.effects.define("slide", "show", function (L, t) {
        var Q, m, g = k(this),
            O = {up: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], right: ["left", "right"]},
            f = L.mode, v = L.direction || "left", p = "up" === v || "down" === v ? "top" : "left",
            N = "up" === v || "left" === v, P = L.distance || g["top" === p ? "outerHeight" : "outerWidth"](!0), M = {};
        k.effects.createPlaceholder(g), Q = g.cssClip(), m = g.position()[p], M[p] = (N ? -1 : 1) * P + m, M.clip = g.cssClip(), M.clip[O[v][1]] = M.clip[O[v][0]], "show" === f && (g.cssClip(M.clip), g.css(p, M[p]), M.clip = Q, M[p] = m), g.animate(M, {
            queue: !1,
            duration: L.duration,
            easing: L.easing,
            complete: t
        })
    });
    var F;
    k.uiBackCompat !== !1 && (F = k.effects.define("transfer", function (d, c) {
        k(this).transfer(d, c)
    })), k.ui.focusable = function (e, g) {
        var t, p, d, m, f, c = e.nodeName.toLowerCase();
        return "area" === c ? (t = e.parentNode, p = t.name, e.href && p && "map" === t.nodeName.toLowerCase() ? (d = k("img[usemap='#" + p + "']"), d.length > 0 && d.is(":visible")) : !1) : (/^(input|select|textarea|button|object)$/.test(c) ? (m = !e.disabled, m && (f = k(e).closest("fieldset")[0], f && (m = !f.disabled))) : m = "a" === c ? e.href || g : g, m && k(e).is(":visible") && G(k(e)))
    }, k.extend(k.expr[":"], {
        focusable: function (c) {
            return k.ui.focusable(c, null != k.attr(c, "tabindex"))
        }
    }), k.ui.focusable, k.fn.form = function () {
        return "string" == typeof this[0].form ? this.closest("form") : k(this[0].form)
    }, k.ui.formResetMixin = {
        _formResetHandler: function () {
            var c = k(this);
            setTimeout(function () {
                var d = c.data("ui-form-reset-instances");
                k.each(d, function () {
                    this.refresh()
                })
            })
        }, _bindFormResetHandler: function () {
            if (this.form = this.element.form(), this.form.length) {
                var c = this.form.data("ui-form-reset-instances") || [];
                c.length || this.form.on("reset.ui-form-reset", this._formResetHandler), c.push(this), this.form.data("ui-form-reset-instances", c)
            }
        }, _unbindFormResetHandler: function () {
            if (this.form.length) {
                var c = this.form.data("ui-form-reset-instances");
                c.splice(k.inArray(this, c), 1), c.length ? this.form.data("ui-form-reset-instances", c) : this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")
            }
        }
    }, "1.7" === k.fn.jquery.substring(0, 3) && (k.each(["Width", "Height"], function (g, d) {
        function f(p, m, n, r) {
            return k.each(l, function () {
                m -= parseFloat(k.css(p, "padding" + this)) || 0, n && (m -= parseFloat(k.css(p, "border" + this + "Width")) || 0), r && (m -= parseFloat(k.css(p, "margin" + this)) || 0)
            }), m
        }

        var l = "Width" === d ? ["Left", "Right"] : ["Top", "Bottom"], h = d.toLowerCase(), c = {
            innerWidth: k.fn.innerWidth,
            innerHeight: k.fn.innerHeight,
            outerWidth: k.fn.outerWidth,
            outerHeight: k.fn.outerHeight
        };
        k.fn["inner" + d] = function (i) {
            return void 0 === i ? c["inner" + d].call(this) : this.each(function () {
                k(this).css(h, f(this, i) + "px")
            })
        }, k.fn["outer" + d] = function (i, m) {
            return "number" != typeof i ? c["outer" + d].call(this, i) : this.each(function () {
                k(this).css(h, f(this, i, !0, m) + "px")
            })
        }
    }), k.fn.addBack = function (c) {
        return this.add(null == c ? this.prevObject : this.prevObject.filter(c))
    }), k.ui.keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    }, k.ui.escapeSelector = function () {
        var c = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
        return function (d) {
            return d.replace(c, "\\$1")
        }
    }(), k.fn.labels = function () {
        var f, c, d, h, g;
        return this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (h = this.eq(0).parents("label"), d = this.attr("id"), d && (f = this.eq(0).parents().last(), g = f.add(f.length ? f.siblings() : this.siblings()), c = "label[for='" + k.ui.escapeSelector(d) + "']", h = h.add(g.find(c).addBack(c))), this.pushStack(h))
    }, k.fn.scrollParent = function (f) {
        var c = this.css("position"), d = "absolute" === c, h = f ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
            g = this.parents().filter(function () {
                var i = k(this);
                return d && "static" === i.css("position") ? !1 : h.test(i.css("overflow") + i.css("overflow-y") + i.css("overflow-x"))
            }).eq(0);
        return "fixed" !== c && g.length ? g : k(this[0].ownerDocument || document)
    }, k.extend(k.expr[":"], {
        tabbable: function (f) {
            var c = k.attr(f, "tabindex"), d = null != c;
            return (!d || c >= 0) && k.ui.focusable(f, d)
        }
    }), k.fn.extend({
        uniqueId: function () {
            var c = 0;
            return function () {
                return this.each(function () {
                    this.id || (this.id = "ui-id-" + ++c)
                })
            }
        }(), removeUniqueId: function () {
            return this.each(function () {
                /^ui-id-\d+$/.test(this.id) && k(this).removeAttr("id")
            })
        }
    }), k.widget("ui.accordion", {
        version: "1.12.1",
        options: {
            active: 0,
            animate: {},
            classes: {
                "ui-accordion-header": "ui-corner-top",
                "ui-accordion-header-collapsed": "ui-corner-all",
                "ui-accordion-content": "ui-corner-bottom"
            },
            collapsible: !1,
            event: "click",
            header: "> li > :first-child, > :not(li):even",
            heightStyle: "auto",
            icons: {activeHeader: "ui-icon-triangle-1-s", header: "ui-icon-triangle-1-e"},
            activate: null,
            beforeActivate: null
        },
        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },
        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },
        _create: function () {
            var c = this.options;
            this.prevShow = this.prevHide = k(), this._addClass("ui-accordion", "ui-widget ui-helper-reset"), this.element.attr("role", "tablist"), c.collapsible || c.active !== !1 && null != c.active || (c.active = 0), this._processPanels(), 0 > c.active && (c.active += this.headers.length), this._refresh()
        },
        _getCreateEventData: function () {
            return {header: this.active, panel: this.active.length ? this.active.next() : k()}
        },
        _createIcons: function () {
            var f, c, d = this.options.icons;
            d && (f = k("<span>"), this._addClass(f, "ui-accordion-header-icon", "ui-icon " + d.header), f.prependTo(this.headers), c = this.active.children(".ui-accordion-header-icon"), this._removeClass(c, d.header)._addClass(c, null, d.activeHeader)._addClass(this.headers, "ui-accordion-icons"))
        },
        _destroyIcons: function () {
            this._removeClass(this.headers, "ui-accordion-icons"), this.headers.children(".ui-accordion-header-icon").remove()
        },
        _destroy: function () {
            var c;
            this.element.removeAttr("role"), this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(), this._destroyIcons(), c = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && c.css("height", "")
        },
        _setOption: function (c, d) {
            return "active" === c ? (this._activate(d), void 0) : ("event" === c && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(d)), this._super(c, d), "collapsible" !== c || d || this.options.active !== !1 || this._activate(0), "icons" === c && (this._destroyIcons(), d && this._createIcons()), void 0)
        },
        _setOptionDisabled: function (c) {
            this._super(c), this.element.attr("aria-disabled", c), this._toggleClass(null, "ui-state-disabled", !!c), this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!c)
        },
        _keydown: function (f) {
            if (!f.altKey && !f.ctrlKey) {
                var c = k.ui.keyCode, d = this.headers.length, h = this.headers.index(f.target), g = !1;
                switch (f.keyCode) {
                    case c.RIGHT:
                    case c.DOWN:
                        g = this.headers[(h + 1) % d];
                        break;
                    case c.LEFT:
                    case c.UP:
                        g = this.headers[(h - 1 + d) % d];
                        break;
                    case c.SPACE:
                    case c.ENTER:
                        this._eventHandler(f);
                        break;
                    case c.HOME:
                        g = this.headers[0];
                        break;
                    case c.END:
                        g = this.headers[d - 1]
                }
                g && (k(f.target).attr("tabIndex", -1), k(g).attr("tabIndex", 0), k(g).trigger("focus"), f.preventDefault())
            }
        },
        _panelKeyDown: function (c) {
            c.keyCode === k.ui.keyCode.UP && c.ctrlKey && k(c.currentTarget).prev().trigger("focus")
        },
        refresh: function () {
            var c = this.options;
            this._processPanels(), c.active === !1 && c.collapsible === !0 || !this.headers.length ? (c.active = !1, this.active = k()) : c.active === !1 ? this._activate(0) : this.active.length && !k.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (c.active = !1, this.active = k()) : this._activate(Math.max(0, c.active - 1)) : c.active = this.headers.index(this.active), this._destroyIcons(), this._refresh()
        },
        _processPanels: function () {
            var c = this.headers, d = this.panels;
            this.headers = this.element.find(this.options.header), this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default"), this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide(), this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content"), d && (this._off(c.not(this.headers)), this._off(d.not(this.panels)))
        },
        _refresh: function () {
            var f, c = this.options, d = c.heightStyle, g = this.element.parent();
            this.active = this._findActive(c.active), this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed"), this._addClass(this.active.next(), "ui-accordion-content-active"), this.active.next().show(), this.headers.attr("role", "tab").each(function () {
                var m = k(this), h = m.uniqueId().attr("id"), l = m.next(), o = l.uniqueId().attr("id");
                m.attr("aria-controls", o), l.attr("aria-labelledby", h)
            }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }).next().attr({"aria-hidden": "true"}).hide(), this.active.length ? this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }).next().attr({"aria-hidden": "false"}) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(c.event), "fill" === d ? (f = g.height(), this.element.siblings(":visible").each(function () {
                var e = k(this), h = e.css("position");
                "absolute" !== h && "fixed" !== h && (f -= e.outerHeight(!0))
            }), this.headers.each(function () {
                f -= k(this).outerHeight(!0)
            }), this.headers.next().each(function () {
                k(this).height(Math.max(0, f - k(this).innerHeight() + k(this).height()))
            }).css("overflow", "auto")) : "auto" === d && (f = 0, this.headers.next().each(function () {
                var e = k(this).is(":visible");
                e || k(this).show(), f = Math.max(f, k(this).css("height", "").height()), e || k(this).hide()
            }).height(f))
        },
        _activate: function (d) {
            var c = this._findActive(d)[0];
            c !== this.active[0] && (c = c || this.active[0], this._eventHandler({
                target: c,
                currentTarget: c,
                preventDefault: k.noop
            }))
        },
        _findActive: function (c) {
            return "number" == typeof c ? this.headers.eq(c) : k()
        },
        _setupEvents: function (d) {
            var c = {keydown: "_keydown"};
            d && k.each(d.split(" "), function (f, g) {
                c[g] = "_eventHandler"
            }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, c), this._on(this.headers.next(), {keydown: "_panelKeyDown"}), this._hoverable(this.headers), this._focusable(this.headers)
        },
        _eventHandler: function (v) {
            var p, O, g = this.options, f = this.active, M = k(v.currentTarget), d = M[0] === f[0],
                t = d && g.collapsible, m = t ? k() : M.next(), L = f.next(),
                N = {oldHeader: f, oldPanel: L, newHeader: t ? k() : M, newPanel: m};
            v.preventDefault(), d && !g.collapsible || this._trigger("beforeActivate", v, N) === !1 || (g.active = t ? !1 : this.headers.index(M), this.active = d ? k() : M, this._toggle(N), this._removeClass(f, "ui-accordion-header-active", "ui-state-active"), g.icons && (p = f.children(".ui-accordion-header-icon"), this._removeClass(p, null, g.icons.activeHeader)._addClass(p, null, g.icons.header)), d || (this._removeClass(M, "ui-accordion-header-collapsed")._addClass(M, "ui-accordion-header-active", "ui-state-active"), g.icons && (O = M.children(".ui-accordion-header-icon"), this._removeClass(O, null, g.icons.header)._addClass(O, null, g.icons.activeHeader)), this._addClass(M.next(), "ui-accordion-content-active")))
        },
        _toggle: function (f) {
            var c = f.newPanel, d = this.prevShow.length ? this.prevShow : f.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = c, this.prevHide = d, this.options.animate ? this._animate(c, d, f) : (d.hide(), c.show(), this._toggleComplete(f)), d.attr({"aria-hidden": "true"}), d.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), c.length && d.length ? d.prev().attr({
                tabIndex: -1,
                "aria-expanded": "false"
            }) : c.length && this.headers.filter(function () {
                return 0 === parseInt(k(this).attr("tabIndex"), 10)
            }).attr("tabIndex", -1), c.attr("aria-hidden", "false").prev().attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _animate: function (R, M, v) {
            var S, m, g, P = this, f = 0, L = R.css("box-sizing"), p = R.length && (!M.length || R.index() < M.index()),
                O = this.options.animate || {}, Q = p && O.down || O, N = function () {
                    P._toggleComplete(v)
                };
            return "number" == typeof Q && (g = Q), "string" == typeof Q && (m = Q), m = m || Q.easing || O.easing, g = g || Q.duration || O.duration, M.length ? R.length ? (S = R.show().outerHeight(), M.animate(this.hideProps, {
                duration: g,
                easing: m,
                step: function (c, d) {
                    d.now = Math.round(c)
                }
            }), R.hide().animate(this.showProps, {
                duration: g, easing: m, complete: N, step: function (d, c) {
                    c.now = Math.round(d), "height" !== c.prop ? "content-box" === L && (f += c.now) : "content" !== P.options.heightStyle && (c.now = Math.round(S - M.outerHeight() - f), f = 0)
                }
            }), void 0) : M.animate(this.hideProps, g, m, N) : R.animate(this.showProps, g, m, N)
        },
        _toggleComplete: function (d) {
            var f = d.oldPanel, c = f.prev();
            this._removeClass(f, "ui-accordion-content-active"), this._removeClass(c, "ui-accordion-header-active")._addClass(c, "ui-accordion-header-collapsed"), f.length && (f.parent()[0].className = f.parent()[0].className), this._trigger("activate", null, d)
        }
    }), k.ui.safeActiveElement = function (d) {
        var f;
        try {
            f = d.activeElement
        } catch (c) {
            f = d.body
        }
        return f || (f = d.body), f.nodeName || (f = d.body), f
    }, k.widget("ui.menu", {
        version: "1.12.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {submenu: "ui-icon-caret-1-e"},
            items: "> *",
            menus: "ul",
            position: {my: "left top", at: "right top"},
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function () {
            this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().attr({
                role: this.options.role,
                tabIndex: 0
            }), this._addClass("ui-menu", "ui-widget ui-widget-content"), this._on({
                "mousedown .ui-menu-item": function (c) {
                    c.preventDefault()
                }, "click .ui-menu-item": function (f) {
                    var c = k(f.target), d = k(k.ui.safeActiveElement(this.document[0]));
                    !this.mouseHandled && c.not(".ui-state-disabled").length && (this.select(f), f.isPropagationStopped() || (this.mouseHandled = !0), c.has(".ui-menu").length ? this.expand(f) : !this.element.is(":focus") && d.closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
                }, "mouseenter .ui-menu-item": function (f) {
                    if (!this.previousFilter) {
                        var c = k(f.target).closest(".ui-menu-item"), d = k(f.currentTarget);
                        c[0] === d[0] && (this._removeClass(d.siblings().children(".ui-state-active"), null, "ui-state-active"), this.focus(f, d))
                    }
                }, mouseleave: "collapseAll", "mouseleave .ui-menu": "collapseAll", focus: function (d, f) {
                    var c = this.active || this.element.find(this.options.items).eq(0);
                    f || this.focus(d, c)
                }, blur: function (c) {
                    this._delay(function () {
                        var d = !k.contains(this.element[0], k.ui.safeActiveElement(this.document[0]));
                        d && this.collapseAll(c)
                    })
                }, keydown: "_keydown"
            }), this.refresh(), this._on(this.document, {
                click: function (c) {
                    this._closeOnDocumentClick(c) && this.collapseAll(c), this.mouseHandled = !1
                }
            })
        },
        _destroy: function () {
            var d = this.element.find(".ui-menu-item").removeAttr("role aria-disabled"),
                c = d.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(), c.children().each(function () {
                var f = k(this);
                f.data("ui-menu-submenu-caret") && f.remove()
            })
        },
        _keydown: function (g) {
            var d, f, l, h, c = !0;
            switch (g.keyCode) {
                case k.ui.keyCode.PAGE_UP:
                    this.previousPage(g);
                    break;
                case k.ui.keyCode.PAGE_DOWN:
                    this.nextPage(g);
                    break;
                case k.ui.keyCode.HOME:
                    this._move("first", "first", g);
                    break;
                case k.ui.keyCode.END:
                    this._move("last", "last", g);
                    break;
                case k.ui.keyCode.UP:
                    this.previous(g);
                    break;
                case k.ui.keyCode.DOWN:
                    this.next(g);
                    break;
                case k.ui.keyCode.LEFT:
                    this.collapse(g);
                    break;
                case k.ui.keyCode.RIGHT:
                    this.active && !this.active.is(".ui-state-disabled") && this.expand(g);
                    break;
                case k.ui.keyCode.ENTER:
                case k.ui.keyCode.SPACE:
                    this._activate(g);
                    break;
                case k.ui.keyCode.ESCAPE:
                    this.collapse(g);
                    break;
                default:
                    c = !1, f = this.previousFilter || "", h = !1, l = g.keyCode >= 96 && 105 >= g.keyCode ? "" + (g.keyCode - 96) : String.fromCharCode(g.keyCode), clearTimeout(this.filterTimer), l === f ? h = !0 : l = f + l, d = this._filterMenuItems(l), d = h && -1 !== d.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : d, d.length || (l = String.fromCharCode(g.keyCode), d = this._filterMenuItems(l)), d.length ? (this.focus(g, d), this.previousFilter = l, this.filterTimer = this._delay(function () {
                        delete this.previousFilter
                    }, 1000)) : delete this.previousFilter
            }
            c && g.preventDefault()
        },
        _activate: function (c) {
            this.active && !this.active.is(".ui-state-disabled") && (this.active.children("[aria-haspopup='true']").length ? this.expand(c) : this.select(c))
        },
        refresh: function () {
            var m, d, g, t, p, c = this, l = this.options.icons.submenu, f = this.element.find(this.options.menus);
            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length), g = f.filter(":not(.ui-menu)").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function () {
                var o = k(this), h = o.prev(), n = k("<span>").data("ui-menu-submenu-caret", !0);
                c._addClass(n, "ui-menu-icon", "ui-icon " + l), h.attr("aria-haspopup", "true").prepend(n), o.attr("aria-labelledby", h.attr("id"))
            }), this._addClass(g, "ui-menu", "ui-widget ui-widget-content ui-front"), m = f.add(this.element), d = m.find(this.options.items), d.not(".ui-menu-item").each(function () {
                var h = k(this);
                c._isDivider(h) && c._addClass(h, "ui-menu-divider", "ui-widget-content")
            }), t = d.not(".ui-menu-item, .ui-menu-divider"), p = t.children().not(".ui-menu").uniqueId().attr({
                tabIndex: -1,
                role: this._itemRole()
            }), this._addClass(t, "ui-menu-item")._addClass(p, "ui-menu-item-wrapper"), d.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !k.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function () {
            return {menu: "menuitem", listbox: "option"}[this.options.role]
        },
        _setOption: function (d, f) {
            if ("icons" === d) {
                var c = this.element.find(".ui-menu-icon");
                this._removeClass(c, null, this.options.icons.submenu)._addClass(c, null, f.submenu)
            }
            this._super(d, f)
        },
        _setOptionDisabled: function (c) {
            this._super(c), this.element.attr("aria-disabled", c + ""), this._toggleClass(null, "ui-state-disabled", !!c)
        },
        focus: function (d, g) {
            var c, f, h;
            this.blur(d, d && "focus" === d.type), this._scrollIntoView(g), this.active = g.first(), f = this.active.children(".ui-menu-item-wrapper"), this._addClass(f, null, "ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", f.attr("id")), h = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"), this._addClass(h, null, "ui-state-active"), d && "keydown" === d.type ? this._close() : this.timer = this._delay(function () {
                this._close()
            }, this.delay), c = g.children(".ui-menu"), c.length && d && /^mouse/.test(d.type) && this._startOpening(c), this.activeMenu = g.parent(), this._trigger("focus", d, {item: g})
        },
        _scrollIntoView: function (h) {
            var d, f, m, l, c, g;
            this._hasScroll() && (d = parseFloat(k.css(this.activeMenu[0], "borderTopWidth")) || 0, f = parseFloat(k.css(this.activeMenu[0], "paddingTop")) || 0, m = h.offset().top - this.activeMenu.offset().top - d - f, l = this.activeMenu.scrollTop(), c = this.activeMenu.height(), g = h.outerHeight(), 0 > m ? this.activeMenu.scrollTop(l + m) : m + g > c && this.activeMenu.scrollTop(l + m - c + g))
        },
        blur: function (c, d) {
            d || clearTimeout(this.timer), this.active && (this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active"), this._trigger("blur", c, {item: this.active}), this.active = null)
        },
        _startOpening: function (c) {
            clearTimeout(this.timer), "true" === c.attr("aria-hidden") && (this.timer = this._delay(function () {
                this._close(), this._open(c)
            }, this.delay))
        },
        _open: function (d) {
            var c = k.extend({of: this.active}, this.options.position);
            clearTimeout(this.timer), this.element.find(".ui-menu").not(d.parents(".ui-menu")).hide().attr("aria-hidden", "true"), d.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(c)
        },
        collapseAll: function (d, c) {
            clearTimeout(this.timer), this.timer = this._delay(function () {
                var e = c ? this.element : k(d && d.target).closest(this.element.find(".ui-menu"));
                e.length || (e = this.element), this._close(e), this.blur(d), this._removeClass(e.find(".ui-state-active"), null, "ui-state-active"), this.activeMenu = e
            }, this.delay)
        },
        _close: function (c) {
            c || (c = this.active ? this.active.parent() : this.element), c.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false")
        },
        _closeOnDocumentClick: function (c) {
            return !k(c.target).closest(".ui-menu").length
        },
        _isDivider: function (c) {
            return !/[^\-\u2014\u2013\s]/.test(c.text())
        },
        collapse: function (c) {
            var d = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            d && d.length && (this._close(), this.focus(c, d))
        },
        expand: function (c) {
            var d = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            d && d.length && (this._open(d.parent()), this._delay(function () {
                this.focus(c, d)
            }))
        },
        next: function (c) {
            this._move("next", "first", c)
        },
        previous: function (c) {
            this._move("prev", "last", c)
        },
        isFirstItem: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function (d, g, c) {
            var f;
            this.active && (f = "first" === d || "last" === d ? this.active["first" === d ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[d + "All"](".ui-menu-item").eq(0)), f && f.length && this.active || (f = this.activeMenu.find(this.options.items)[g]()), this.focus(c, f)
        },
        nextPage: function (f) {
            var c, d, g;
            return this.active ? (this.isLastItem() || (this._hasScroll() ? (d = this.active.offset().top, g = this.element.height(), this.active.nextAll(".ui-menu-item").each(function () {
                return c = k(this), 0 > c.offset().top - d - g
            }), this.focus(f, c)) : this.focus(f, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), void 0) : (this.next(f), void 0)
        },
        previousPage: function (f) {
            var c, d, g;
            return this.active ? (this.isFirstItem() || (this._hasScroll() ? (d = this.active.offset().top, g = this.element.height(), this.active.prevAll(".ui-menu-item").each(function () {
                return c = k(this), c.offset().top - d + g > 0
            }), this.focus(f, c)) : this.focus(f, this.activeMenu.find(this.options.items).first())), void 0) : (this.next(f), void 0)
        },
        _hasScroll: function () {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function (d) {
            this.active = this.active || k(d.target).closest(".ui-menu-item");
            var c = {item: this.active};
            this.active.has(".ui-menu").length || this.collapseAll(d, !0), this._trigger("select", d, c)
        },
        _filterMenuItems: function (f) {
            var c = f.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), d = RegExp("^" + c, "i");
            return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function () {
                return d.test(k.trim(k(this).children(".ui-menu-item-wrapper").text()))
            })
        }
    }), k.widget("ui.autocomplete", {
        version: "1.12.1",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {my: "left top", at: "left bottom", collision: "none"},
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        requestIndex: 0,
        pending: 0,
        _create: function () {
            var g, d, f, l = this.element[0].nodeName.toLowerCase(), h = "textarea" === l, c = "input" === l;
            this.isMultiLine = h || !c && this._isContentEditable(this.element), this.valueMethod = this.element[h || c ? "val" : "text"], this.isNewMenu = !0, this._addClass("ui-autocomplete-input"), this.element.attr("autocomplete", "off"), this._on(this.element, {
                keydown: function (i) {
                    if (this.element.prop("readOnly")) {
                        return g = !0, f = !0, d = !0, void 0
                    }
                    g = !1, f = !1, d = !1;
                    var e = k.ui.keyCode;
                    switch (i.keyCode) {
                        case e.PAGE_UP:
                            g = !0, this._move("previousPage", i);
                            break;
                        case e.PAGE_DOWN:
                            g = !0, this._move("nextPage", i);
                            break;
                        case e.UP:
                            g = !0, this._keyEvent("previous", i);
                            break;
                        case e.DOWN:
                            g = !0, this._keyEvent("next", i);
                            break;
                        case e.ENTER:
                            this.menu.active && (g = !0, i.preventDefault(), this.menu.select(i));
                            break;
                        case e.TAB:
                            this.menu.active && this.menu.select(i);
                            break;
                        case e.ESCAPE:
                            this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(i), i.preventDefault());
                            break;
                        default:
                            d = !0, this._searchTimeout(i)
                    }
                }, keypress: function (e) {
                    if (g) {
                        return g = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && e.preventDefault(), void 0
                    }
                    if (!d) {
                        var i = k.ui.keyCode;
                        switch (e.keyCode) {
                            case i.PAGE_UP:
                                this._move("previousPage", e);
                                break;
                            case i.PAGE_DOWN:
                                this._move("nextPage", e);
                                break;
                            case i.UP:
                                this._keyEvent("previous", e);
                                break;
                            case i.DOWN:
                                this._keyEvent("next", e)
                        }
                    }
                }, input: function (e) {
                    return f ? (f = !1, e.preventDefault(), void 0) : (this._searchTimeout(e), void 0)
                }, focus: function () {
                    this.selectedItem = null, this.previous = this._value()
                }, blur: function (e) {
                    return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), this.close(e), this._change(e), void 0)
                }
            }), this._initSource(), this.menu = k("<ul>").appendTo(this._appendTo()).menu({role: null}).hide().menu("instance"), this._addClass(this.menu.element, "ui-autocomplete", "ui-front"), this._on(this.menu.element, {
                mousedown: function (i) {
                    i.preventDefault(), this.cancelBlur = !0, this._delay(function () {
                        delete this.cancelBlur, this.element[0] !== k.ui.safeActiveElement(this.document[0]) && this.element.trigger("focus")
                    })
                }, menufocus: function (p, m) {
                    var o, r;
                    return this.isNewMenu && (this.isNewMenu = !1, p.originalEvent && /^mouse/.test(p.originalEvent.type)) ? (this.menu.blur(), this.document.one("mousemove", function () {
                        k(p.target).trigger(p.originalEvent)
                    }), void 0) : (r = m.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", p, {item: r}) && p.originalEvent && /^key/.test(p.originalEvent.type) && this._value(r.value), o = m.item.attr("aria-label") || r.value, o && k.trim(o).length && (this.liveRegion.children().hide(), k("<div>").text(o).appendTo(this.liveRegion)), void 0)
                }, menuselect: function (p, m) {
                    var o = m.item.data("ui-autocomplete-item"), r = this.previous;
                    this.element[0] !== k.ui.safeActiveElement(this.document[0]) && (this.element.trigger("focus"), this.previous = r, this._delay(function () {
                        this.previous = r, this.selectedItem = o
                    })), !1 !== this._trigger("select", p, {item: o}) && this._value(o.value), this.term = this._value(), this.close(p), this.selectedItem = o
                }
            }), this.liveRegion = k("<div>", {
                role: "status",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function () {
            clearTimeout(this.searching), this.element.removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove()
        },
        _setOption: function (c, d) {
            this._super(c, d), "source" === c && this._initSource(), "appendTo" === c && this.menu.element.appendTo(this._appendTo()), "disabled" === c && d && this.xhr && this.xhr.abort()
        },
        _isEventTargetInWidget: function (d) {
            var c = this.menu.element[0];
            return d.target === this.element[0] || d.target === c || k.contains(c, d.target)
        },
        _closeOnClickOutside: function (c) {
            this._isEventTargetInWidget(c) || this.close()
        },
        _appendTo: function () {
            var c = this.options.appendTo;
            return c && (c = c.jquery || c.nodeType ? k(c) : this.document.find(c).eq(0)), c && c[0] || (c = this.element.closest(".ui-front, dialog")), c.length || (c = this.document[0].body), c
        },
        _initSource: function () {
            var f, c, d = this;
            k.isArray(this.options.source) ? (f = this.options.source, this.source = function (e, g) {
                g(k.ui.autocomplete.filter(f, e.term))
            }) : "string" == typeof this.options.source ? (c = this.options.source, this.source = function (g, h) {
                d.xhr && d.xhr.abort(), d.xhr = k.ajax({
                    url: c, data: g, dataType: "json", success: function (e) {
                        h(e)
                    }, error: function () {
                        h([])
                    }
                })
            }) : this.source = this.options.source
        },
        _searchTimeout: function (c) {
            clearTimeout(this.searching), this.searching = this._delay(function () {
                var g = this.term === this._value(), d = this.menu.element.is(":visible"),
                    f = c.altKey || c.ctrlKey || c.metaKey || c.shiftKey;
                (!g || g && !d && !f) && (this.selectedItem = null, this.search(null, c))
            }, this.options.delay)
        },
        search: function (c, d) {
            return c = null != c ? c : this._value(), this.term = this._value(), c.length < this.options.minLength ? this.close(d) : this._trigger("search", d) !== !1 ? this._search(c) : void 0
        },
        _search: function (c) {
            this.pending++, this._addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({term: c}, this._response())
        },
        _response: function () {
            var c = ++this.requestIndex;
            return k.proxy(function (d) {
                c === this.requestIndex && this.__response(d), this.pending--, this.pending || this._removeClass("ui-autocomplete-loading")
            }, this)
        },
        __response: function (c) {
            c && (c = this._normalize(c)), this._trigger("response", null, {content: c}), !this.options.disabled && c && c.length && !this.cancelSearch ? (this._suggest(c), this._trigger("open")) : this._close()
        },
        close: function (c) {
            this.cancelSearch = !0, this._close(c)
        },
        _close: function (c) {
            this._off(this.document, "mousedown"), this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", c))
        },
        _change: function (c) {
            this.previous !== this._value() && this._trigger("change", c, {item: this.selectedItem})
        },
        _normalize: function (c) {
            return c.length && c[0].label && c[0].value ? c : k.map(c, function (d) {
                return "string" == typeof d ? {label: d, value: d} : k.extend({}, d, {
                    label: d.label || d.value,
                    value: d.value || d.label
                })
            })
        },
        _suggest: function (d) {
            var c = this.menu.element.empty();
            this._renderMenu(c, d), this.isNewMenu = !0, this.menu.refresh(), c.show(), this._resizeMenu(), c.position(k.extend({of: this.element}, this.options.position)), this.options.autoFocus && this.menu.next(), this._on(this.document, {mousedown: "_closeOnClickOutside"})
        },
        _resizeMenu: function () {
            var c = this.menu.element;
            c.outerWidth(Math.max(c.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function (f, c) {
            var d = this;
            k.each(c, function (g, e) {
                d._renderItemData(f, e)
            })
        },
        _renderItemData: function (c, d) {
            return this._renderItem(c, d).data("ui-autocomplete-item", d)
        },
        _renderItem: function (d, c) {
            return k("<li>").append(k("<div>").text(c.label)).appendTo(d)
        },
        _move: function (c, d) {
            return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(c) || this.menu.isLastItem() && /^next/.test(c) ? (this.isMultiLine || this._value(this.term), this.menu.blur(), void 0) : (this.menu[c](d), void 0) : (this.search(null, d), void 0)
        },
        widget: function () {
            return this.menu.element
        },
        _value: function () {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function (c, d) {
            (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(c, d), d.preventDefault())
        },
        _isContentEditable: function (c) {
            if (!c.length) {
                return !1
            }
            var d = c.prop("contentEditable");
            return "inherit" === d ? this._isContentEditable(c.parent()) : "true" === d
        }
    }), k.extend(k.ui.autocomplete, {
        escapeRegex: function (c) {
            return c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        }, filter: function (f, c) {
            var d = RegExp(k.ui.autocomplete.escapeRegex(c), "i");
            return k.grep(f, function (e) {
                return d.test(e.label || e.value || e)
            })
        }
    }), k.widget("ui.autocomplete", k.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function (c) {
                    return c + (c > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        }, __response: function (d) {
            var c;
            this._superApply(arguments), this.options.disabled || this.cancelSearch || (c = d && d.length ? this.options.messages.results(d.length) : this.options.messages.noResults, this.liveRegion.children().hide(), k("<div>").text(c).appendTo(this.liveRegion))
        }
    }), k.ui.autocomplete;
    var E = /ui-corner-([a-z]){2,6}/g;
    k.widget("ui.controlgroup", {
        version: "1.12.1",
        defaultElement: "<div>",
        options: {
            direction: "horizontal",
            disabled: null,
            onlyVisible: !0,
            items: {
                button: "input[type=button], input[type=submit], input[type=reset], button, a",
                controlgroupLabel: ".ui-controlgroup-label",
                checkboxradio: "input[type='checkbox'], input[type='radio']",
                selectmenu: "select",
                spinner: ".ui-spinner-input"
            }
        },
        _create: function () {
            this._enhance()
        },
        _enhance: function () {
            this.element.attr("role", "toolbar"), this.refresh()
        },
        _destroy: function () {
            this._callChildMethod("destroy"), this.childWidgets.removeData("ui-controlgroup-data"), this.element.removeAttr("role"), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()
        },
        _initWidgets: function () {
            var d = this, c = [];
            k.each(this.options.items, function (f, h) {
                var g, e = {};
                return h ? "controlgroupLabel" === f ? (g = d.element.find(h), g.each(function () {
                    var i = k(this);
                    i.children(".ui-controlgroup-label-contents").length || i.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")
                }), d._addClass(g, null, "ui-widget ui-widget-content ui-state-default"), c = c.concat(g.get()), void 0) : (k.fn[f] && (e = d["_" + f + "Options"] ? d["_" + f + "Options"]("middle") : {classes: {}}, d.element.find(h).each(function () {
                    var p = k(this), m = p[f]("instance"), l = k.widget.extend({}, e);
                    if ("button" !== f || !p.parent(".ui-spinner").length) {
                        m || (m = p[f]()[f]("instance")), m && (l.classes = d._resolveClassesValues(l.classes, m)), p[f](l);
                        var i = p[f]("widget");
                        k.data(i[0], "ui-controlgroup-data", m ? m : p[f]("instance")), c.push(i[0])
                    }
                })), void 0) : void 0
            }), this.childWidgets = k(k.unique(c)), this._addClass(this.childWidgets, "ui-controlgroup-item")
        },
        _callChildMethod: function (c) {
            this.childWidgets.each(function () {
                var d = k(this), e = d.data("ui-controlgroup-data");
                e && e[c] && e[c]()
            })
        },
        _updateCornerClass: function (d, g) {
            var c = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all",
                f = this._buildSimpleOptions(g, "label").classes.label;
            this._removeClass(d, null, c), this._addClass(d, null, f)
        },
        _buildSimpleOptions: function (d, g) {
            var c = "vertical" === this.options.direction, f = {classes: {}};
            return f.classes[g] = {
                middle: "",
                first: "ui-corner-" + (c ? "top" : "left"),
                last: "ui-corner-" + (c ? "bottom" : "right"),
                only: "ui-corner-all"
            }[d], f
        },
        _spinnerOptions: function (c) {
            var d = this._buildSimpleOptions(c, "ui-spinner");
            return d.classes["ui-spinner-up"] = "", d.classes["ui-spinner-down"] = "", d
        },
        _buttonOptions: function (c) {
            return this._buildSimpleOptions(c, "ui-button")
        },
        _checkboxradioOptions: function (c) {
            return this._buildSimpleOptions(c, "ui-checkboxradio-label")
        },
        _selectmenuOptions: function (c) {
            var d = "vertical" === this.options.direction;
            return {
                width: d ? "auto" : !1,
                classes: {
                    middle: {"ui-selectmenu-button-open": "", "ui-selectmenu-button-closed": ""},
                    first: {
                        "ui-selectmenu-button-open": "ui-corner-" + (d ? "top" : "tl"),
                        "ui-selectmenu-button-closed": "ui-corner-" + (d ? "top" : "left")
                    },
                    last: {
                        "ui-selectmenu-button-open": d ? "" : "ui-corner-tr",
                        "ui-selectmenu-button-closed": "ui-corner-" + (d ? "bottom" : "right")
                    },
                    only: {"ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all"}
                }[c]
            }
        },
        _resolveClassesValues: function (f, c) {
            var d = {};
            return k.each(f, function (g) {
                var e = c.options.classes[g] || "";
                e = k.trim(e.replace(E, "")), d[g] = (e + " " + f[g]).replace(/\s+/g, " ")
            }), d
        },
        _setOption: function (c, d) {
            return "direction" === c && this._removeClass("ui-controlgroup-" + this.options.direction), this._super(c, d), "disabled" === c ? (this._callChildMethod(d ? "disable" : "enable"), void 0) : (this.refresh(), void 0)
        },
        refresh: function () {
            var d, c = this;
            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction), "horizontal" === this.options.direction && this._addClass(null, "ui-helper-clearfix"), this._initWidgets(), d = this.childWidgets, this.options.onlyVisible && (d = d.filter(":visible")), d.length && (k.each(["first", "last"], function (e, f) {
                var h = d[f]().data("ui-controlgroup-data");
                if (h && c["_" + h.widgetName + "Options"]) {
                    var g = c["_" + h.widgetName + "Options"](1 === d.length ? "only" : f);
                    g.classes = c._resolveClassesValues(g.classes, h), h.element[h.widgetName](g)
                } else {
                    c._updateCornerClass(d[f](), f)
                }
            }), this._callChildMethod("refresh"))
        }
    }), k.widget("ui.checkboxradio", [k.ui.formResetMixin, {
        version: "1.12.1",
        options: {
            disabled: null,
            label: null,
            icon: !0,
            classes: {"ui-checkboxradio-label": "ui-corner-all", "ui-checkboxradio-icon": "ui-corner-all"}
        },
        _getCreateOptions: function () {
            var f, c, d = this, g = this._super() || {};
            return this._readType(), c = this.element.labels(), this.label = k(c[c.length - 1]), this.label.length || k.error("No label found for checkboxradio widget"), this.originalLabel = "", this.label.contents().not(this.element[0]).each(function () {
                d.originalLabel += 3 === this.nodeType ? k(this).text() : this.outerHTML
            }), this.originalLabel && (g.label = this.originalLabel), f = this.element[0].disabled, null != f && (g.disabled = f), g
        },
        _create: function () {
            var c = this.element[0].checked;
            this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), this._setOption("disabled", this.options.disabled), this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"), this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget"), "radio" === this.type && this._addClass(this.label, "ui-checkboxradio-radio-label"), this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), this._enhance(), c && (this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active"), this.icon && this._addClass(this.icon, null, "ui-state-hover")), this._on({
                change: "_toggleClasses",
                focus: function () {
                    this._addClass(this.label, null, "ui-state-focus ui-visual-focus")
                },
                blur: function () {
                    this._removeClass(this.label, null, "ui-state-focus ui-visual-focus")
                }
            })
        },
        _readType: function () {
            var c = this.element[0].nodeName.toLowerCase();
            this.type = this.element[0].type, "input" === c && /radio|checkbox/.test(this.type) || k.error("Can't create checkboxradio on element.nodeName=" + c + " and element.type=" + this.type)
        },
        _enhance: function () {
            this._updateIcon(this.element[0].checked)
        },
        widget: function () {
            return this.label
        },
        _getRadioGroup: function () {
            var f, c = this.element[0].name, d = "input[name='" + k.ui.escapeSelector(c) + "']";
            return c ? (f = this.form.length ? k(this.form[0].elements).filter(d) : k(d).filter(function () {
                return 0 === k(this).form().length
            }), f.not(this.element)) : k([])
        },
        _toggleClasses: function () {
            var c = this.element[0].checked;
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", c), this.options.icon && "checkbox" === this.type && this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", c)._toggleClass(this.icon, null, "ui-icon-blank", !c), "radio" === this.type && this._getRadioGroup().each(function () {
                var d = k(this).checkboxradio("instance");
                d && d._removeClass(d.label, "ui-checkboxradio-checked", "ui-state-active")
            })
        },
        _destroy: function () {
            this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove())
        },
        _setOption: function (c, d) {
            return "label" !== c || d ? (this._super(c, d), "disabled" === c ? (this._toggleClass(this.label, null, "ui-state-disabled", d), this.element[0].disabled = d, void 0) : (this.refresh(), void 0)) : void 0
        },
        _updateIcon: function (d) {
            var c = "ui-icon ui-icon-background ";
            this.options.icon ? (this.icon || (this.icon = k("<span>"), this.iconSpace = k("<span> </span>"), this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")), "checkbox" === this.type ? (c += d ? "ui-icon-check ui-state-checked" : "ui-icon-blank", this._removeClass(this.icon, null, d ? "ui-icon-blank" : "ui-icon-check")) : c += "ui-icon-blank", this._addClass(this.icon, "ui-checkboxradio-icon", c), d || this._removeClass(this.icon, null, "ui-icon-check ui-state-checked"), this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), this.iconSpace.remove(), delete this.icon)
        },
        _updateLabel: function () {
            var c = this.label.contents().not(this.element[0]);
            this.icon && (c = c.not(this.icon[0])), this.iconSpace && (c = c.not(this.iconSpace[0])), c.remove(), this.label.append(this.options.label)
        },
        refresh: function () {
            var c = this.element[0].checked, d = this.element[0].disabled;
            this._updateIcon(c), this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", c), null !== this.options.label && this._updateLabel(), d !== this.options.disabled && this._setOptions({disabled: d})
        }
    }]), k.ui.checkboxradio, k.widget("ui.button", {
        version: "1.12.1",
        defaultElement: "<button>",
        options: {
            classes: {"ui-button": "ui-corner-all"},
            disabled: null,
            icon: null,
            iconPosition: "beginning",
            label: null,
            showLabel: !0
        },
        _getCreateOptions: function () {
            var c, d = this._super() || {};
            return this.isInput = this.element.is("input"), c = this.element[0].disabled, null != c && (d.disabled = c), this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (d.label = this.originalLabel), d
        },
        _create: function () {
            !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1), this.hasTitle = !!this.element.attr("title"), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), this._addClass("ui-button", "ui-widget"), this._setOption("disabled", this.options.disabled), this._enhance(), this.element.is("a") && this._on({
                keyup: function (c) {
                    c.keyCode === k.ui.keyCode.SPACE && (c.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger("click"))
                }
            })
        },
        _enhance: function () {
            this.element.is("button") || this.element.attr("role", "button"), this.options.icon && (this._updateIcon("icon", this.options.icon), this._updateTooltip())
        },
        _updateTooltip: function () {
            this.title = this.element.attr("title"), this.options.showLabel || this.title || this.element.attr("title", this.options.label)
        },
        _updateIcon: function (f, c) {
            var d = "iconPosition" !== f, h = d ? this.options.iconPosition : c, g = "top" === h || "bottom" === h;
            this.icon ? d && this._removeClass(this.icon, null, this.options.icon) : (this.icon = k("<span>"), this._addClass(this.icon, "ui-button-icon", "ui-icon"), this.options.showLabel || this._addClass("ui-button-icon-only")), d && this._addClass(this.icon, null, c), this._attachIcon(h), g ? (this._addClass(this.icon, null, "ui-widget-icon-block"), this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = k("<span> </span>"), this._addClass(this.iconSpace, "ui-button-icon-space")), this._removeClass(this.icon, null, "ui-wiget-icon-block"), this._attachIconSpace(h))
        },
        _destroy: function () {
            this.element.removeAttr("role"), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), this.hasTitle || this.element.removeAttr("title")
        },
        _attachIconSpace: function (c) {
            this.icon[/^(?:end|bottom)/.test(c) ? "before" : "after"](this.iconSpace)
        },
        _attachIcon: function (c) {
            this.element[/^(?:end|bottom)/.test(c) ? "append" : "prepend"](this.icon)
        },
        _setOptions: function (d) {
            var f = void 0 === d.showLabel ? this.options.showLabel : d.showLabel,
                c = void 0 === d.icon ? this.options.icon : d.icon;
            f || c || (d.showLabel = !0), this._super(d)
        },
        _setOption: function (c, d) {
            "icon" === c && (d ? this._updateIcon(c, d) : this.icon && (this.icon.remove(), this.iconSpace && this.iconSpace.remove())), "iconPosition" === c && this._updateIcon(c, d), "showLabel" === c && (this._toggleClass("ui-button-icon-only", null, !d), this._updateTooltip()), "label" === c && (this.isInput ? this.element.val(d) : (this.element.html(d), this.icon && (this._attachIcon(this.options.iconPosition), this._attachIconSpace(this.options.iconPosition)))), this._super(c, d), "disabled" === c && (this._toggleClass(null, "ui-state-disabled", d), this.element[0].disabled = d, d && this.element.blur())
        },
        refresh: function () {
            var c = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
            c !== this.options.disabled && this._setOptions({disabled: c}), this._updateTooltip()
        }
    }), k.uiBackCompat !== !1 && (k.widget("ui.button", k.ui.button, {
        options: {
            text: !0,
            icons: {primary: null, secondary: null}
        }, _create: function () {
            this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, this.options.iconPosition = "end"), this._super()
        }, _setOption: function (c, d) {
            return "text" === c ? (this._super("showLabel", d), void 0) : ("showLabel" === c && (this.options.text = d), "icon" === c && (this.options.icons.primary = d), "icons" === c && (d.primary ? (this._super("icon", d.primary), this._super("iconPosition", "beginning")) : d.secondary && (this._super("icon", d.secondary), this._super("iconPosition", "end"))), this._superApply(arguments), void 0)
        }
    }), k.fn.button = function (c) {
        return function () {
            return !this.length || this.length && "INPUT" !== this[0].tagName || this.length && "INPUT" === this[0].tagName && "checkbox" !== this.attr("type") && "radio" !== this.attr("type") ? c.apply(this, arguments) : (k.ui.checkboxradio || k.error("Checkboxradio widget missing"), 0 === arguments.length ? this.checkboxradio({icon: !1}) : this.checkboxradio.apply(this, arguments))
        }
    }(k.fn.button), k.fn.buttonset = function () {
        return k.ui.controlgroup || k.error("Controlgroup widget missing"), "option" === arguments[0] && "items" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]]) : "option" === arguments[0] && "items" === arguments[1] ? this.controlgroup.apply(this, [arguments[0], "items.button"]) : ("object" == typeof arguments[0] && arguments[0].items && (arguments[0].items = {button: arguments[0].items}), this.controlgroup.apply(this, arguments))
    }), k.ui.button, k.extend(k.ui, {datepicker: {version: "1.12.1"}});
    var A;
    var K = !1;
    k(document).on("mouseup", function () {
        K = !1
    }), k.widget("ui.mouse", {
        version: "1.12.1",
        options: {cancel: "input, textarea, button, select, option", distance: 1, delay: 0},
        _mouseInit: function () {
            var c = this;
            this.element.on("mousedown." + this.widgetName, function (d) {
                return c._mouseDown(d)
            }).on("click." + this.widgetName, function (d) {
                return !0 === k.data(d.target, c.widgetName + ".preventClickEvent") ? (k.removeData(d.target, c.widgetName + ".preventClickEvent"), d.stopImmediatePropagation(), !1) : void 0
            }), this.started = !1
        },
        _mouseDestroy: function () {
            this.element.off("." + this.widgetName), this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function (f) {
            if (!K) {
                this._mouseMoved = !1, this._mouseStarted && this._mouseUp(f), this._mouseDownEvent = f;
                var c = this, d = 1 === f.which,
                    g = "string" == typeof this.options.cancel && f.target.nodeName ? k(f.target).closest(this.options.cancel).length : !1;
                return d && !g && this._mouseCapture(f) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
                    c.mouseDelayMet = !0
                }, this.options.delay)), this._mouseDistanceMet(f) && this._mouseDelayMet(f) && (this._mouseStarted = this._mouseStart(f) !== !1, !this._mouseStarted) ? (f.preventDefault(), !0) : (!0 === k.data(f.target, this.widgetName + ".preventClickEvent") && k.removeData(f.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (e) {
                    return c._mouseMove(e)
                }, this._mouseUpDelegate = function (e) {
                    return c._mouseUp(e)
                }, this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate), f.preventDefault(), K = !0, !0)) : !0
            }
        },
        _mouseMove: function (c) {
            if (this._mouseMoved) {
                if (k.ui.ie && (!document.documentMode || 9 > document.documentMode) && !c.button) {
                    return this._mouseUp(c)
                }
                if (!c.which) {
                    if (c.originalEvent.altKey || c.originalEvent.ctrlKey || c.originalEvent.metaKey || c.originalEvent.shiftKey) {
                        this.ignoreMissingWhich = !0
                    } else {
                        if (!this.ignoreMissingWhich) {
                            return this._mouseUp(c)
                        }
                    }
                }
            }
            return (c.which || c.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(c), c.preventDefault()) : (this._mouseDistanceMet(c) && this._mouseDelayMet(c) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, c) !== !1, this._mouseStarted ? this._mouseDrag(c) : this._mouseUp(c)), !this._mouseStarted)
        },
        _mouseUp: function (c) {
            this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, c.target === this._mouseDownEvent.target && k.data(c.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(c)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, K = !1, c.preventDefault()
        },
        _mouseDistanceMet: function (c) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - c.pageX), Math.abs(this._mouseDownEvent.pageY - c.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function () {
            return this.mouseDelayMet
        },
        _mouseStart: function () {
        },
        _mouseDrag: function () {
        },
        _mouseStop: function () {
        },
        _mouseCapture: function () {
            return !0
        }
    }), k.ui.plugin = {
        add: function (f, c, d) {
            var h, g = k.ui[f].prototype;
            for (h in d) {
                g.plugins[h] = g.plugins[h] || [], g.plugins[h].push([c, d[h]])
            }
        }, call: function (d, g, c, f) {
            var l, h = d.plugins[g];
            if (h && (f || d.element[0].parentNode && 11 !== d.element[0].parentNode.nodeType)) {
                for (l = 0; h.length > l; l++) {
                    d.options[h[l][0]] && h[l][1].apply(d.element, c)
                }
            }
        }
    }, k.ui.safeBlur = function (c) {
        c && "body" !== c.nodeName.toLowerCase() && k(c).trigger("blur")
    }, k.widget("ui.draggable", k.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function () {
            "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass("ui-draggable"), this._setHandleClassName(), this._mouseInit()
        },
        _setOption: function (c, d) {
            this._super(c, d), "handle" === c && (this._removeHandleClassName(), this._setHandleClassName())
        },
        _destroy: function () {
            return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this._removeHandleClassName(), this._mouseDestroy(), void 0)
        },
        _mouseCapture: function (d) {
            var c = this.options;
            return this.helper || c.disabled || k(d.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(d), this.handle ? (this._blurActiveElement(d), this._blockFrames(c.iframeFix === !0 ? "iframe" : c.iframeFix), !0) : !1)
        },
        _blockFrames: function (c) {
            this.iframeBlocks = this.document.find(c).map(function () {
                var d = k(this);
                return k("<div>").css("position", "absolute").appendTo(d.parent()).outerWidth(d.outerWidth()).outerHeight(d.outerHeight()).offset(d.offset())[0]
            })
        },
        _unblockFrames: function () {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _blurActiveElement: function (f) {
            var c = k.ui.safeActiveElement(this.document[0]), d = k(f.target);
            d.closest(c).length || k.ui.safeBlur(c)
        },
        _mouseStart: function (d) {
            var c = this.options;
            return this.helper = this._createHelper(d), this._addClass(this.helper, "ui-draggable-dragging"), this._cacheHelperProportions(), k.ui.ddmanager && (k.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function () {
                return "fixed" === k(this).css("position")
            }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(d), this.originalPosition = this.position = this._generatePosition(d, !1), this.originalPageX = d.pageX, this.originalPageY = d.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), this._setContainment(), this._trigger("start", d) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), k.ui.ddmanager && !c.dropBehaviour && k.ui.ddmanager.prepareOffsets(this, d), this._mouseDrag(d, !0), k.ui.ddmanager && k.ui.ddmanager.dragStart(this, d), !0)
        },
        _refreshOffsets: function (c) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: !1,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }, this.offset.click = {left: c.pageX - this.offset.left, top: c.pageY - this.offset.top}
        },
        _mouseDrag: function (f, c) {
            if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(f, !0), this.positionAbs = this._convertPositionTo("absolute"), !c) {
                var d = this._uiHash();
                if (this._trigger("drag", f, d) === !1) {
                    return this._mouseUp(new k.Event("mouseup", f)), !1
                }
                this.position = d.position
            }
            return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", k.ui.ddmanager && k.ui.ddmanager.drag(this, f), !1
        },
        _mouseStop: function (f) {
            var c = this, d = !1;
            return k.ui.ddmanager && !this.options.dropBehaviour && (d = k.ui.ddmanager.drop(this, f)), this.dropped && (d = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !d || "valid" === this.options.revert && d || this.options.revert === !0 || k.isFunction(this.options.revert) && this.options.revert.call(this.element, d) ? k(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                c._trigger("stop", f) !== !1 && c._clear()
            }) : this._trigger("stop", f) !== !1 && this._clear(), !1
        },
        _mouseUp: function (c) {
            return this._unblockFrames(), k.ui.ddmanager && k.ui.ddmanager.dragStop(this, c), this.handleElement.is(c.target) && this.element.trigger("focus"), k.ui.mouse.prototype._mouseUp.call(this, c)
        },
        cancel: function () {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new k.Event("mouseup", {target: this.element[0]})) : this._clear(), this
        },
        _getHandle: function (c) {
            return this.options.handle ? !!k(c.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _setHandleClassName: function () {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this._addClass(this.handleElement, "ui-draggable-handle")
        },
        _removeHandleClassName: function () {
            this._removeClass(this.handleElement, "ui-draggable-handle")
        },
        _createHelper: function (f) {
            var c = this.options, d = k.isFunction(c.helper),
                g = d ? k(c.helper.apply(this.element[0], [f])) : "clone" === c.helper ? this.element.clone().removeAttr("id") : this.element;
            return g.parents("body").length || g.appendTo("parent" === c.appendTo ? this.element[0].parentNode : c.appendTo), d && g[0] === this.element[0] && this._setPositionRelative(), g[0] === this.element[0] || /(fixed|absolute)/.test(g.css("position")) || g.css("position", "absolute"), g
        },
        _setPositionRelative: function () {
            /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative")
        },
        _adjustOffsetFromHelper: function (c) {
            "string" == typeof c && (c = c.split(" ")), k.isArray(c) && (c = {
                left: +c[0],
                top: +c[1] || 0
            }), "left" in c && (this.offset.click.left = c.left + this.margins.left), "right" in c && (this.offset.click.left = this.helperProportions.width - c.right + this.margins.left), "top" in c && (this.offset.click.top = c.top + this.margins.top), "bottom" in c && (this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top)
        },
        _isRootNode: function (c) {
            return /(html|body)/i.test(c.tagName) || c === this.document[0]
        },
        _getParentOffset: function () {
            var d = this.offsetParent.offset(), c = this.document[0];
            return "absolute" === this.cssPosition && this.scrollParent[0] !== c && k.contains(this.scrollParent[0], this.offsetParent[0]) && (d.left += this.scrollParent.scrollLeft(), d.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (d = {
                top: 0,
                left: 0
            }), {
                top: d.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: d.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if ("relative" !== this.cssPosition) {
                return {top: 0, left: 0}
            }
            var c = this.element.position(), d = this._isRootNode(this.scrollParent[0]);
            return {
                top: c.top - (parseInt(this.helper.css("top"), 10) || 0) + (d ? 0 : this.scrollParent.scrollTop()),
                left: c.left - (parseInt(this.helper.css("left"), 10) || 0) + (d ? 0 : this.scrollParent.scrollLeft())
            }
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {width: this.helper.outerWidth(), height: this.helper.outerHeight()}
        },
        _setContainment: function () {
            var f, c, d, h = this.options, g = this.document[0];
            return this.relativeContainer = null, h.containment ? "window" === h.containment ? (this.containment = [k(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, k(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, k(window).scrollLeft() + k(window).width() - this.helperProportions.width - this.margins.left, k(window).scrollTop() + (k(window).height() || g.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === h.containment ? (this.containment = [0, 0, k(g).width() - this.helperProportions.width - this.margins.left, (k(g).height() || g.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : h.containment.constructor === Array ? (this.containment = h.containment, void 0) : ("parent" === h.containment && (h.containment = this.helper[0].parentNode), c = k(h.containment), d = c[0], d && (f = /(scroll|auto)/.test(c.css("overflow")), this.containment = [(parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = c), void 0) : (this.containment = null, void 0)
        },
        _convertPositionTo: function (d, g) {
            g || (g = this.position);
            var c = "absolute" === d ? 1 : -1, f = this._isRootNode(this.scrollParent[0]);
            return {
                top: g.top + this.offset.relative.top * c + this.offset.parent.top * c - ("fixed" === this.cssPosition ? -this.offset.scroll.top : f ? 0 : this.offset.scroll.top) * c,
                left: g.left + this.offset.relative.left * c + this.offset.parent.left * c - ("fixed" === this.cssPosition ? -this.offset.scroll.left : f ? 0 : this.offset.scroll.left) * c
            }
        },
        _generatePosition: function (L, u) {
            var m, M, f, d, v = this.options, c = this._isRootNode(this.scrollParent[0]), p = L.pageX, g = L.pageY;
            return c && this.offset.scroll || (this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            }), u && (this.containment && (this.relativeContainer ? (M = this.relativeContainer.offset(), m = [this.containment[0] + M.left, this.containment[1] + M.top, this.containment[2] + M.left, this.containment[3] + M.top]) : m = this.containment, L.pageX - this.offset.click.left < m[0] && (p = m[0] + this.offset.click.left), L.pageY - this.offset.click.top < m[1] && (g = m[1] + this.offset.click.top), L.pageX - this.offset.click.left > m[2] && (p = m[2] + this.offset.click.left), L.pageY - this.offset.click.top > m[3] && (g = m[3] + this.offset.click.top)), v.grid && (f = v.grid[1] ? this.originalPageY + Math.round((g - this.originalPageY) / v.grid[1]) * v.grid[1] : this.originalPageY, g = m ? f - this.offset.click.top >= m[1] || f - this.offset.click.top > m[3] ? f : f - this.offset.click.top >= m[1] ? f - v.grid[1] : f + v.grid[1] : f, d = v.grid[0] ? this.originalPageX + Math.round((p - this.originalPageX) / v.grid[0]) * v.grid[0] : this.originalPageX, p = m ? d - this.offset.click.left >= m[0] || d - this.offset.click.left > m[2] ? d : d - this.offset.click.left >= m[0] ? d - v.grid[0] : d + v.grid[0] : d), "y" === v.axis && (p = this.originalPageX), "x" === v.axis && (g = this.originalPageY)), {
                top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : c ? 0 : this.offset.scroll.top),
                left: p - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : c ? 0 : this.offset.scroll.left)
            }
        },
        _clear: function () {
            this._removeClass(this.helper, "ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy()
        },
        _trigger: function (f, c, d) {
            return d = d || this._uiHash(), k.ui.plugin.call(this, f, [c, d, this], !0), /^(drag|start|stop)/.test(f) && (this.positionAbs = this._convertPositionTo("absolute"), d.offset = this.positionAbs), k.Widget.prototype._trigger.call(this, f, c, d)
        },
        plugins: {},
        _uiHash: function () {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }), k.ui.plugin.add("draggable", "connectToSortable", {
        start: function (f, c, d) {
            var g = k.extend({}, c, {item: d.element});
            d.sortables = [], k(d.options.connectToSortable).each(function () {
                var e = k(this).sortable("instance");
                e && !e.options.disabled && (d.sortables.push(e), e.refreshPositions(), e._trigger("activate", f, g))
            })
        }, stop: function (f, c, d) {
            var g = k.extend({}, c, {item: d.element});
            d.cancelHelperRemoval = !1, k.each(d.sortables, function () {
                var e = this;
                e.isOver ? (e.isOver = 0, d.cancelHelperRemoval = !0, e.cancelHelperRemoval = !1, e._storedCSS = {
                    position: e.placeholder.css("position"),
                    top: e.placeholder.css("top"),
                    left: e.placeholder.css("left")
                }, e._mouseStop(f), e.options.helper = e.options._helper) : (e.cancelHelperRemoval = !0, e._trigger("deactivate", f, g))
            })
        }, drag: function (f, c, d) {
            k.each(d.sortables, function () {
                var g = !1, e = this;
                e.positionAbs = d.positionAbs, e.helperProportions = d.helperProportions, e.offset.click = d.offset.click, e._intersectsWith(e.containerCache) && (g = !0, k.each(d.sortables, function () {
                    return this.positionAbs = d.positionAbs, this.helperProportions = d.helperProportions, this.offset.click = d.offset.click, this !== e && this._intersectsWith(this.containerCache) && k.contains(e.element[0], this.element[0]) && (g = !1), g
                })), g ? (e.isOver || (e.isOver = 1, d._parent = c.helper.parent(), e.currentItem = c.helper.appendTo(e.element).data("ui-sortable-item", !0), e.options._helper = e.options.helper, e.options.helper = function () {
                    return c.helper[0]
                }, f.target = e.currentItem[0], e._mouseCapture(f, !0), e._mouseStart(f, !0, !0), e.offset.click.top = d.offset.click.top, e.offset.click.left = d.offset.click.left, e.offset.parent.left -= d.offset.parent.left - e.offset.parent.left, e.offset.parent.top -= d.offset.parent.top - e.offset.parent.top, d._trigger("toSortable", f), d.dropped = e.element, k.each(d.sortables, function () {
                    this.refreshPositions()
                }), d.currentItem = d.element, e.fromOutside = d), e.currentItem && (e._mouseDrag(f), c.position = e.position)) : e.isOver && (e.isOver = 0, e.cancelHelperRemoval = !0, e.options._revert = e.options.revert, e.options.revert = !1, e._trigger("out", f, e._uiHash(e)), e._mouseStop(f, !0), e.options.revert = e.options._revert, e.options.helper = e.options._helper, e.placeholder && e.placeholder.remove(), c.helper.appendTo(d._parent), d._refreshOffsets(f), c.position = d._generatePosition(f, !0), d._trigger("fromSortable", f), d.dropped = !1, k.each(d.sortables, function () {
                    this.refreshPositions()
                }))
            })
        }
    }), k.ui.plugin.add("draggable", "cursor", {
        start: function (f, c, d) {
            var h = k("body"), g = d.options;
            h.css("cursor") && (g._cursor = h.css("cursor")), h.css("cursor", g.cursor)
        }, stop: function (f, c, d) {
            var g = d.options;
            g._cursor && k("body").css("cursor", g._cursor)
        }
    }), k.ui.plugin.add("draggable", "opacity", {
        start: function (f, c, d) {
            var h = k(c.helper), g = d.options;
            h.css("opacity") && (g._opacity = h.css("opacity")), h.css("opacity", g.opacity)
        }, stop: function (f, c, d) {
            var g = d.options;
            g._opacity && k(c.helper).css("opacity", g._opacity)
        }
    }), k.ui.plugin.add("draggable", "scroll", {
        start: function (d, f, c) {
            c.scrollParentNotHidden || (c.scrollParentNotHidden = c.helper.scrollParent(!1)), c.scrollParentNotHidden[0] !== c.document[0] && "HTML" !== c.scrollParentNotHidden[0].tagName && (c.overflowOffset = c.scrollParentNotHidden.offset())
        }, drag: function (h, d, f) {
            var m = f.options, l = !1, c = f.scrollParentNotHidden[0], g = f.document[0];
            c !== g && "HTML" !== c.tagName ? (m.axis && "x" === m.axis || (f.overflowOffset.top + c.offsetHeight - h.pageY < m.scrollSensitivity ? c.scrollTop = l = c.scrollTop + m.scrollSpeed : h.pageY - f.overflowOffset.top < m.scrollSensitivity && (c.scrollTop = l = c.scrollTop - m.scrollSpeed)), m.axis && "y" === m.axis || (f.overflowOffset.left + c.offsetWidth - h.pageX < m.scrollSensitivity ? c.scrollLeft = l = c.scrollLeft + m.scrollSpeed : h.pageX - f.overflowOffset.left < m.scrollSensitivity && (c.scrollLeft = l = c.scrollLeft - m.scrollSpeed))) : (m.axis && "x" === m.axis || (h.pageY - k(g).scrollTop() < m.scrollSensitivity ? l = k(g).scrollTop(k(g).scrollTop() - m.scrollSpeed) : k(window).height() - (h.pageY - k(g).scrollTop()) < m.scrollSensitivity && (l = k(g).scrollTop(k(g).scrollTop() + m.scrollSpeed))), m.axis && "y" === m.axis || (h.pageX - k(g).scrollLeft() < m.scrollSensitivity ? l = k(g).scrollLeft(k(g).scrollLeft() - m.scrollSpeed) : k(window).width() - (h.pageX - k(g).scrollLeft()) < m.scrollSensitivity && (l = k(g).scrollLeft(k(g).scrollLeft() + m.scrollSpeed)))), l !== !1 && k.ui.ddmanager && !m.dropBehaviour && k.ui.ddmanager.prepareOffsets(f, h)
        }
    }), k.ui.plugin.add("draggable", "snap", {
        start: function (f, c, d) {
            var g = d.options;
            d.snapElements = [], k(g.snap.constructor !== String ? g.snap.items || ":data(ui-draggable)" : g.snap).each(function () {
                var l = k(this), h = l.offset();
                this !== d.element[0] && d.snapElements.push({
                    item: this,
                    width: l.outerWidth(),
                    height: l.outerHeight(),
                    top: h.top,
                    left: h.left
                })
            })
        }, drag: function (X, T, M) {
            var Q, P, ab, N, U, S, Z, L, Y, O, W = M.options, V = W.snapTolerance, R = T.offset.left,
                ac = R + M.helperProportions.width, t = T.offset.top, aa = t + M.helperProportions.height;
            for (Y = M.snapElements.length - 1; Y >= 0; Y--) {
                U = M.snapElements[Y].left - M.margins.left, S = U + M.snapElements[Y].width, Z = M.snapElements[Y].top - M.margins.top, L = Z + M.snapElements[Y].height, U - V > ac || R > S + V || Z - V > aa || t > L + V || !k.contains(M.snapElements[Y].item.ownerDocument, M.snapElements[Y].item) ? (M.snapElements[Y].snapping && M.options.snap.release && M.options.snap.release.call(M.element, X, k.extend(M._uiHash(), {snapItem: M.snapElements[Y].item})), M.snapElements[Y].snapping = !1) : ("inner" !== W.snapMode && (Q = V >= Math.abs(Z - aa), P = V >= Math.abs(L - t), ab = V >= Math.abs(U - ac), N = V >= Math.abs(S - R), Q && (T.position.top = M._convertPositionTo("relative", {
                    top: Z - M.helperProportions.height,
                    left: 0
                }).top), P && (T.position.top = M._convertPositionTo("relative", {
                    top: L,
                    left: 0
                }).top), ab && (T.position.left = M._convertPositionTo("relative", {
                    top: 0,
                    left: U - M.helperProportions.width
                }).left), N && (T.position.left = M._convertPositionTo("relative", {
                    top: 0,
                    left: S
                }).left)), O = Q || P || ab || N, "outer" !== W.snapMode && (Q = V >= Math.abs(Z - t), P = V >= Math.abs(L - aa), ab = V >= Math.abs(U - R), N = V >= Math.abs(S - ac), Q && (T.position.top = M._convertPositionTo("relative", {
                    top: Z,
                    left: 0
                }).top), P && (T.position.top = M._convertPositionTo("relative", {
                    top: L - M.helperProportions.height,
                    left: 0
                }).top), ab && (T.position.left = M._convertPositionTo("relative", {
                    top: 0,
                    left: U
                }).left), N && (T.position.left = M._convertPositionTo("relative", {
                    top: 0,
                    left: S - M.helperProportions.width
                }).left)), !M.snapElements[Y].snapping && (Q || P || ab || N || O) && M.options.snap.snap && M.options.snap.snap.call(M.element, X, k.extend(M._uiHash(), {snapItem: M.snapElements[Y].item})), M.snapElements[Y].snapping = Q || P || ab || N || O)
            }
        }
    }), k.ui.plugin.add("draggable", "stack", {
        start: function (g, d, f) {
            var l, h = f.options, c = k.makeArray(k(h.stack)).sort(function (n, m) {
                return (parseInt(k(n).css("zIndex"), 10) || 0) - (parseInt(k(m).css("zIndex"), 10) || 0)
            });
            c.length && (l = parseInt(k(c[0]).css("zIndex"), 10) || 0, k(c).each(function (i) {
                k(this).css("zIndex", l + i)
            }), this.css("zIndex", l + c.length))
        }
    }), k.ui.plugin.add("draggable", "zIndex", {
        start: function (f, c, d) {
            var h = k(c.helper), g = d.options;
            h.css("zIndex") && (g._zIndex = h.css("zIndex")), h.css("zIndex", g.zIndex)
        }, stop: function (f, c, d) {
            var g = d.options;
            g._zIndex && k(c.helper).css("zIndex", g._zIndex)
        }
    }), k.ui.draggable, k.widget("ui.resizable", k.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            classes: {"ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"},
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _num: function (c) {
            return parseFloat(c) || 0
        },
        _isNumber: function (c) {
            return !isNaN(parseFloat(c))
        },
        _hasScroll: function (f, c) {
            if ("hidden" === k(f).css("overflow")) {
                return !1
            }
            var d = c && "left" === c ? "scrollLeft" : "scrollTop", g = !1;
            return f[d] > 0 ? !0 : (f[d] = 1, g = f[d] > 0, f[d] = 0, g)
        },
        _create: function () {
            var f, c = this.options, d = this;
            this._addClass("ui-resizable"), k.extend(this, {
                _aspectRatio: !!c.aspectRatio,
                aspectRatio: c.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: c.helper || c.ghost || c.animate ? c.helper || "ui-resizable-helper" : null
            }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(k("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, f = {
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom"),
                marginLeft: this.originalElement.css("marginLeft")
            }, this.element.css(f), this.originalElement.css("margin", 0), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })), this.originalElement.css(f), this._proportionallyResize()), this._setupHandles(), c.autoHide && k(this.element).on("mouseenter", function () {
                c.disabled || (d._removeClass("ui-resizable-autohide"), d._handles.show())
            }).on("mouseleave", function () {
                c.disabled || d.resizing || (d._addClass("ui-resizable-autohide"), d._handles.hide())
            }), this._mouseInit()
        },
        _destroy: function () {
            this._mouseDestroy();
            var d, c = function (f) {
                k(f).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (c(this.element), d = this.element, this.originalElement.css({
                position: d.css("position"),
                width: d.outerWidth(),
                height: d.outerHeight(),
                top: d.css("top"),
                left: d.css("left")
            }).insertAfter(d), d.remove()), this.originalElement.css("resize", this.originalResizeStyle), c(this.originalElement), this
        },
        _setOption: function (c, d) {
            switch (this._super(c, d), c) {
                case"handles":
                    this._removeHandles(), this._setupHandles();
                    break;
                default:
            }
        },
        _setupHandles: function () {
            var h, d, f, m, l, c = this.options, g = this;
            if (this.handles = c.handles || (k(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"), this._handles = k(), this.handles.constructor === String) {
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), f = this.handles.split(","), this.handles = {}, d = 0; f.length > d; d++) {
                    h = k.trim(f[d]), m = "ui-resizable-" + h, l = k("<div>"), this._addClass(l, "ui-resizable-handle " + m), l.css({zIndex: c.zIndex}), this.handles[h] = ".ui-resizable-" + h, this.element.append(l)
                }
            }
            this._renderAxis = function (t) {
                var p, r, v, u;
                t = t || this.element;
                for (p in this.handles) {
                    this.handles[p].constructor === String ? this.handles[p] = this.element.children(this.handles[p]).first().show() : (this.handles[p].jquery || this.handles[p].nodeType) && (this.handles[p] = k(this.handles[p]), this._on(this.handles[p], {mousedown: g._mouseDown})), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (r = k(this.handles[p], this.element), u = /sw|ne|nw|se|n|s/.test(p) ? r.outerHeight() : r.outerWidth(), v = ["padding", /ne|nw|n/.test(p) ? "Top" : /se|sw|s/.test(p) ? "Bottom" : /^e$/.test(p) ? "Right" : "Left"].join(""), t.css(v, u), this._proportionallyResize()), this._handles = this._handles.add(this.handles[p])
                }
            }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.on("mouseover", function () {
                g.resizing || (this.className && (l = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), g.axis = l && l[1] ? l[1] : "se")
            }), c.autoHide && (this._handles.hide(), this._addClass("ui-resizable-autohide"))
        },
        _removeHandles: function () {
            this._handles.remove()
        },
        _mouseCapture: function (f) {
            var c, d, g = !1;
            for (c in this.handles) {
                d = k(this.handles[c])[0], (d === f.target || k.contains(d, f.target)) && (g = !0)
            }
            return !this.options.disabled && g
        },
        _mouseStart: function (g) {
            var d, f, l, h = this.options, c = this.element;
            return this.resizing = !0, this._renderProxy(), d = this._num(this.helper.css("left")), f = this._num(this.helper.css("top")), h.containment && (d += k(h.containment).scrollLeft() || 0, f += k(h.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
                left: d,
                top: f
            }, this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {width: c.width(), height: c.height()}, this.originalSize = this._helper ? {
                width: c.outerWidth(),
                height: c.outerHeight()
            } : {width: c.width(), height: c.height()}, this.sizeDiff = {
                width: c.outerWidth() - c.width(),
                height: c.outerHeight() - c.height()
            }, this.originalPosition = {left: d, top: f}, this.originalMousePosition = {
                left: g.pageX,
                top: g.pageY
            }, this.aspectRatio = "number" == typeof h.aspectRatio ? h.aspectRatio : this.originalSize.width / this.originalSize.height || 1, l = k(".ui-resizable-" + this.axis).css("cursor"), k("body").css("cursor", "auto" === l ? this.axis + "-resize" : l), this._addClass("ui-resizable-resizing"), this._propagate("start", g), !0
        },
        _mouseDrag: function (m) {
            var d, g, t = this.originalMousePosition, p = this.axis, c = m.pageX - t.left || 0,
                l = m.pageY - t.top || 0, f = this._change[p];
            return this._updatePrevProperties(), f ? (d = f.apply(this, [m, c, l]), this._updateVirtualBoundaries(m.shiftKey), (this._aspectRatio || m.shiftKey) && (d = this._updateRatio(d, m)), d = this._respectSize(d, m), this._updateCache(d), this._propagate("resize", m), g = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), k.isEmptyObject(g) || (this._updatePrevProperties(), this._trigger("resize", m, this.ui()), this._applyChanges()), !1) : !1
        },
        _mouseStop: function (u) {
            this.resizing = !1;
            var p, M, g, f, L, d, t, m = this.options, v = this;
            return this._helper && (p = this._proportionallyResizeElements, M = p.length && /textarea/i.test(p[0].nodeName), g = M && this._hasScroll(p[0], "left") ? 0 : v.sizeDiff.height, f = M ? 0 : v.sizeDiff.width, L = {
                width: v.helper.width() - f,
                height: v.helper.height() - g
            }, d = parseFloat(v.element.css("left")) + (v.position.left - v.originalPosition.left) || null, t = parseFloat(v.element.css("top")) + (v.position.top - v.originalPosition.top) || null, m.animate || this.element.css(k.extend(L, {
                top: t,
                left: d
            })), v.helper.height(v.size.height), v.helper.width(v.size.width), this._helper && !m.animate && this._proportionallyResize()), k("body").css("cursor", "auto"), this._removeClass("ui-resizable-resizing"), this._propagate("stop", u), this._helper && this.helper.remove(), !1
        },
        _updatePrevProperties: function () {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            }, this.prevSize = {width: this.size.width, height: this.size.height}
        },
        _applyChanges: function () {
            var c = {};
            return this.position.top !== this.prevPosition.top && (c.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (c.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (c.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (c.height = this.size.height + "px"), this.helper.css(c), c
        },
        _updateVirtualBoundaries: function (f) {
            var h, d, g, m, l, c = this.options;
            l = {
                minWidth: this._isNumber(c.minWidth) ? c.minWidth : 0,
                maxWidth: this._isNumber(c.maxWidth) ? c.maxWidth : 1 / 0,
                minHeight: this._isNumber(c.minHeight) ? c.minHeight : 0,
                maxHeight: this._isNumber(c.maxHeight) ? c.maxHeight : 1 / 0
            }, (this._aspectRatio || f) && (h = l.minHeight * this.aspectRatio, g = l.minWidth / this.aspectRatio, d = l.maxHeight * this.aspectRatio, m = l.maxWidth / this.aspectRatio, h > l.minWidth && (l.minWidth = h), g > l.minHeight && (l.minHeight = g), l.maxWidth > d && (l.maxWidth = d), l.maxHeight > m && (l.maxHeight = m)), this._vBoundaries = l
        },
        _updateCache: function (c) {
            this.offset = this.helper.offset(), this._isNumber(c.left) && (this.position.left = c.left), this._isNumber(c.top) && (this.position.top = c.top), this._isNumber(c.height) && (this.size.height = c.height), this._isNumber(c.width) && (this.size.width = c.width)
        },
        _updateRatio: function (d) {
            var g = this.position, c = this.size, f = this.axis;
            return this._isNumber(d.height) ? d.width = d.height * this.aspectRatio : this._isNumber(d.width) && (d.height = d.width / this.aspectRatio), "sw" === f && (d.left = g.left + (c.width - d.width), d.top = null), "nw" === f && (d.top = g.top + (c.height - d.height), d.left = g.left + (c.width - d.width)), d
        },
        _respectSize: function (N) {
            var v = this._vBoundaries, p = this.axis, O = this._isNumber(N.width) && v.maxWidth && v.maxWidth < N.width,
                g = this._isNumber(N.height) && v.maxHeight && v.maxHeight < N.height,
                f = this._isNumber(N.width) && v.minWidth && v.minWidth > N.width,
                M = this._isNumber(N.height) && v.minHeight && v.minHeight > N.height,
                d = this.originalPosition.left + this.originalSize.width,
                u = this.originalPosition.top + this.originalSize.height, m = /sw|nw|w/.test(p), L = /nw|ne|n/.test(p);
            return f && (N.width = v.minWidth), M && (N.height = v.minHeight), O && (N.width = v.maxWidth), g && (N.height = v.maxHeight), f && m && (N.left = d - v.minWidth), O && m && (N.left = d - v.maxWidth), M && L && (N.top = u - v.minHeight), g && L && (N.top = u - v.maxHeight), N.width || N.height || N.left || !N.top ? N.width || N.height || N.top || !N.left || (N.left = null) : N.top = null, N
        },
        _getPaddingPlusBorderDimensions: function (d) {
            for (var g = 0, c = [], f = [d.css("borderTopWidth"), d.css("borderRightWidth"), d.css("borderBottomWidth"), d.css("borderLeftWidth")], h = [d.css("paddingTop"), d.css("paddingRight"), d.css("paddingBottom"), d.css("paddingLeft")]; 4 > g; g++) {
                c[g] = parseFloat(f[g]) || 0, c[g] += parseFloat(h[g]) || 0
            }
            return {height: c[0] + c[2], width: c[1] + c[3]}
        },
        _proportionallyResize: function () {
            if (this._proportionallyResizeElements.length) {
                for (var d, f = 0, c = this.helper || this.element; this._proportionallyResizeElements.length > f; f++) {
                    d = this._proportionallyResizeElements[f], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(d)), d.css({
                        height: c.height() - this.outerDimensions.height || 0,
                        width: c.width() - this.outerDimensions.width || 0
                    })
                }
            }
        },
        _renderProxy: function () {
            var d = this.element, c = this.options;
            this.elementOffset = d.offset(), this._helper ? (this.helper = this.helper || k("<div style='overflow:hidden;'></div>"), this._addClass(this.helper, this._helper), this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++c.zIndex
            }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function (c, d) {
                return {width: this.originalSize.width + d}
            }, w: function (d, g) {
                var c = this.originalSize, f = this.originalPosition;
                return {left: f.left + g, width: c.width - g}
            }, n: function (d, g, c) {
                var f = this.originalSize, h = this.originalPosition;
                return {top: h.top + c, height: f.height - c}
            }, s: function (d, f, c) {
                return {height: this.originalSize.height + c}
            }, se: function (f, c, d) {
                return k.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [f, c, d]))
            }, sw: function (f, c, d) {
                return k.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [f, c, d]))
            }, ne: function (f, c, d) {
                return k.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [f, c, d]))
            }, nw: function (f, c, d) {
                return k.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [f, c, d]))
            }
        },
        _propagate: function (d, c) {
            k.ui.plugin.call(this, d, [c, this.ui()]), "resize" !== d && this._trigger(d, c, this.ui())
        },
        plugins: {},
        ui: function () {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }), k.ui.plugin.add("resizable", "animate", {
        stop: function (u) {
            var p = k(this).resizable("instance"), M = p.options, g = p._proportionallyResizeElements,
                f = g.length && /textarea/i.test(g[0].nodeName),
                L = f && p._hasScroll(g[0], "left") ? 0 : p.sizeDiff.height, d = f ? 0 : p.sizeDiff.width,
                t = {width: p.size.width - d, height: p.size.height - L},
                m = parseFloat(p.element.css("left")) + (p.position.left - p.originalPosition.left) || null,
                v = parseFloat(p.element.css("top")) + (p.position.top - p.originalPosition.top) || null;
            p.element.animate(k.extend(t, v && m ? {top: v, left: m} : {}), {
                duration: M.animateDuration,
                easing: M.animateEasing,
                step: function () {
                    var c = {
                        width: parseFloat(p.element.css("width")),
                        height: parseFloat(p.element.css("height")),
                        top: parseFloat(p.element.css("top")),
                        left: parseFloat(p.element.css("left"))
                    };
                    g && g.length && k(g[0]).css({
                        width: c.width,
                        height: c.height
                    }), p._updateCache(c), p._propagate("resize", u)
                }
            })
        }
    }), k.ui.plugin.add("resizable", "containment", {
        start: function () {
            var L, t, Q, m, g, O, f, v = k(this).resizable("instance"), p = v.options, N = v.element, P = p.containment,
                M = P instanceof k ? P.get(0) : /parent/.test(P) ? N.parent().get(0) : P;
            M && (v.containerElement = k(M), /document/.test(P) || P === document ? (v.containerOffset = {
                left: 0,
                top: 0
            }, v.containerPosition = {left: 0, top: 0}, v.parentData = {
                element: k(document),
                left: 0,
                top: 0,
                width: k(document).width(),
                height: k(document).height() || document.body.parentNode.scrollHeight
            }) : (L = k(M), t = [], k(["Top", "Right", "Left", "Bottom"]).each(function (c, d) {
                t[c] = v._num(L.css("padding" + d))
            }), v.containerOffset = L.offset(), v.containerPosition = L.position(), v.containerSize = {
                height: L.innerHeight() - t[3],
                width: L.innerWidth() - t[1]
            }, Q = v.containerOffset, m = v.containerSize.height, g = v.containerSize.width, O = v._hasScroll(M, "left") ? M.scrollWidth : g, f = v._hasScroll(M) ? M.scrollHeight : m, v.parentData = {
                element: M,
                left: Q.left,
                top: Q.top,
                width: O,
                height: f
            }))
        }, resize: function (N) {
            var L, S, t, m, Q = k(this).resizable("instance"), f = Q.options, M = Q.containerOffset, v = Q.position,
                P = Q._aspectRatio || N.shiftKey, R = {top: 0, left: 0}, O = Q.containerElement, g = !0;
            O[0] !== document && /static/.test(O.css("position")) && (R = M), v.left < (Q._helper ? M.left : 0) && (Q.size.width = Q.size.width + (Q._helper ? Q.position.left - M.left : Q.position.left - R.left), P && (Q.size.height = Q.size.width / Q.aspectRatio, g = !1), Q.position.left = f.helper ? M.left : 0), v.top < (Q._helper ? M.top : 0) && (Q.size.height = Q.size.height + (Q._helper ? Q.position.top - M.top : Q.position.top), P && (Q.size.width = Q.size.height * Q.aspectRatio, g = !1), Q.position.top = Q._helper ? M.top : 0), t = Q.containerElement.get(0) === Q.element.parent().get(0), m = /relative|absolute/.test(Q.containerElement.css("position")), t && m ? (Q.offset.left = Q.parentData.left + Q.position.left, Q.offset.top = Q.parentData.top + Q.position.top) : (Q.offset.left = Q.element.offset().left, Q.offset.top = Q.element.offset().top), L = Math.abs(Q.sizeDiff.width + (Q._helper ? Q.offset.left - R.left : Q.offset.left - M.left)), S = Math.abs(Q.sizeDiff.height + (Q._helper ? Q.offset.top - R.top : Q.offset.top - M.top)), L + Q.size.width >= Q.parentData.width && (Q.size.width = Q.parentData.width - L, P && (Q.size.height = Q.size.width / Q.aspectRatio, g = !1)), S + Q.size.height >= Q.parentData.height && (Q.size.height = Q.parentData.height - S, P && (Q.size.width = Q.size.height * Q.aspectRatio, g = !1)), g || (Q.position.left = Q.prevPosition.left, Q.position.top = Q.prevPosition.top, Q.size.width = Q.prevSize.width, Q.size.height = Q.prevSize.height)
        }, stop: function () {
            var t = k(this).resizable("instance"), m = t.options, v = t.containerOffset, f = t.containerPosition,
                d = t.containerElement, u = k(t.helper), c = u.offset(), p = u.outerWidth() - t.sizeDiff.width,
                g = u.outerHeight() - t.sizeDiff.height;
            t._helper && !m.animate && /relative/.test(d.css("position")) && k(this).css({
                left: c.left - f.left - v.left,
                width: p,
                height: g
            }), t._helper && !m.animate && /static/.test(d.css("position")) && k(this).css({
                left: c.left - f.left - v.left,
                width: p,
                height: g
            })
        }
    }), k.ui.plugin.add("resizable", "alsoResize", {
        start: function () {
            var d = k(this).resizable("instance"), c = d.options;
            k(c.alsoResize).each(function () {
                var f = k(this);
                f.data("ui-resizable-alsoresize", {
                    width: parseFloat(f.width()),
                    height: parseFloat(f.height()),
                    left: parseFloat(f.css("left")),
                    top: parseFloat(f.css("top"))
                })
            })
        }, resize: function (h, d) {
            var f = k(this).resizable("instance"), m = f.options, l = f.originalSize, c = f.originalPosition, g = {
                height: f.size.height - l.height || 0,
                width: f.size.width - l.width || 0,
                top: f.position.top - c.top || 0,
                left: f.position.left - c.left || 0
            };
            k(m.alsoResize).each(function () {
                var p = k(this), i = k(this).data("ui-resizable-alsoresize"), t = {},
                    r = p.parents(d.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                k.each(r, function (o, s) {
                    var n = (i[s] || 0) + (g[s] || 0);
                    n && n >= 0 && (t[s] = n || null)
                }), p.css(t)
            })
        }, stop: function () {
            k(this).removeData("ui-resizable-alsoresize")
        }
    }), k.ui.plugin.add("resizable", "ghost", {
        start: function () {
            var d = k(this).resizable("instance"), c = d.size;
            d.ghost = d.originalElement.clone(), d.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: c.height,
                width: c.width,
                margin: 0,
                left: 0,
                top: 0
            }), d._addClass(d.ghost, "ui-resizable-ghost"), k.uiBackCompat !== !1 && "string" == typeof d.options.ghost && d.ghost.addClass(this.options.ghost), d.ghost.appendTo(d.helper)
        }, resize: function () {
            var c = k(this).resizable("instance");
            c.ghost && c.ghost.css({position: "relative", height: c.size.height, width: c.size.width})
        }, stop: function () {
            var c = k(this).resizable("instance");
            c.ghost && c.helper && c.helper.get(0).removeChild(c.ghost.get(0))
        }
    }), k.ui.plugin.add("resizable", "grid", {
        resize: function () {
            var X, T = k(this).resizable("instance"), M = T.options, Q = T.size, P = T.originalSize,
                aa = T.originalPosition, N = T.axis, U = "number" == typeof M.grid ? [M.grid, M.grid] : M.grid,
                S = U[0] || 1, Z = U[1] || 1, L = Math.round((Q.width - P.width) / S) * S,
                Y = Math.round((Q.height - P.height) / Z) * Z, O = P.width + L, W = P.height + Y,
                V = M.maxWidth && O > M.maxWidth, R = M.maxHeight && W > M.maxHeight, ab = M.minWidth && M.minWidth > O,
                t = M.minHeight && M.minHeight > W;
            M.grid = U, ab && (O += S), t && (W += Z), V && (O -= S), R && (W -= Z), /^(se|s|e)$/.test(N) ? (T.size.width = O, T.size.height = W) : /^(ne)$/.test(N) ? (T.size.width = O, T.size.height = W, T.position.top = aa.top - Y) : /^(sw)$/.test(N) ? (T.size.width = O, T.size.height = W, T.position.left = aa.left - L) : ((0 >= W - Z || 0 >= O - S) && (X = T._getPaddingPlusBorderDimensions(this)), W - Z > 0 ? (T.size.height = W, T.position.top = aa.top - Y) : (W = Z - X.height, T.size.height = W, T.position.top = aa.top + P.height - W), O - S > 0 ? (T.size.width = O, T.position.left = aa.left - L) : (O = S - X.width, T.size.width = O, T.position.left = aa.left + P.width - O))
        }
    }), k.ui.resizable, k.widget("ui.dialog", {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            classes: {"ui-dialog": "ui-corner-all", "ui-dialog-titlebar": "ui-corner-all"},
            closeOnEscape: !0,
            closeText: "Close",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center", at: "center", of: window, collision: "fit", using: function (d) {
                    var c = k(this).css(d).offset().top;
                    0 > c && k(this).css("top", d.top - c)
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        resizableRelatedOptions: {maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0},
        _create: function () {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            }, this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            }, this.originalTitle = this.element.attr("title"), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), this.options.disabled && (this.options.disabled = !1), this._createWrapper(), this.element.show().removeAttr("title").appendTo(this.uiDialog), this._addClass("ui-dialog-content", "ui-widget-content"), this._createTitlebar(), this._createButtonPane(), this.options.draggable && k.fn.draggable && this._makeDraggable(), this.options.resizable && k.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus()
        },
        _init: function () {
            this.options.autoOpen && this.open()
        },
        _appendTo: function () {
            var c = this.options.appendTo;
            return c && (c.jquery || c.nodeType) ? k(c) : this.document.find(c || "body").eq(0)
        },
        _destroy: function () {
            var c, d = this.originalPosition;
            this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), this.uiDialog.remove(), this.originalTitle && this.element.attr("title", this.originalTitle), c = d.parent.children().eq(d.index), c.length && c[0] !== this.element[0] ? c.before(this.element) : d.parent.append(this.element)
        },
        widget: function () {
            return this.uiDialog
        },
        disable: k.noop,
        enable: k.noop,
        close: function (d) {
            var c = this;
            this._isOpen && this._trigger("beforeClose", d) !== !1 && (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), this.opener.filter(":focusable").trigger("focus").length || k.ui.safeBlur(k.ui.safeActiveElement(this.document[0])), this._hide(this.uiDialog, this.options.hide, function () {
                c._trigger("close", d)
            }))
        },
        isOpen: function () {
            return this._isOpen
        },
        moveToTop: function () {
            this._moveToTop()
        },
        _moveToTop: function (f, c) {
            var d = !1, h = this.uiDialog.siblings(".ui-front:visible").map(function () {
                return +k(this).css("z-index")
            }).get(), g = Math.max.apply(null, h);
            return g >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", g + 1), d = !0), d && !c && this._trigger("focus", f), d
        },
        open: function () {
            var c = this;
            return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = k(k.ui.safeActiveElement(this.document[0])), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function () {
                c._focusTabbable(), c._trigger("focus")
            }), this._makeFocusTarget(), this._trigger("open"), void 0)
        },
        _focusTabbable: function () {
            var c = this._focusedElement;
            c || (c = this.element.find("[autofocus]")), c.length || (c = this.element.find(":tabbable")), c.length || (c = this.uiDialogButtonPane.find(":tabbable")), c.length || (c = this.uiDialogTitlebarClose.filter(":tabbable")), c.length || (c = this.uiDialog), c.eq(0).trigger("focus")
        },
        _keepFocus: function (d) {
            function c() {
                var g = k.ui.safeActiveElement(this.document[0]),
                    f = this.uiDialog[0] === g || k.contains(this.uiDialog[0], g);
                f || this._focusTabbable()
            }

            d.preventDefault(), c.call(this), this._delay(c)
        },
        _createWrapper: function () {
            this.uiDialog = k("<div>").hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()), this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front"), this._on(this.uiDialog, {
                keydown: function (f) {
                    if (this.options.closeOnEscape && !f.isDefaultPrevented() && f.keyCode && f.keyCode === k.ui.keyCode.ESCAPE) {
                        return f.preventDefault(), this.close(f), void 0
                    }
                    if (f.keyCode === k.ui.keyCode.TAB && !f.isDefaultPrevented()) {
                        var c = this.uiDialog.find(":tabbable"), d = c.filter(":first"), g = c.filter(":last");
                        f.target !== g[0] && f.target !== this.uiDialog[0] || f.shiftKey ? f.target !== d[0] && f.target !== this.uiDialog[0] || !f.shiftKey || (this._delay(function () {
                            g.trigger("focus")
                        }), f.preventDefault()) : (this._delay(function () {
                            d.trigger("focus")
                        }), f.preventDefault())
                    }
                }, mousedown: function (c) {
                    this._moveToTop(c) && this._focusTabbable()
                }
            }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({"aria-describedby": this.element.uniqueId().attr("id")})
        },
        _createTitlebar: function () {
            var c;
            this.uiDialogTitlebar = k("<div>"), this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix"), this._on(this.uiDialogTitlebar, {
                mousedown: function (d) {
                    k(d.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.trigger("focus")
                }
            }), this.uiDialogTitlebarClose = k("<button type='button'></button>").button({
                label: k("<a>").text(this.options.closeText).html(),
                icon: "ui-icon-closethick",
                showLabel: !1
            }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"), this._on(this.uiDialogTitlebarClose, {
                click: function (d) {
                    d.preventDefault(), this.close(d)
                }
            }), c = k("<span>").uniqueId().prependTo(this.uiDialogTitlebar), this._addClass(c, "ui-dialog-title"), this._title(c), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({"aria-labelledby": c.attr("id")})
        },
        _title: function (c) {
            this.options.title ? c.text(this.options.title) : c.html("&#160;")
        },
        _createButtonPane: function () {
            this.uiDialogButtonPane = k("<div>"), this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix"), this.uiButtonSet = k("<div>").appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, "ui-dialog-buttonset"), this._createButtons()
        },
        _createButtons: function () {
            var d = this, c = this.options.buttons;
            return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), k.isEmptyObject(c) || k.isArray(c) && !c.length ? (this._removeClass(this.uiDialog, "ui-dialog-buttons"), void 0) : (k.each(c, function (e, f) {
                var h, g;
                f = k.isFunction(f) ? {
                    click: f,
                    text: e
                } : f, f = k.extend({type: "button"}, f), h = f.click, g = {
                    icon: f.icon,
                    iconPosition: f.iconPosition,
                    showLabel: f.showLabel,
                    icons: f.icons,
                    text: f.text
                }, delete f.click, delete f.icon, delete f.iconPosition, delete f.showLabel, delete f.icons, "boolean" == typeof f.text && delete f.text, k("<button></button>", f).button(g).appendTo(d.uiButtonSet).on("click", function () {
                    h.apply(d.element[0], arguments)
                })
            }), this._addClass(this.uiDialog, "ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0)
        },
        _makeDraggable: function () {
            function f(e) {
                return {position: e.position, offset: e.offset}
            }

            var c = this, d = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function (e, g) {
                    c._addClass(k(this), "ui-dialog-dragging"), c._blockFrames(), c._trigger("dragStart", e, f(g))
                },
                drag: function (e, g) {
                    c._trigger("drag", e, f(g))
                },
                stop: function (i, h) {
                    var e = h.offset.left - c.document.scrollLeft(), g = h.offset.top - c.document.scrollTop();
                    d.position = {
                        my: "left top",
                        at: "left" + (e >= 0 ? "+" : "") + e + " top" + (g >= 0 ? "+" : "") + g,
                        of: c.window
                    }, c._removeClass(k(this), "ui-dialog-dragging"), c._unblockFrames(), c._trigger("dragStop", i, f(h))
                }
            })
        },
        _makeResizable: function () {
            function g(e) {
                return {
                    originalPosition: e.originalPosition,
                    originalSize: e.originalSize,
                    position: e.position,
                    size: e.size
                }
            }

            var d = this, f = this.options, l = f.resizable, h = this.uiDialog.css("position"),
                c = "string" == typeof l ? l : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: f.maxWidth,
                maxHeight: f.maxHeight,
                minWidth: f.minWidth,
                minHeight: this._minHeight(),
                handles: c,
                start: function (e, i) {
                    d._addClass(k(this), "ui-dialog-resizing"), d._blockFrames(), d._trigger("resizeStart", e, g(i))
                },
                resize: function (e, i) {
                    d._trigger("resize", e, g(i))
                },
                stop: function (s, p) {
                    var e = d.uiDialog.offset(), m = e.left - d.document.scrollLeft(),
                        i = e.top - d.document.scrollTop();
                    f.height = d.uiDialog.height(), f.width = d.uiDialog.width(), f.position = {
                        my: "left top",
                        at: "left" + (m >= 0 ? "+" : "") + m + " top" + (i >= 0 ? "+" : "") + i,
                        of: d.window
                    }, d._removeClass(k(this), "ui-dialog-resizing"), d._unblockFrames(), d._trigger("resizeStop", s, g(p))
                }
            }).css("position", h)
        },
        _trackFocus: function () {
            this._on(this.widget(), {
                focusin: function (c) {
                    this._makeFocusTarget(), this._focusedElement = k(c.target)
                }
            })
        },
        _makeFocusTarget: function () {
            this._untrackInstance(), this._trackingInstances().unshift(this)
        },
        _untrackInstance: function () {
            var d = this._trackingInstances(), c = k.inArray(this, d);
            -1 !== c && d.splice(c, 1)
        },
        _trackingInstances: function () {
            var c = this.document.data("ui-dialog-instances");
            return c || (c = [], this.document.data("ui-dialog-instances", c)), c
        },
        _minHeight: function () {
            var c = this.options;
            return "auto" === c.height ? c.minHeight : Math.min(c.minHeight, c.height)
        },
        _position: function () {
            var c = this.uiDialog.is(":visible");
            c || this.uiDialog.show(), this.uiDialog.position(this.options.position), c || this.uiDialog.hide()
        },
        _setOptions: function (f) {
            var c = this, d = !1, g = {};
            k.each(f, function (h, i) {
                c._setOption(h, i), h in c.sizeRelatedOptions && (d = !0), h in c.resizableRelatedOptions && (g[h] = i)
            }), d && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", g)
        },
        _setOption: function (f, c) {
            var d, h, g = this.uiDialog;
            "disabled" !== f && (this._super(f, c), "appendTo" === f && this.uiDialog.appendTo(this._appendTo()), "buttons" === f && this._createButtons(), "closeText" === f && this.uiDialogTitlebarClose.button({label: k("<a>").text("" + this.options.closeText).html()}), "draggable" === f && (d = g.is(":data(ui-draggable)"), d && !c && g.draggable("destroy"), !d && c && this._makeDraggable()), "position" === f && this._position(), "resizable" === f && (h = g.is(":data(ui-resizable)"), h && !c && g.resizable("destroy"), h && "string" == typeof c && g.resizable("option", "handles", c), h || c === !1 || this._makeResizable()), "title" === f && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
        },
        _size: function () {
            var d, g, c, f = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }), f.minWidth > f.width && (f.width = f.minWidth), d = this.uiDialog.css({
                height: "auto",
                width: f.width
            }).outerHeight(), g = Math.max(0, f.minHeight - d), c = "number" == typeof f.maxHeight ? Math.max(0, f.maxHeight - d) : "none", "auto" === f.height ? this.element.css({
                minHeight: g,
                maxHeight: c,
                height: "auto"
            }) : this.element.height(Math.max(0, f.height - d)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        },
        _blockFrames: function () {
            this.iframeBlocks = this.document.find("iframe").map(function () {
                var c = k(this);
                return k("<div>").css({
                    position: "absolute",
                    width: c.outerWidth(),
                    height: c.outerHeight()
                }).appendTo(c.parent()).offset(c.offset())[0]
            })
        },
        _unblockFrames: function () {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _allowInteraction: function (c) {
            return k(c.target).closest(".ui-dialog").length ? !0 : !!k(c.target).closest(".ui-datepicker").length
        },
        _createOverlay: function () {
            if (this.options.modal) {
                var c = !0;
                this._delay(function () {
                    c = !1
                }), this.document.data("ui-dialog-overlays") || this._on(this.document, {
                    focusin: function (d) {
                        c || this._allowInteraction(d) || (d.preventDefault(), this._trackingInstances()[0]._focusTabbable())
                    }
                }), this.overlay = k("<div>").appendTo(this._appendTo()), this._addClass(this.overlay, null, "ui-widget-overlay ui-front"), this._on(this.overlay, {mousedown: "_keepFocus"}), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1)
            }
        },
        _destroyOverlay: function () {
            if (this.options.modal && this.overlay) {
                var c = this.document.data("ui-dialog-overlays") - 1;
                c ? this.document.data("ui-dialog-overlays", c) : (this._off(this.document, "focusin"), this.document.removeData("ui-dialog-overlays")), this.overlay.remove(), this.overlay = null
            }
        }
    }), k.uiBackCompat !== !1 && k.widget("ui.dialog", k.ui.dialog, {
        options: {dialogClass: ""},
        _createWrapper: function () {
            this._super(), this.uiDialog.addClass(this.options.dialogClass)
        },
        _setOption: function (c, d) {
            "dialogClass" === c && this.uiDialog.removeClass(this.options.dialogClass).addClass(d), this._superApply(arguments)
        }
    }), k.ui.dialog, k.widget("ui.droppable", {
        version: "1.12.1",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            addClasses: !0,
            greedy: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function () {
            var f, c = this.options, d = c.accept;
            this.isover = !1, this.isout = !0, this.accept = k.isFunction(d) ? d : function (e) {
                return e.is(d)
            }, this.proportions = function () {
                return arguments.length ? (f = arguments[0], void 0) : f ? f : f = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                }
            }, this._addToManager(c.scope), c.addClasses && this._addClass("ui-droppable")
        },
        _addToManager: function (c) {
            k.ui.ddmanager.droppables[c] = k.ui.ddmanager.droppables[c] || [], k.ui.ddmanager.droppables[c].push(this)
        },
        _splice: function (c) {
            for (var d = 0; c.length > d; d++) {
                c[d] === this && c.splice(d, 1)
            }
        },
        _destroy: function () {
            var c = k.ui.ddmanager.droppables[this.options.scope];
            this._splice(c)
        },
        _setOption: function (f, c) {
            if ("accept" === f) {
                this.accept = k.isFunction(c) ? c : function (e) {
                    return e.is(c)
                }
            } else {
                if ("scope" === f) {
                    var d = k.ui.ddmanager.droppables[this.options.scope];
                    this._splice(d), this._addToManager(c)
                }
            }
            this._super(f, c)
        },
        _activate: function (d) {
            var c = k.ui.ddmanager.current;
            this._addActiveClass(), c && this._trigger("activate", d, this.ui(c))
        },
        _deactivate: function (d) {
            var c = k.ui.ddmanager.current;
            this._removeActiveClass(), c && this._trigger("deactivate", d, this.ui(c))
        },
        _over: function (d) {
            var c = k.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this._addHoverClass(), this._trigger("over", d, this.ui(c)))
        },
        _out: function (d) {
            var c = k.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this._removeHoverClass(), this._trigger("out", d, this.ui(c)))
        },
        _drop: function (f, c) {
            var d = c || k.ui.ddmanager.current, g = !1;
            return d && (d.currentItem || d.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () {
                var e = k(this).droppable("instance");
                return e.options.greedy && !e.options.disabled && e.options.scope === d.options.scope && e.accept.call(e.element[0], d.currentItem || d.element) && b(d, k.extend(e, {offset: e.element.offset()}), e.options.tolerance, f) ? (g = !0, !1) : void 0
            }), g ? !1 : this.accept.call(this.element[0], d.currentItem || d.element) ? (this._removeActiveClass(), this._removeHoverClass(), this._trigger("drop", f, this.ui(d)), this.element) : !1) : !1
        },
        ui: function (c) {
            return {
                draggable: c.currentItem || c.element,
                helper: c.helper,
                position: c.position,
                offset: c.positionAbs
            }
        },
        _addHoverClass: function () {
            this._addClass("ui-droppable-hover")
        },
        _removeHoverClass: function () {
            this._removeClass("ui-droppable-hover")
        },
        _addActiveClass: function () {
            this._addClass("ui-droppable-active")
        },
        _removeActiveClass: function () {
            this._removeClass("ui-droppable-active")
        }
    });
    var b = k.ui.intersect = function () {
        function c(f, g, d) {
            return f >= g && g + d > f
        }

        return function (L, t, Q, m) {
            if (!t.offset) {
                return !1
            }
            var g = (L.positionAbs || L.position.absolute).left + L.margins.left,
                O = (L.positionAbs || L.position.absolute).top + L.margins.top, f = g + L.helperProportions.width,
                v = O + L.helperProportions.height, p = t.offset.left, N = t.offset.top, P = p + t.proportions().width,
                M = N + t.proportions().height;
            switch (Q) {
                case"fit":
                    return g >= p && P >= f && O >= N && M >= v;
                case"intersect":
                    return g + L.helperProportions.width / 2 > p && P > f - L.helperProportions.width / 2 && O + L.helperProportions.height / 2 > N && M > v - L.helperProportions.height / 2;
                case"pointer":
                    return c(m.pageY, N, t.proportions().height) && c(m.pageX, p, t.proportions().width);
                case"touch":
                    return (O >= N && M >= O || v >= N && M >= v || N > O && v > M) && (g >= p && P >= g || f >= p && P >= f || p > g && f > P);
                default:
                    return !1
            }
        }
    }();
    k.ui.ddmanager = {
        current: null, droppables: {"default": []}, prepareOffsets: function (h, d) {
            var f, m, l = k.ui.ddmanager.droppables[h.options.scope] || [], c = d ? d.type : null,
                g = (h.currentItem || h.element).find(":data(ui-droppable)").addBack();
            k:for (f = 0; l.length > f; f++) {
                if (!(l[f].options.disabled || h && !l[f].accept.call(l[f].element[0], h.currentItem || h.element))) {
                    for (m = 0; g.length > m; m++) {
                        if (g[m] === l[f].element[0]) {
                            l[f].proportions().height = 0;
                            continue k
                        }
                    }
                    l[f].visible = "none" !== l[f].element.css("display"), l[f].visible && ("mousedown" === c && l[f]._activate.call(l[f], d), l[f].offset = l[f].element.offset(), l[f].proportions({
                        width: l[f].element[0].offsetWidth,
                        height: l[f].element[0].offsetHeight
                    }))
                }
            }
        }, drop: function (f, c) {
            var d = !1;
            return k.each((k.ui.ddmanager.droppables[f.options.scope] || []).slice(), function () {
                this.options && (!this.options.disabled && this.visible && b(f, this, this.options.tolerance, c) && (d = this._drop.call(this, c) || d), !this.options.disabled && this.visible && this.accept.call(this.element[0], f.currentItem || f.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, c)))
            }), d
        }, dragStart: function (d, c) {
            d.element.parentsUntil("body").on("scroll.droppable", function () {
                d.options.refreshPositions || k.ui.ddmanager.prepareOffsets(d, c)
            })
        }, drag: function (d, c) {
            d.options.refreshPositions && k.ui.ddmanager.prepareOffsets(d, c), k.each(k.ui.ddmanager.droppables[d.options.scope] || [], function () {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var f, i, h, e = b(d, this, this.options.tolerance, c),
                        g = !e && this.isover ? "isout" : e && !this.isover ? "isover" : null;
                    g && (this.options.greedy && (i = this.options.scope, h = this.element.parents(":data(ui-droppable)").filter(function () {
                        return k(this).droppable("instance").options.scope === i
                    }), h.length && (f = k(h[0]).droppable("instance"), f.greedyChild = "isover" === g)), f && "isover" === g && (f.isover = !1, f.isout = !0, f._out.call(f, c)), this[g] = !0, this["isout" === g ? "isover" : "isout"] = !1, this["isover" === g ? "_over" : "_out"].call(this, c), f && "isout" === g && (f.isout = !1, f.isover = !0, f._over.call(f, c)))
                }
            })
        }, dragStop: function (d, c) {
            d.element.parentsUntil("body").off("scroll.droppable"), d.options.refreshPositions || k.ui.ddmanager.prepareOffsets(d, c)
        }
    }, k.uiBackCompat !== !1 && k.widget("ui.droppable", k.ui.droppable, {
        options: {hoverClass: !1, activeClass: !1},
        _addActiveClass: function () {
            this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass)
        },
        _removeActiveClass: function () {
            this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass)
        },
        _addHoverClass: function () {
            this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass)
        },
        _removeHoverClass: function () {
            this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass)
        }
    }), k.ui.droppable, k.widget("ui.progressbar", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-progressbar": "ui-corner-all",
                "ui-progressbar-value": "ui-corner-left",
                "ui-progressbar-complete": "ui-corner-right"
            }, max: 100, value: 0, change: null, complete: null
        },
        min: 0,
        _create: function () {
            this.oldValue = this.options.value = this._constrainedValue(), this.element.attr({
                role: "progressbar",
                "aria-valuemin": this.min
            }), this._addClass("ui-progressbar", "ui-widget ui-widget-content"), this.valueDiv = k("<div>").appendTo(this.element), this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header"), this._refreshValue()
        },
        _destroy: function () {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"), this.valueDiv.remove()
        },
        value: function (c) {
            return void 0 === c ? this.options.value : (this.options.value = this._constrainedValue(c), this._refreshValue(), void 0)
        },
        _constrainedValue: function (c) {
            return void 0 === c && (c = this.options.value), this.indeterminate = c === !1, "number" != typeof c && (c = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, c))
        },
        _setOptions: function (c) {
            var d = c.value;
            delete c.value, this._super(c), this.options.value = this._constrainedValue(d), this._refreshValue()
        },
        _setOption: function (c, d) {
            "max" === c && (d = Math.max(this.min, d)), this._super(c, d)
        },
        _setOptionDisabled: function (c) {
            this._super(c), this.element.attr("aria-disabled", c), this._toggleClass(null, "ui-state-disabled", !!c)
        },
        _percentage: function () {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        },
        _refreshValue: function () {
            var d = this.options.value, c = this._percentage();
            this.valueDiv.toggle(this.indeterminate || d > this.min).width(c.toFixed(0) + "%"), this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, d === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = k("<div>").appendTo(this.valueDiv), this._addClass(this.overlayDiv, "ui-progressbar-overlay"))) : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": d
            }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== d && (this.oldValue = d, this._trigger("change")), d === this.options.max && this._trigger("complete")
        }
    }), k.widget("ui.selectable", k.ui.mouse, {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function () {
            var c = this;
            this._addClass("ui-selectable"), this.dragged = !1, this.refresh = function () {
                c.elementPos = k(c.element[0]).offset(), c.selectees = k(c.options.filter, c.element[0]), c._addClass(c.selectees, "ui-selectee"), c.selectees.each(function () {
                    var d = k(this), e = d.offset(),
                        f = {left: e.left - c.elementPos.left, top: e.top - c.elementPos.top};
                    k.data(this, "selectable-item", {
                        element: this,
                        $element: d,
                        left: f.left,
                        top: f.top,
                        right: f.left + d.outerWidth(),
                        bottom: f.top + d.outerHeight(),
                        startselected: !1,
                        selected: d.hasClass("ui-selected"),
                        selecting: d.hasClass("ui-selecting"),
                        unselecting: d.hasClass("ui-unselecting")
                    })
                })
            }, this.refresh(), this._mouseInit(), this.helper = k("<div>"), this._addClass(this.helper, "ui-selectable-helper")
        },
        _destroy: function () {
            this.selectees.removeData("selectable-item"), this._mouseDestroy()
        },
        _mouseStart: function (f) {
            var c = this, d = this.options;
            this.opos = [f.pageX, f.pageY], this.elementPos = k(this.element[0]).offset(), this.options.disabled || (this.selectees = k(d.filter, this.element[0]), this._trigger("start", f), k(d.appendTo).append(this.helper), this.helper.css({
                left: f.pageX,
                top: f.pageY,
                width: 0,
                height: 0
            }), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () {
                var e = k.data(this, "selectable-item");
                e.startselected = !0, f.metaKey || f.ctrlKey || (c._removeClass(e.$element, "ui-selected"), e.selected = !1, c._addClass(e.$element, "ui-unselecting"), e.unselecting = !0, c._trigger("unselecting", f, {unselecting: e.element}))
            }), k(f.target).parents().addBack().each(function () {
                var e, g = k.data(this, "selectable-item");
                return g ? (e = !f.metaKey && !f.ctrlKey || !g.$element.hasClass("ui-selected"), c._removeClass(g.$element, e ? "ui-unselecting" : "ui-selected")._addClass(g.$element, e ? "ui-selecting" : "ui-unselecting"), g.unselecting = !e, g.selecting = e, g.selected = e, e ? c._trigger("selecting", f, {selecting: g.element}) : c._trigger("unselecting", f, {unselecting: g.element}), !1) : void 0
            }))
        },
        _mouseDrag: function (m) {
            if (this.dragged = !0, !this.options.disabled) {
                var d, g = this, t = this.options, p = this.opos[0], c = this.opos[1], l = m.pageX, f = m.pageY;
                return p > l && (d = l, l = p, p = d), c > f && (d = f, f = c, c = d), this.helper.css({
                    left: p,
                    top: c,
                    width: l - p,
                    height: f - c
                }), this.selectees.each(function () {
                    var h = k.data(this, "selectable-item"), e = !1, n = {};
                    h && h.element !== g.element[0] && (n.left = h.left + g.elementPos.left, n.right = h.right + g.elementPos.left, n.top = h.top + g.elementPos.top, n.bottom = h.bottom + g.elementPos.top, "touch" === t.tolerance ? e = !(n.left > l || p > n.right || n.top > f || c > n.bottom) : "fit" === t.tolerance && (e = n.left > p && l > n.right && n.top > c && f > n.bottom), e ? (h.selected && (g._removeClass(h.$element, "ui-selected"), h.selected = !1), h.unselecting && (g._removeClass(h.$element, "ui-unselecting"), h.unselecting = !1), h.selecting || (g._addClass(h.$element, "ui-selecting"), h.selecting = !0, g._trigger("selecting", m, {selecting: h.element}))) : (h.selecting && ((m.metaKey || m.ctrlKey) && h.startselected ? (g._removeClass(h.$element, "ui-selecting"), h.selecting = !1, g._addClass(h.$element, "ui-selected"), h.selected = !0) : (g._removeClass(h.$element, "ui-selecting"), h.selecting = !1, h.startselected && (g._addClass(h.$element, "ui-unselecting"), h.unselecting = !0), g._trigger("unselecting", m, {unselecting: h.element}))), h.selected && (m.metaKey || m.ctrlKey || h.startselected || (g._removeClass(h.$element, "ui-selected"), h.selected = !1, g._addClass(h.$element, "ui-unselecting"), h.unselecting = !0, g._trigger("unselecting", m, {unselecting: h.element})))))
                }), !1
            }
        },
        _mouseStop: function (d) {
            var c = this;
            return this.dragged = !1, k(".ui-unselecting", this.element[0]).each(function () {
                var e = k.data(this, "selectable-item");
                c._removeClass(e.$element, "ui-unselecting"), e.unselecting = !1, e.startselected = !1, c._trigger("unselected", d, {unselected: e.element})
            }), k(".ui-selecting", this.element[0]).each(function () {
                var e = k.data(this, "selectable-item");
                c._removeClass(e.$element, "ui-selecting")._addClass(e.$element, "ui-selected"), e.selecting = !1, e.selected = !0, e.startselected = !0, c._trigger("selected", d, {selected: e.element})
            }), this._trigger("stop", d), this.helper.remove(), !1
        }
    }), k.widget("ui.selectmenu", [k.ui.formResetMixin, {
        version: "1.12.1",
        defaultElement: "<select>",
        options: {
            appendTo: null,
            classes: {"ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all"},
            disabled: null,
            icons: {button: "ui-icon-triangle-1-s"},
            position: {my: "left top", at: "left bottom", collision: "none"},
            width: !1,
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null
        },
        _create: function () {
            var c = this.element.uniqueId().attr("id");
            this.ids = {
                element: c,
                button: c + "-button",
                menu: c + "-menu"
            }, this._drawButton(), this._drawMenu(), this._bindFormResetHandler(), this._rendered = !1, this.menuItems = k()
        },
        _drawButton: function () {
            var f, c = this, d = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
            this.labels = this.element.labels().attr("for", this.ids.button), this._on(this.labels, {
                click: function (e) {
                    this.button.focus(), e.preventDefault()
                }
            }), this.element.hide(), this.button = k("<span>", {
                tabindex: this.options.disabled ? -1 : 0,
                id: this.ids.button,
                role: "combobox",
                "aria-expanded": "false",
                "aria-autocomplete": "list",
                "aria-owns": this.ids.menu,
                "aria-haspopup": "true",
                title: this.element.attr("title")
            }).insertAfter(this.element), this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget"), f = k("<span>").appendTo(this.button), this._addClass(f, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button), this.buttonItem = this._renderButtonItem(d).appendTo(this.button), this.options.width !== !1 && this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function () {
                c._rendered || c._refreshMenu()
            })
        },
        _drawMenu: function () {
            var c = this;
            this.menu = k("<ul>", {
                "aria-hidden": "true",
                "aria-labelledby": this.ids.button,
                id: this.ids.menu
            }), this.menuWrap = k("<div>").append(this.menu), this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"), this.menuWrap.appendTo(this._appendTo()), this.menuInstance = this.menu.menu({
                classes: {"ui-menu": "ui-corner-bottom"},
                role: "listbox",
                select: function (e, d) {
                    e.preventDefault(), c._setSelection(), c._select(d.item.data("ui-selectmenu-item"), e)
                },
                focus: function (e, d) {
                    var f = d.item.data("ui-selectmenu-item");
                    null != c.focusIndex && f.index !== c.focusIndex && (c._trigger("focus", e, {item: f}), c.isOpen || c._select(f, e)), c.focusIndex = f.index, c.button.attr("aria-activedescendant", c.menuItems.eq(f.index).attr("id"))
                }
            }).menu("instance"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function () {
                return !1
            }, this.menuInstance._isDivider = function () {
                return !1
            }
        },
        refresh: function () {
            this._refreshMenu(), this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {})), null === this.options.width && this._resizeButton()
        },
        _refreshMenu: function () {
            var c, d = this.element.find("option");
            this.menu.empty(), this._parseOptions(d), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"), this._rendered = !0, d.length && (c = this._getSelectedItem(), this.menuInstance.focus(null, c), this._setAria(c.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")))
        },
        open: function (c) {
            this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.menuItems.length && (this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", c)))
        },
        _position: function () {
            this.menuWrap.position(k.extend({of: this.button}, this.options.position))
        },
        close: function (c) {
            this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", c))
        },
        widget: function () {
            return this.button
        },
        menuWidget: function () {
            return this.menu
        },
        _renderButtonItem: function (d) {
            var c = k("<span>");
            return this._setText(c, d.label), this._addClass(c, "ui-selectmenu-text"), c
        },
        _renderMenu: function (f, c) {
            var d = this, g = "";
            k.each(c, function (h, l) {
                var e;
                l.optgroup !== g && (e = k("<li>", {text: l.optgroup}), d._addClass(e, "ui-selectmenu-optgroup", "ui-menu-divider" + (l.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : "")), e.appendTo(f), g = l.optgroup), d._renderItemData(f, l)
            })
        },
        _renderItemData: function (c, d) {
            return this._renderItem(c, d).data("ui-selectmenu-item", d)
        },
        _renderItem: function (f, c) {
            var d = k("<li>"), g = k("<div>", {title: c.element.attr("title")});
            return c.disabled && this._addClass(d, null, "ui-state-disabled"), this._setText(g, c.label), d.append(g).appendTo(f)
        },
        _setText: function (c, d) {
            d ? c.text(d) : c.html("&#160;")
        },
        _move: function (d, g) {
            var c, f, h = ".ui-menu-item";
            this.isOpen ? c = this.menuItems.eq(this.focusIndex).parent("li") : (c = this.menuItems.eq(this.element[0].selectedIndex).parent("li"), h += ":not(.ui-state-disabled)"), f = "first" === d || "last" === d ? c["first" === d ? "prevAll" : "nextAll"](h).eq(-1) : c[d + "All"](h).eq(0), f.length && this.menuInstance.focus(g, f)
        },
        _getSelectedItem: function () {
            return this.menuItems.eq(this.element[0].selectedIndex).parent("li")
        },
        _toggle: function (c) {
            this[this.isOpen ? "close" : "open"](c)
        },
        _setSelection: function () {
            var c;
            this.range && (window.getSelection ? (c = window.getSelection(), c.removeAllRanges(), c.addRange(this.range)) : this.range.select(), this.button.focus())
        },
        _documentClick: {
            mousedown: function (c) {
                this.isOpen && (k(c.target).closest(".ui-selectmenu-menu, #" + k.ui.escapeSelector(this.ids.button)).length || this.close(c))
            }
        },
        _buttonEvents: {
            mousedown: function () {
                var c;
                window.getSelection ? (c = window.getSelection(), c.rangeCount && (this.range = c.getRangeAt(0))) : this.range = document.selection.createRange()
            }, click: function (c) {
                this._setSelection(), this._toggle(c)
            }, keydown: function (d) {
                var c = !0;
                switch (d.keyCode) {
                    case k.ui.keyCode.TAB:
                    case k.ui.keyCode.ESCAPE:
                        this.close(d), c = !1;
                        break;
                    case k.ui.keyCode.ENTER:
                        this.isOpen && this._selectFocusedItem(d);
                        break;
                    case k.ui.keyCode.UP:
                        d.altKey ? this._toggle(d) : this._move("prev", d);
                        break;
                    case k.ui.keyCode.DOWN:
                        d.altKey ? this._toggle(d) : this._move("next", d);
                        break;
                    case k.ui.keyCode.SPACE:
                        this.isOpen ? this._selectFocusedItem(d) : this._toggle(d);
                        break;
                    case k.ui.keyCode.LEFT:
                        this._move("prev", d);
                        break;
                    case k.ui.keyCode.RIGHT:
                        this._move("next", d);
                        break;
                    case k.ui.keyCode.HOME:
                    case k.ui.keyCode.PAGE_UP:
                        this._move("first", d);
                        break;
                    case k.ui.keyCode.END:
                    case k.ui.keyCode.PAGE_DOWN:
                        this._move("last", d);
                        break;
                    default:
                        this.menu.trigger(d), c = !1
                }
                c && d.preventDefault()
            }
        },
        _selectFocusedItem: function (c) {
            var d = this.menuItems.eq(this.focusIndex).parent("li");
            d.hasClass("ui-state-disabled") || this._select(d.data("ui-selectmenu-item"), c)
        },
        _select: function (d, f) {
            var c = this.element[0].selectedIndex;
            this.element[0].selectedIndex = d.index, this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(d)), this._setAria(d), this._trigger("select", f, {item: d}), d.index !== c && this._trigger("change", f, {item: d}), this.close(f)
        },
        _setAria: function (c) {
            var d = this.menuItems.eq(c.index).attr("id");
            this.button.attr({
                "aria-labelledby": d,
                "aria-activedescendant": d
            }), this.menu.attr("aria-activedescendant", d)
        },
        _setOption: function (d, f) {
            if ("icons" === d) {
                var c = this.button.find("span.ui-icon");
                this._removeClass(c, null, this.options.icons.button)._addClass(c, null, f.button)
            }
            this._super(d, f), "appendTo" === d && this.menuWrap.appendTo(this._appendTo()), "width" === d && this._resizeButton()
        },
        _setOptionDisabled: function (c) {
            this._super(c), this.menuInstance.option("disabled", c), this.button.attr("aria-disabled", c), this._toggleClass(this.button, null, "ui-state-disabled", c), this.element.prop("disabled", c), c ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0)
        },
        _appendTo: function () {
            var c = this.options.appendTo;
            return c && (c = c.jquery || c.nodeType ? k(c) : this.document.find(c).eq(0)), c && c[0] || (c = this.element.closest(".ui-front, dialog")), c.length || (c = this.document[0].body), c
        },
        _toggleAttr: function () {
            this.button.attr("aria-expanded", this.isOpen), this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen), this.menu.attr("aria-hidden", !this.isOpen)
        },
        _resizeButton: function () {
            var c = this.options.width;
            return c === !1 ? (this.button.css("width", ""), void 0) : (null === c && (c = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(c), void 0)
        },
        _resizeMenu: function () {
            this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1))
        },
        _getCreateOptions: function () {
            var c = this._super();
            return c.disabled = this.element.prop("disabled"), c
        },
        _parseOptions: function (f) {
            var c = this, d = [];
            f.each(function (g, h) {
                d.push(c._parseOption(k(h), g))
            }), this.items = d
        },
        _parseOption: function (d, f) {
            var c = d.parent("optgroup");
            return {
                element: d,
                index: f,
                value: d.val(),
                label: d.text(),
                optgroup: c.attr("label") || "",
                disabled: c.prop("disabled") || d.prop("disabled")
            }
        },
        _destroy: function () {
            this._unbindFormResetHandler(), this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.labels.attr("for", this.ids.element)
        }
    }]), k.widget("ui.slider", k.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            classes: {
                "ui-slider": "ui-corner-all",
                "ui-slider-handle": "ui-corner-all",
                "ui-slider-range": "ui-corner-all ui-widget-header"
            },
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        numPages: 5,
        _create: function () {
            this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content"), this._refresh(), this._animateOff = !1
        },
        _refresh: function () {
            this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
        },
        _createHandles: function () {
            var g, d, f = this.options, l = this.element.find(".ui-slider-handle"), h = "<span tabindex='0'></span>",
                c = [];
            for (d = f.values && f.values.length || 1, l.length > d && (l.slice(d).remove(), l = l.slice(0, d)), g = l.length; d > g; g++) {
                c.push(h)
            }
            this.handles = l.add(k(c.join("")).appendTo(this.element)), this._addClass(this.handles, "ui-slider-handle", "ui-state-default"), this.handle = this.handles.eq(0), this.handles.each(function (i) {
                k(this).data("ui-slider-handle-index", i).attr("tabIndex", 0)
            })
        },
        _createRange: function () {
            var c = this.options;
            c.range ? (c.range === !0 && (c.values ? c.values.length && 2 !== c.values.length ? c.values = [c.values[0], c.values[0]] : k.isArray(c.values) && (c.values = c.values.slice(0)) : c.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? (this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"), this.range.css({
                left: "",
                bottom: ""
            })) : (this.range = k("<div>").appendTo(this.element), this._addClass(this.range, "ui-slider-range")), ("min" === c.range || "max" === c.range) && this._addClass(this.range, "ui-slider-range-" + c.range)) : (this.range && this.range.remove(), this.range = null)
        },
        _setupEvents: function () {
            this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles)
        },
        _destroy: function () {
            this.handles.remove(), this.range && this.range.remove(), this._mouseDestroy()
        },
        _mouseCapture: function (v) {
            var p, O, g, f, M, d, t, m, L = this, N = this.options;
            return N.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            }, this.elementOffset = this.element.offset(), p = {
                x: v.pageX,
                y: v.pageY
            }, O = this._normValueFromMouse(p), g = this._valueMax() - this._valueMin() + 1, this.handles.each(function (h) {
                var c = Math.abs(O - L.values(h));
                (g > c || g === c && (h === L._lastChangedValue || L.values(h) === N.min)) && (g = c, f = k(this), M = h)
            }), d = this._start(v, M), d === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = M, this._addClass(f, null, "ui-state-active"), f.trigger("focus"), t = f.offset(), m = !k(v.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = m ? {
                left: 0,
                top: 0
            } : {
                left: v.pageX - t.left - f.width() / 2,
                top: v.pageY - t.top - f.height() / 2 - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0)
            }, this.handles.hasClass("ui-state-hover") || this._slide(v, M, O), this._animateOff = !0, !0))
        },
        _mouseStart: function () {
            return !0
        },
        _mouseDrag: function (d) {
            var f = {x: d.pageX, y: d.pageY}, c = this._normValueFromMouse(f);
            return this._slide(d, this._handleIndex, c), !1
        },
        _mouseStop: function (c) {
            return this._removeClass(this.handles, null, "ui-state-active"), this._mouseSliding = !1, this._stop(c, this._handleIndex), this._change(c, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
        },
        _detectOrientation: function () {
            this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function (d) {
            var g, c, f, l, h;
            return "horizontal" === this.orientation ? (g = this.elementSize.width, c = d.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (g = this.elementSize.height, c = d.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), f = c / g, f > 1 && (f = 1), 0 > f && (f = 0), "vertical" === this.orientation && (f = 1 - f), l = this._valueMax() - this._valueMin(), h = this._valueMin() + f * l, this._trimAlignValue(h)
        },
        _uiHash: function (d, g, c) {
            var f = {handle: this.handles[d], handleIndex: d, value: void 0 !== g ? g : this.value()};
            return this._hasMultipleValues() && (f.value = void 0 !== g ? g : this.values(d), f.values = c || this.values()), f
        },
        _hasMultipleValues: function () {
            return this.options.values && this.options.values.length
        },
        _start: function (c, d) {
            return this._trigger("start", c, this._uiHash(d))
        },
        _slide: function (f, h, d) {
            var g, m, l = this.value(), c = this.values();
            this._hasMultipleValues() && (m = this.values(h ? 0 : 1), l = this.values(h), 2 === this.options.values.length && this.options.range === !0 && (d = 0 === h ? Math.min(m, d) : Math.max(m, d)), c[h] = d), d !== l && (g = this._trigger("slide", f, this._uiHash(h, d, c)), g !== !1 && (this._hasMultipleValues() ? this.values(h, d) : this.value(d)))
        },
        _stop: function (c, d) {
            this._trigger("stop", c, this._uiHash(d))
        },
        _change: function (c, d) {
            this._keySliding || this._mouseSliding || (this._lastChangedValue = d, this._trigger("change", c, this._uiHash(d)))
        },
        value: function (c) {
            return arguments.length ? (this.options.value = this._trimAlignValue(c), this._refreshValue(), this._change(null, 0), void 0) : this._value()
        },
        values: function (f, c) {
            var d, h, g;
            if (arguments.length > 1) {
                return this.options.values[f] = this._trimAlignValue(c), this._refreshValue(), this._change(null, f), void 0
            }
            if (!arguments.length) {
                return this._values()
            }
            if (!k.isArray(arguments[0])) {
                return this._hasMultipleValues() ? this._values(f) : this.value()
            }
            for (d = this.options.values, h = arguments[0], g = 0; d.length > g; g += 1) {
                d[g] = this._trimAlignValue(h[g]), this._change(null, g)
            }
            this._refreshValue()
        },
        _setOption: function (f, c) {
            var d, g = 0;
            switch ("range" === f && this.options.range === !0 && ("min" === c ? (this.options.value = this._values(0), this.options.values = null) : "max" === c && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), k.isArray(this.options.values) && (g = this.options.values.length), this._super(f, c), f) {
                case"orientation":
                    this._detectOrientation(), this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation), this._refreshValue(), this.options.range && this._refreshRange(c), this.handles.css("horizontal" === c ? "bottom" : "left", "");
                    break;
                case"value":
                    this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                    break;
                case"values":
                    for (this._animateOff = !0, this._refreshValue(), d = g - 1; d >= 0; d--) {
                        this._change(null, d)
                    }
                    this._animateOff = !1;
                    break;
                case"step":
                case"min":
                case"max":
                    this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;
                    break;
                case"range":
                    this._animateOff = !0, this._refresh(), this._animateOff = !1
            }
        },
        _setOptionDisabled: function (c) {
            this._super(c), this._toggleClass(null, "ui-state-disabled", !!c)
        },
        _value: function () {
            var c = this.options.value;
            return c = this._trimAlignValue(c)
        },
        _values: function (d) {
            var g, c, f;
            if (arguments.length) {
                return g = this.options.values[d], g = this._trimAlignValue(g)
            }
            if (this._hasMultipleValues()) {
                for (c = this.options.values.slice(), f = 0; c.length > f; f += 1) {
                    c[f] = this._trimAlignValue(c[f])
                }
                return c
            }
            return []
        },
        _trimAlignValue: function (d) {
            if (this._valueMin() >= d) {
                return this._valueMin()
            }
            if (d >= this._valueMax()) {
                return this._valueMax()
            }
            var g = this.options.step > 0 ? this.options.step : 1, c = (d - this._valueMin()) % g, f = d - c;
            return 2 * Math.abs(c) >= g && (f += c > 0 ? g : -g), parseFloat(f.toFixed(5))
        },
        _calculateNewMax: function () {
            var d = this.options.max, g = this._valueMin(), c = this.options.step, f = Math.round((d - g) / c) * c;
            d = f + g, d > this.options.max && (d -= c), this.max = parseFloat(d.toFixed(this._precision()))
        },
        _precision: function () {
            var c = this._precisionOf(this.options.step);
            return null !== this.options.min && (c = Math.max(c, this._precisionOf(this.options.min))), c
        },
        _precisionOf: function (d) {
            var f = "" + d, c = f.indexOf(".");
            return -1 === c ? 0 : f.length - c - 1
        },
        _valueMin: function () {
            return this.options.min
        },
        _valueMax: function () {
            return this.max
        },
        _refreshRange: function (c) {
            "vertical" === c && this.range.css({width: "", left: ""}), "horizontal" === c && this.range.css({
                height: "",
                bottom: ""
            })
        },
        _refreshValue: function () {
            var u, p, M, g, f, L = this.options.range, d = this.options, t = this,
                m = this._animateOff ? !1 : d.animate, v = {};
            this._hasMultipleValues() ? this.handles.each(function (c) {
                p = 100 * ((t.values(c) - t._valueMin()) / (t._valueMax() - t._valueMin())), v["horizontal" === t.orientation ? "left" : "bottom"] = p + "%", k(this).stop(1, 1)[m ? "animate" : "css"](v, d.animate), t.options.range === !0 && ("horizontal" === t.orientation ? (0 === c && t.range.stop(1, 1)[m ? "animate" : "css"]({left: p + "%"}, d.animate), 1 === c && t.range[m ? "animate" : "css"]({width: p - u + "%"}, {
                    queue: !1,
                    duration: d.animate
                })) : (0 === c && t.range.stop(1, 1)[m ? "animate" : "css"]({bottom: p + "%"}, d.animate), 1 === c && t.range[m ? "animate" : "css"]({height: p - u + "%"}, {
                    queue: !1,
                    duration: d.animate
                }))), u = p
            }) : (M = this.value(), g = this._valueMin(), f = this._valueMax(), p = f !== g ? 100 * ((M - g) / (f - g)) : 0, v["horizontal" === this.orientation ? "left" : "bottom"] = p + "%", this.handle.stop(1, 1)[m ? "animate" : "css"](v, d.animate), "min" === L && "horizontal" === this.orientation && this.range.stop(1, 1)[m ? "animate" : "css"]({width: p + "%"}, d.animate), "max" === L && "horizontal" === this.orientation && this.range.stop(1, 1)[m ? "animate" : "css"]({width: 100 - p + "%"}, d.animate), "min" === L && "vertical" === this.orientation && this.range.stop(1, 1)[m ? "animate" : "css"]({height: p + "%"}, d.animate), "max" === L && "vertical" === this.orientation && this.range.stop(1, 1)[m ? "animate" : "css"]({height: 100 - p + "%"}, d.animate))
        },
        _handleEvents: {
            keydown: function (g) {
                var d, f, l, h, c = k(g.target).data("ui-slider-handle-index");
                switch (g.keyCode) {
                    case k.ui.keyCode.HOME:
                    case k.ui.keyCode.END:
                    case k.ui.keyCode.PAGE_UP:
                    case k.ui.keyCode.PAGE_DOWN:
                    case k.ui.keyCode.UP:
                    case k.ui.keyCode.RIGHT:
                    case k.ui.keyCode.DOWN:
                    case k.ui.keyCode.LEFT:
                        if (g.preventDefault(), !this._keySliding && (this._keySliding = !0, this._addClass(k(g.target), null, "ui-state-active"), d = this._start(g, c), d === !1)) {
                            return
                        }
                }
                switch (h = this.options.step, f = l = this._hasMultipleValues() ? this.values(c) : this.value(), g.keyCode) {
                    case k.ui.keyCode.HOME:
                        l = this._valueMin();
                        break;
                    case k.ui.keyCode.END:
                        l = this._valueMax();
                        break;
                    case k.ui.keyCode.PAGE_UP:
                        l = this._trimAlignValue(f + (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case k.ui.keyCode.PAGE_DOWN:
                        l = this._trimAlignValue(f - (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case k.ui.keyCode.UP:
                    case k.ui.keyCode.RIGHT:
                        if (f === this._valueMax()) {
                            return
                        }
                        l = this._trimAlignValue(f + h);
                        break;
                    case k.ui.keyCode.DOWN:
                    case k.ui.keyCode.LEFT:
                        if (f === this._valueMin()) {
                            return
                        }
                        l = this._trimAlignValue(f - h)
                }
                this._slide(g, c, l)
            }, keyup: function (d) {
                var c = k(d.target).data("ui-slider-handle-index");
                this._keySliding && (this._keySliding = !1, this._stop(d, c), this._change(d, c), this._removeClass(k(d.target), null, "ui-state-active"))
            }
        }
    }), k.widget("ui.sortable", k.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _isOverAxis: function (d, f, c) {
            return d >= f && f + c > d
        },
        _isFloating: function (c) {
            return /left|right/.test(c.css("float")) || /inline|table-cell/.test(c.css("display"))
        },
        _create: function () {
            this.containerCache = {}, this._addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0
        },
        _setOption: function (c, d) {
            this._super(c, d), "handle" === c && this._setHandleClassName()
        },
        _setHandleClassName: function () {
            var c = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"), k.each(this.items, function () {
                c._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle")
            })
        },
        _destroy: function () {
            this._mouseDestroy();
            for (var c = this.items.length - 1; c >= 0; c--) {
                this.items[c].item.removeData(this.widgetName + "-item")
            }
            return this
        },
        _mouseCapture: function (f, c) {
            var d = null, h = !1, g = this;
            return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(f), k(f.target).parents().each(function () {
                return k.data(this, g.widgetName + "-item") === g ? (d = k(this), !1) : void 0
            }), k.data(f.target, g.widgetName + "-item") === g && (d = k(f.target)), d ? !this.options.handle || c || (k(this.options.handle, d).find("*").addBack().each(function () {
                this === f.target && (h = !0)
            }), h) ? (this.currentItem = d, this._removeCurrentsFromItems(), !0) : !1 : !1)
        },
        _mouseStart: function (g, d, f) {
            var l, h, c = this.options;
            if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(g), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            }, k.extend(this.offset, {
                click: {left: g.pageX - this.offset.left, top: g.pageY - this.offset.top},
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(g), this.originalPageX = g.pageX, this.originalPageY = g.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), c.containment && this._setContainment(), c.cursor && "auto" !== c.cursor && (h = this.document.find("body"), this.storedCursor = h.css("cursor"), h.css("cursor", c.cursor), this.storedStylesheet = k("<style>*{ cursor: " + c.cursor + " !important; }</style>").appendTo(h)), c.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", c.opacity)), c.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", c.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", g, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !f) {
                for (l = this.containers.length - 1; l >= 0; l--) {
                    this.containers[l]._trigger("activate", g, this._uiHash(this))
                }
            }
            return k.ui.ddmanager && (k.ui.ddmanager.current = this), k.ui.ddmanager && !c.dropBehaviour && k.ui.ddmanager.prepareOffsets(this, g), this.dragging = !0, this._addClass(this.helper, "ui-sortable-helper"), this._mouseDrag(g), !0
        },
        _mouseDrag: function (h) {
            var d, f, m, l, c = this.options, g = !1;
            for (this.position = this._generatePosition(h), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - h.pageY < c.scrollSensitivity ? this.scrollParent[0].scrollTop = g = this.scrollParent[0].scrollTop + c.scrollSpeed : h.pageY - this.overflowOffset.top < c.scrollSensitivity && (this.scrollParent[0].scrollTop = g = this.scrollParent[0].scrollTop - c.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - h.pageX < c.scrollSensitivity ? this.scrollParent[0].scrollLeft = g = this.scrollParent[0].scrollLeft + c.scrollSpeed : h.pageX - this.overflowOffset.left < c.scrollSensitivity && (this.scrollParent[0].scrollLeft = g = this.scrollParent[0].scrollLeft - c.scrollSpeed)) : (h.pageY - this.document.scrollTop() < c.scrollSensitivity ? g = this.document.scrollTop(this.document.scrollTop() - c.scrollSpeed) : this.window.height() - (h.pageY - this.document.scrollTop()) < c.scrollSensitivity && (g = this.document.scrollTop(this.document.scrollTop() + c.scrollSpeed)), h.pageX - this.document.scrollLeft() < c.scrollSensitivity ? g = this.document.scrollLeft(this.document.scrollLeft() - c.scrollSpeed) : this.window.width() - (h.pageX - this.document.scrollLeft()) < c.scrollSensitivity && (g = this.document.scrollLeft(this.document.scrollLeft() + c.scrollSpeed))), g !== !1 && k.ui.ddmanager && !c.dropBehaviour && k.ui.ddmanager.prepareOffsets(this, h)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), d = this.items.length - 1; d >= 0; d--) {
                if (f = this.items[d], m = f.item[0], l = this._intersectsWithPointer(f), l && f.instance === this.currentContainer && m !== this.currentItem[0] && this.placeholder[1 === l ? "next" : "prev"]()[0] !== m && !k.contains(this.placeholder[0], m) && ("semi-dynamic" === this.options.type ? !k.contains(this.element[0], m) : !0)) {
                    if (this.direction = 1 === l ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(f)) {
                        break
                    }
                    this._rearrange(h, f), this._trigger("change", h, this._uiHash());
                    break
                }
            }
            return this._contactContainers(h), k.ui.ddmanager && k.ui.ddmanager.drag(this, h), this._trigger("sort", h, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
        },
        _mouseStop: function (g, d) {
            if (g) {
                if (k.ui.ddmanager && !this.options.dropBehaviour && k.ui.ddmanager.drop(this, g), this.options.revert) {
                    var f = this, l = this.placeholder.offset(), h = this.options.axis, c = {};
                    h && "x" !== h || (c.left = l.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), h && "y" !== h || (c.top = l.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, k(this.helper).animate(c, parseInt(this.options.revert, 10) || 500, function () {
                        f._clear(g)
                    })
                } else {
                    this._clear(g, d)
                }
                return !1
            }
        },
        cancel: function () {
            if (this.dragging) {
                this._mouseUp(new k.Event("mouseup", {target: null})), "original" === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show();
                for (var c = this.containers.length - 1; c >= 0; c--) {
                    this.containers[c]._trigger("deactivate", null, this._uiHash(this)), this.containers[c].containerCache.over && (this.containers[c]._trigger("out", null, this._uiHash(this)), this.containers[c].containerCache.over = 0)
                }
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), k.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null
            }), this.domPosition.prev ? k(this.domPosition.prev).after(this.currentItem) : k(this.domPosition.parent).prepend(this.currentItem)), this
        },
        serialize: function (f) {
            var c = this._getItemsAsjQuery(f && f.connected), d = [];
            return f = f || {}, k(c).each(function () {
                var e = (k(f.item || this).attr(f.attribute || "id") || "").match(f.expression || /(.+)[\-=_](.+)/);
                e && d.push((f.key || e[1] + "[]") + "=" + (f.key && f.expression ? e[1] : e[2]))
            }), !d.length && f.key && d.push(f.key + "="), d.join("&")
        },
        toArray: function (f) {
            var c = this._getItemsAsjQuery(f && f.connected), d = [];
            return f = f || {}, c.each(function () {
                d.push(k(f.item || this).attr(f.attribute || "id") || "")
            }), d
        },
        _intersectsWith: function (T) {
            var O = this.positionAbs.left, M = O + this.helperProportions.width, U = this.positionAbs.top,
                v = U + this.helperProportions.height, m = T.left, R = m + T.width, f = T.top, N = f + T.height,
                L = this.offset.click.top, Q = this.offset.click.left,
                S = "x" === this.options.axis || U + L > f && N > U + L,
                P = "y" === this.options.axis || O + Q > m && R > O + Q, g = S && P;
            return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > T[this.floating ? "width" : "height"] ? g : O + this.helperProportions.width / 2 > m && R > M - this.helperProportions.width / 2 && U + this.helperProportions.height / 2 > f && N > v - this.helperProportions.height / 2
        },
        _intersectsWithPointer: function (d) {
            var g, c,
                f = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, d.top, d.height),
                l = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, d.left, d.width),
                h = f && l;
            return h ? (g = this._getDragVerticalDirection(), c = this._getDragHorizontalDirection(), this.floating ? "right" === c || "down" === g ? 2 : 1 : g && ("down" === g ? 2 : 1)) : !1
        },
        _intersectsWithSides: function (d) {
            var g = this._isOverAxis(this.positionAbs.top + this.offset.click.top, d.top + d.height / 2, d.height),
                c = this._isOverAxis(this.positionAbs.left + this.offset.click.left, d.left + d.width / 2, d.width),
                f = this._getDragVerticalDirection(), h = this._getDragHorizontalDirection();
            return this.floating && h ? "right" === h && c || "left" === h && !c : f && ("down" === f && g || "up" === f && !g)
        },
        _getDragVerticalDirection: function () {
            var c = this.positionAbs.top - this.lastPositionAbs.top;
            return 0 !== c && (c > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function () {
            var c = this.positionAbs.left - this.lastPositionAbs.left;
            return 0 !== c && (c > 0 ? "right" : "left")
        },
        refresh: function (c) {
            return this._refreshItems(c), this._setHandleClassName(), this.refreshPositions(), this
        },
        _connectWith: function () {
            var c = this.options;
            return c.connectWith.constructor === String ? [c.connectWith] : c.connectWith
        },
        _getItemsAsjQuery: function (t) {
            function m() {
                c.push(this)
            }

            var v, f, d, u, c = [], p = [], g = this._connectWith();
            if (g && t) {
                for (v = g.length - 1; v >= 0; v--) {
                    for (d = k(g[v], this.document[0]), f = d.length - 1; f >= 0; f--) {
                        u = k.data(d[f], this.widgetFullName), u && u !== this && !u.options.disabled && p.push([k.isFunction(u.options.items) ? u.options.items.call(u.element) : k(u.options.items, u.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), u])
                    }
                }
            }
            for (p.push([k.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : k(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), v = p.length - 1; v >= 0; v--) {
                p[v][0].each(m)
            }
            return k(c)
        },
        _removeCurrentsFromItems: function () {
            var c = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = k.grep(this.items, function (e) {
                for (var d = 0; c.length > d; d++) {
                    if (c[d] === e.item[0]) {
                        return !1
                    }
                }
                return !0
            })
        },
        _refreshItems: function (L) {
            this.items = [], this.containers = [this];
            var t, Q, m, g, O, f, v, p, N = this.items,
                P = [[k.isFunction(this.options.items) ? this.options.items.call(this.element[0], L, {item: this.currentItem}) : k(this.options.items, this.element), this]],
                M = this._connectWith();
            if (M && this.ready) {
                for (t = M.length - 1; t >= 0; t--) {
                    for (m = k(M[t], this.document[0]), Q = m.length - 1; Q >= 0; Q--) {
                        g = k.data(m[Q], this.widgetFullName), g && g !== this && !g.options.disabled && (P.push([k.isFunction(g.options.items) ? g.options.items.call(g.element[0], L, {item: this.currentItem}) : k(g.options.items, g.element), g]), this.containers.push(g))
                    }
                }
            }
            for (t = P.length - 1; t >= 0; t--) {
                for (O = P[t][1], f = P[t][0], Q = 0, p = f.length; p > Q; Q++) {
                    v = k(f[Q]), v.data(this.widgetName + "-item", O), N.push({
                        item: v,
                        instance: O,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function (f) {
            this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            var c, d, h, g;
            for (c = this.items.length - 1; c >= 0; c--) {
                d = this.items[c], d.instance !== this.currentContainer && this.currentContainer && d.item[0] !== this.currentItem[0] || (h = this.options.toleranceElement ? k(this.options.toleranceElement, d.item) : d.item, f || (d.width = h.outerWidth(), d.height = h.outerHeight()), g = h.offset(), d.left = g.left, d.top = g.top)
            }
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (c = this.containers.length - 1; c >= 0; c--) {
                    g = this.containers[c].element.offset(), this.containers[c].containerCache.left = g.left, this.containers[c].containerCache.top = g.top, this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), this.containers[c].containerCache.height = this.containers[c].element.outerHeight()
                }
            }
            return this
        },
        _createPlaceholder: function (f) {
            f = f || this;
            var c, d = f.options;
            d.placeholder && d.placeholder.constructor !== String || (c = d.placeholder, d.placeholder = {
                element: function () {
                    var e = f.currentItem[0].nodeName.toLowerCase(), g = k("<" + e + ">", f.document[0]);
                    return f._addClass(g, "ui-sortable-placeholder", c || f.currentItem[0].className)._removeClass(g, "ui-sortable-helper"), "tbody" === e ? f._createTrPlaceholder(f.currentItem.find("tr").eq(0), k("<tr>", f.document[0]).appendTo(g)) : "tr" === e ? f._createTrPlaceholder(f.currentItem, g) : "img" === e && g.attr("src", f.currentItem.attr("src")), c || g.css("visibility", "hidden"), g
                }, update: function (e, g) {
                    (!c || d.forcePlaceholderSize) && (g.height() || g.height(f.currentItem.innerHeight() - parseInt(f.currentItem.css("paddingTop") || 0, 10) - parseInt(f.currentItem.css("paddingBottom") || 0, 10)), g.width() || g.width(f.currentItem.innerWidth() - parseInt(f.currentItem.css("paddingLeft") || 0, 10) - parseInt(f.currentItem.css("paddingRight") || 0, 10)))
                }
            }), f.placeholder = k(d.placeholder.element.call(f.element, f.currentItem)), f.currentItem.after(f.placeholder), d.placeholder.update(f, f.placeholder)
        },
        _createTrPlaceholder: function (f, c) {
            var d = this;
            f.children().each(function () {
                k("<td>&#160;</td>", d.document[0]).attr("colspan", k(this).attr("colspan") || 1).appendTo(c)
            })
        },
        _contactContainers: function (N) {
            var L, S, t, m, Q, f, M, v, P, R, O = null, g = null;
            for (L = this.containers.length - 1; L >= 0; L--) {
                if (!k.contains(this.currentItem[0], this.containers[L].element[0])) {
                    if (this._intersectsWith(this.containers[L].containerCache)) {
                        if (O && k.contains(this.containers[L].element[0], O.element[0])) {
                            continue
                        }
                        O = this.containers[L], g = L
                    } else {
                        this.containers[L].containerCache.over && (this.containers[L]._trigger("out", N, this._uiHash(this)), this.containers[L].containerCache.over = 0)
                    }
                }
            }
            if (O) {
                if (1 === this.containers.length) {
                    this.containers[g].containerCache.over || (this.containers[g]._trigger("over", N, this._uiHash(this)), this.containers[g].containerCache.over = 1)
                } else {
                    for (t = 10000, m = null, P = O.floating || this._isFloating(this.currentItem), Q = P ? "left" : "top", f = P ? "width" : "height", R = P ? "pageX" : "pageY", S = this.items.length - 1; S >= 0; S--) {
                        k.contains(this.containers[g].element[0], this.items[S].item[0]) && this.items[S].item[0] !== this.currentItem[0] && (M = this.items[S].item.offset()[Q], v = !1, N[R] - M > this.items[S][f] / 2 && (v = !0), t > Math.abs(N[R] - M) && (t = Math.abs(N[R] - M), m = this.items[S], this.direction = v ? "up" : "down"))
                    }
                    if (!m && !this.options.dropOnEmpty) {
                        return
                    }
                    if (this.currentContainer === this.containers[g]) {
                        return this.currentContainer.containerCache.over || (this.containers[g]._trigger("over", N, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0
                    }
                    m ? this._rearrange(N, m, null, !0) : this._rearrange(N, null, this.containers[g].element, !0), this._trigger("change", N, this._uiHash()), this.containers[g]._trigger("change", N, this._uiHash(this)), this.currentContainer = this.containers[g], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[g]._trigger("over", N, this._uiHash(this)), this.containers[g].containerCache.over = 1
                }
            }
        },
        _createHelper: function (f) {
            var c = this.options,
                d = k.isFunction(c.helper) ? k(c.helper.apply(this.element[0], [f, this.currentItem])) : "clone" === c.helper ? this.currentItem.clone() : this.currentItem;
            return d.parents("body").length || k("parent" !== c.appendTo ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), d[0] === this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }), (!d[0].style.width || c.forceHelperSize) && d.width(this.currentItem.width()), (!d[0].style.height || c.forceHelperSize) && d.height(this.currentItem.height()), d
        },
        _adjustOffsetFromHelper: function (c) {
            "string" == typeof c && (c = c.split(" ")), k.isArray(c) && (c = {
                left: +c[0],
                top: +c[1] || 0
            }), "left" in c && (this.offset.click.left = c.left + this.margins.left), "right" in c && (this.offset.click.left = this.helperProportions.width - c.right + this.margins.left), "top" in c && (this.offset.click.top = c.top + this.margins.top), "bottom" in c && (this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top)
        },
        _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var c = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && k.contains(this.scrollParent[0], this.offsetParent[0]) && (c.left += this.scrollParent.scrollLeft(), c.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && k.ui.ie) && (c = {
                top: 0,
                left: 0
            }), {
                top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if ("relative" === this.cssPosition) {
                var c = this.currentItem.position();
                return {
                    top: c.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: c.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {top: 0, left: 0}
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {width: this.helper.outerWidth(), height: this.helper.outerHeight()}
        },
        _setContainment: function () {
            var f, c, d, g = this.options;
            "parent" === g.containment && (g.containment = this.helper[0].parentNode), ("document" === g.containment || "window" === g.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === g.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === g.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(g.containment) || (f = k(g.containment)[0], c = k(g.containment).offset(), d = "hidden" !== k(f).css("overflow"), this.containment = [c.left + (parseInt(k(f).css("borderLeftWidth"), 10) || 0) + (parseInt(k(f).css("paddingLeft"), 10) || 0) - this.margins.left, c.top + (parseInt(k(f).css("borderTopWidth"), 10) || 0) + (parseInt(k(f).css("paddingTop"), 10) || 0) - this.margins.top, c.left + (d ? Math.max(f.scrollWidth, f.offsetWidth) : f.offsetWidth) - (parseInt(k(f).css("borderLeftWidth"), 10) || 0) - (parseInt(k(f).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, c.top + (d ? Math.max(f.scrollHeight, f.offsetHeight) : f.offsetHeight) - (parseInt(k(f).css("borderTopWidth"), 10) || 0) - (parseInt(k(f).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
        },
        _convertPositionTo: function (f, c) {
            c || (c = this.position);
            var d = "absolute" === f ? 1 : -1,
                h = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && k.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                g = /(html|body)/i.test(h[0].tagName);
            return {
                top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : g ? 0 : h.scrollTop()) * d,
                left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : g ? 0 : h.scrollLeft()) * d
            }
        },
        _generatePosition: function (m) {
            var d, g, t = this.options, p = m.pageX, c = m.pageY,
                l = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && k.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                f = /(html|body)/i.test(l[0].tagName);
            return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (m.pageX - this.offset.click.left < this.containment[0] && (p = this.containment[0] + this.offset.click.left), m.pageY - this.offset.click.top < this.containment[1] && (c = this.containment[1] + this.offset.click.top), m.pageX - this.offset.click.left > this.containment[2] && (p = this.containment[2] + this.offset.click.left), m.pageY - this.offset.click.top > this.containment[3] && (c = this.containment[3] + this.offset.click.top)), t.grid && (d = this.originalPageY + Math.round((c - this.originalPageY) / t.grid[1]) * t.grid[1], c = this.containment ? d - this.offset.click.top >= this.containment[1] && d - this.offset.click.top <= this.containment[3] ? d : d - this.offset.click.top >= this.containment[1] ? d - t.grid[1] : d + t.grid[1] : d, g = this.originalPageX + Math.round((p - this.originalPageX) / t.grid[0]) * t.grid[0], p = this.containment ? g - this.offset.click.left >= this.containment[0] && g - this.offset.click.left <= this.containment[2] ? g : g - this.offset.click.left >= this.containment[0] ? g - t.grid[0] : g + t.grid[0] : g)), {
                top: c - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : f ? 0 : l.scrollTop()),
                left: p - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : f ? 0 : l.scrollLeft())
            }
        },
        _rearrange: function (d, g, c, f) {
            c ? c[0].appendChild(this.placeholder[0]) : g.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? g.item[0] : g.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
            var h = this.counter;
            this._delay(function () {
                h === this.counter && this.refreshPositions(!f)
            })
        },
        _clear: function (d, g) {
            function c(m, n, l) {
                return function (e) {
                    l._trigger(m, e, n._uiHash(n))
                }
            }

            this.reverting = !1;
            var f, h = [];
            if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
                for (f in this._storedCSS) {
                    ("auto" === this._storedCSS[f] || "static" === this._storedCSS[f]) && (this._storedCSS[f] = "")
                }
                this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper")
            } else {
                this.currentItem.show()
            }
            for (this.fromOutside && !g && h.push(function (e) {
                this._trigger("receive", e, this._uiHash(this.fromOutside))
            }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || g || h.push(function (e) {
                this._trigger("update", e, this._uiHash())
            }), this !== this.currentContainer && (g || (h.push(function (e) {
                this._trigger("remove", e, this._uiHash())
            }), h.push(function (e) {
                return function (i) {
                    e._trigger("receive", i, this._uiHash(this))
                }
            }.call(this, this.currentContainer)), h.push(function (e) {
                return function (i) {
                    e._trigger("update", i, this._uiHash(this))
                }
            }.call(this, this.currentContainer)))), f = this.containers.length - 1; f >= 0; f--) {
                g || h.push(c("deactivate", this, this.containers[f])), this.containers[f].containerCache.over && (h.push(c("out", this, this.containers[f])), this.containers[f].containerCache.over = 0)
            }
            if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, g || this._trigger("beforeStop", d, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !g) {
                for (f = 0; h.length > f; f++) {
                    h[f].call(this, d)
                }
                this._trigger("stop", d, this._uiHash())
            }
            return this.fromOutside = !1, !this.cancelHelperRemoval
        },
        _trigger: function () {
            k.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
        },
        _uiHash: function (d) {
            var c = d || this;
            return {
                helper: c.helper,
                placeholder: c.placeholder || k([]),
                position: c.position,
                originalPosition: c.originalPosition,
                offset: c.positionAbs,
                item: c.currentItem,
                sender: d ? d.element : null
            }
        }
    }), k.widget("ui.spinner", {
        version: "1.12.1",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            classes: {
                "ui-spinner": "ui-corner-all",
                "ui-spinner-down": "ui-corner-br",
                "ui-spinner-up": "ui-corner-tr"
            },
            culture: null,
            icons: {down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n"},
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function () {
            this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function () {
            var d = this._super(), c = this.element;
            return k.each(["min", "max", "step"], function (e, f) {
                var g = c.attr(f);
                null != g && g.length && (d[f] = g)
            }), d
        },
        _events: {
            keydown: function (c) {
                this._start(c) && this._keydown(c) && c.preventDefault()
            }, keyup: "_stop", focus: function () {
                this.previous = this.element.val()
            }, blur: function (c) {
                return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", c), void 0)
            }, mousewheel: function (c, d) {
                if (d) {
                    if (!this.spinning && !this._start(c)) {
                        return !1
                    }
                    this._spin((d > 0 ? 1 : -1) * this.options.step, c), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function () {
                        this.spinning && this._stop(c)
                    }, 100), c.preventDefault()
                }
            }, "mousedown .ui-spinner-button": function (f) {
                function c() {
                    var g = this.element[0] === k.ui.safeActiveElement(this.document[0]);
                    g || (this.element.trigger("focus"), this.previous = d, this._delay(function () {
                        this.previous = d
                    }))
                }

                var d;
                d = this.element[0] === k.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val(), f.preventDefault(), c.call(this), this.cancelBlur = !0, this._delay(function () {
                    delete this.cancelBlur, c.call(this)
                }), this._start(f) !== !1 && this._repeat(null, k(f.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, f)
            }, "mouseup .ui-spinner-button": "_stop", "mouseenter .ui-spinner-button": function (c) {
                return k(c.currentTarget).hasClass("ui-state-active") ? this._start(c) === !1 ? !1 : (this._repeat(null, k(c.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, c), void 0) : void 0
            }, "mouseleave .ui-spinner-button": "_stop"
        },
        _enhance: function () {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>")
        },
        _draw: function () {
            this._enhance(), this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content"), this._addClass("ui-spinner-input"), this.element.attr("role", "spinbutton"), this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", !0).button({classes: {"ui-button": ""}}), this._removeClass(this.buttons, "ui-corner-all"), this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"), this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down"), this.buttons.first().button({
                icon: this.options.icons.up,
                showLabel: !1
            }), this.buttons.last().button({
                icon: this.options.icons.down,
                showLabel: !1
            }), this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) && this.uiSpinner.height() > 0 && this.uiSpinner.height(this.uiSpinner.height())
        },
        _keydown: function (f) {
            var c = this.options, d = k.ui.keyCode;
            switch (f.keyCode) {
                case d.UP:
                    return this._repeat(null, 1, f), !0;
                case d.DOWN:
                    return this._repeat(null, -1, f), !0;
                case d.PAGE_UP:
                    return this._repeat(null, c.page, f), !0;
                case d.PAGE_DOWN:
                    return this._repeat(null, -c.page, f), !0
            }
            return !1
        },
        _start: function (c) {
            return this.spinning || this._trigger("start", c) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1
        },
        _repeat: function (d, f, c) {
            d = d || 500, clearTimeout(this.timer), this.timer = this._delay(function () {
                this._repeat(40, f, c)
            }, d), this._spin(f * this.options.step, c)
        },
        _spin: function (d, f) {
            var c = this.value() || 0;
            this.counter || (this.counter = 1), c = this._adjustValue(c + d * this._increment(this.counter)), this.spinning && this._trigger("spin", f, {value: c}) === !1 || (this._value(c), this.counter++)
        },
        _increment: function (d) {
            var c = this.options.incremental;
            return c ? k.isFunction(c) ? c(d) : Math.floor(d * d * d / 50000 - d * d / 500 + 17 * d / 200 + 1) : 1
        },
        _precision: function () {
            var c = this._precisionOf(this.options.step);
            return null !== this.options.min && (c = Math.max(c, this._precisionOf(this.options.min))), c
        },
        _precisionOf: function (d) {
            var f = "" + d, c = f.indexOf(".");
            return -1 === c ? 0 : f.length - c - 1
        },
        _adjustValue: function (d) {
            var g, c, f = this.options;
            return g = null !== f.min ? f.min : 0, c = d - g, c = Math.round(c / f.step) * f.step, d = g + c, d = parseFloat(d.toFixed(this._precision())), null !== f.max && d > f.max ? f.max : null !== f.min && f.min > d ? f.min : d
        },
        _stop: function (c) {
            this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", c))
        },
        _setOption: function (d, g) {
            var c, f, h;
            return "culture" === d || "numberFormat" === d ? (c = this._parse(this.element.val()), this.options[d] = g, this.element.val(this._format(c)), void 0) : (("max" === d || "min" === d || "step" === d) && "string" == typeof g && (g = this._parse(g)), "icons" === d && (f = this.buttons.first().find(".ui-icon"), this._removeClass(f, null, this.options.icons.up), this._addClass(f, null, g.up), h = this.buttons.last().find(".ui-icon"), this._removeClass(h, null, this.options.icons.down), this._addClass(h, null, g.down)), this._super(d, g), void 0)
        },
        _setOptionDisabled: function (c) {
            this._super(c), this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!c), this.element.prop("disabled", !!c), this.buttons.button(c ? "disable" : "enable")
        },
        _setOptions: w(function (c) {
            this._super(c)
        }),
        _parse: function (c) {
            return "string" == typeof c && "" !== c && (c = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(c, 10, this.options.culture) : +c), "" === c || isNaN(c) ? null : c
        },
        _format: function (c) {
            return "" === c ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(c, this.options.numberFormat, this.options.culture) : c
        },
        _refresh: function () {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        isValid: function () {
            var c = this.value();
            return null === c ? !1 : c === this._adjustValue(c)
        },
        _value: function (d, f) {
            var c;
            "" !== d && (c = this._parse(d), null !== c && (f || (c = this._adjustValue(c)), d = this._format(c))), this.element.val(d), this._refresh()
        },
        _destroy: function () {
            this.element.prop("disabled", !1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"), this.uiSpinner.replaceWith(this.element)
        },
        stepUp: w(function (c) {
            this._stepUp(c)
        }),
        _stepUp: function (c) {
            this._start() && (this._spin((c || 1) * this.options.step), this._stop())
        },
        stepDown: w(function (c) {
            this._stepDown(c)
        }),
        _stepDown: function (c) {
            this._start() && (this._spin((c || 1) * -this.options.step), this._stop())
        },
        pageUp: w(function (c) {
            this._stepUp((c || 1) * this.options.page)
        }),
        pageDown: w(function (c) {
            this._stepDown((c || 1) * this.options.page)
        }),
        value: function (c) {
            return arguments.length ? (w(this._value).call(this, c), void 0) : this._parse(this.element.val())
        },
        widget: function () {
            return this.uiSpinner
        }
    }), k.uiBackCompat !== !1 && k.widget("ui.spinner", k.ui.spinner, {
        _enhance: function () {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())
        }, _uiSpinnerHtml: function () {
            return "<span>"
        }, _buttonHtml: function () {
            return "<a></a><a></a>"
        }
    }), k.ui.spinner, k.widget("ui.tabs", {
        version: "1.12.1",
        delay: 300,
        options: {
            active: null,
            classes: {
                "ui-tabs": "ui-corner-all",
                "ui-tabs-nav": "ui-corner-all",
                "ui-tabs-panel": "ui-corner-bottom",
                "ui-tabs-tab": "ui-corner-top"
            },
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _isLocal: function () {
            var c = /#.*$/;
            return function (g) {
                var d, f;
                d = g.href.replace(c, ""), f = location.href.replace(c, "");
                try {
                    d = decodeURIComponent(d)
                } catch (h) {
                }
                try {
                    f = decodeURIComponent(f)
                } catch (h) {
                }
                return g.hash.length > 1 && d === f
            }
        }(),
        _create: function () {
            var d = this, c = this.options;
            this.running = !1, this._addClass("ui-tabs", "ui-widget ui-widget-content"), this._toggleClass("ui-tabs-collapsible", null, c.collapsible), this._processTabs(), c.active = this._initialActive(), k.isArray(c.disabled) && (c.disabled = k.unique(c.disabled.concat(k.map(this.tabs.filter(".ui-state-disabled"), function (e) {
                return d.tabs.index(e)
            }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(c.active) : k(), this._refresh(), this.active.length && this.load(c.active)
        },
        _initialActive: function () {
            var f = this.options.active, c = this.options.collapsible, d = location.hash.substring(1);
            return null === f && (d && this.tabs.each(function (e, g) {
                return k(g).attr("aria-controls") === d ? (f = e, !1) : void 0
            }), null === f && (f = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === f || -1 === f) && (f = this.tabs.length ? 0 : !1)), f !== !1 && (f = this.tabs.index(this.tabs.eq(f)), -1 === f && (f = c ? !1 : 0)), !c && f === !1 && this.anchors.length && (f = 0), f
        },
        _getCreateEventData: function () {
            return {tab: this.active, panel: this.active.length ? this._getPanelForTab(this.active) : k()}
        },
        _tabKeydown: function (f) {
            var c = k(k.ui.safeActiveElement(this.document[0])).closest("li"), d = this.tabs.index(c), g = !0;
            if (!this._handlePageNav(f)) {
                switch (f.keyCode) {
                    case k.ui.keyCode.RIGHT:
                    case k.ui.keyCode.DOWN:
                        d++;
                        break;
                    case k.ui.keyCode.UP:
                    case k.ui.keyCode.LEFT:
                        g = !1, d--;
                        break;
                    case k.ui.keyCode.END:
                        d = this.anchors.length - 1;
                        break;
                    case k.ui.keyCode.HOME:
                        d = 0;
                        break;
                    case k.ui.keyCode.SPACE:
                        return f.preventDefault(), clearTimeout(this.activating), this._activate(d), void 0;
                    case k.ui.keyCode.ENTER:
                        return f.preventDefault(), clearTimeout(this.activating), this._activate(d === this.options.active ? !1 : d), void 0;
                    default:
                        return
                }
                f.preventDefault(), clearTimeout(this.activating), d = this._focusNextTab(d, g), f.ctrlKey || f.metaKey || (c.attr("aria-selected", "false"), this.tabs.eq(d).attr("aria-selected", "true"), this.activating = this._delay(function () {
                    this.option("active", d)
                }, this.delay))
            }
        },
        _panelKeydown: function (c) {
            this._handlePageNav(c) || c.ctrlKey && c.keyCode === k.ui.keyCode.UP && (c.preventDefault(), this.active.trigger("focus"))
        },
        _handlePageNav: function (c) {
            return c.altKey && c.keyCode === k.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : c.altKey && c.keyCode === k.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0
        },
        _findNextTab: function (f, c) {
            function d() {
                return f > g && (f = 0), 0 > f && (f = g), f
            }

            for (var g = this.tabs.length - 1; -1 !== k.inArray(d(), this.options.disabled);) {
                f = c ? f + 1 : f - 1
            }
            return f
        },
        _focusNextTab: function (c, d) {
            return c = this._findNextTab(c, d), this.tabs.eq(c).trigger("focus"), c
        },
        _setOption: function (c, d) {
            return "active" === c ? (this._activate(d), void 0) : (this._super(c, d), "collapsible" === c && (this._toggleClass("ui-tabs-collapsible", null, d), d || this.options.active !== !1 || this._activate(0)), "event" === c && this._setupEvents(d), "heightStyle" === c && this._setupHeightStyle(d), void 0)
        },
        _sanitizeSelector: function (c) {
            return c ? c.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function () {
            var d = this.options, c = this.tablist.children(":has(a[href])");
            d.disabled = k.map(c.filter(".ui-state-disabled"), function (e) {
                return c.index(e)
            }), this._processTabs(), d.active !== !1 && this.anchors.length ? this.active.length && !k.contains(this.tablist[0], this.active[0]) ? this.tabs.length === d.disabled.length ? (d.active = !1, this.active = k()) : this._activate(this._findNextTab(Math.max(0, d.active - 1), !1)) : d.active = this.tabs.index(this.active) : (d.active = !1, this.active = k()), this._refresh()
        },
        _refresh: function () {
            this._setOptionDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden": "true"}), this.active.length ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }), this._addClass(this.active, "ui-tabs-active", "ui-state-active"), this._getPanelForTab(this.active).show().attr({"aria-hidden": "false"})) : this.tabs.eq(0).attr("tabIndex", 0)
        },
        _processTabs: function () {
            var f = this, c = this.tabs, d = this.anchors, g = this.panels;
            this.tablist = this._getList().attr("role", "tablist"), this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header"), this.tablist.on("mousedown" + this.eventNamespace, "> li", function (h) {
                k(this).is(".ui-state-disabled") && h.preventDefault()
            }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
                k(this).closest("li").is(".ui-state-disabled") && this.blur()
            }), this.tabs = this.tablist.find("> li:has(a[href])").attr({
                role: "tab",
                tabIndex: -1
            }), this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"), this.anchors = this.tabs.map(function () {
                return k("a", this)[0]
            }).attr({
                role: "presentation",
                tabIndex: -1
            }), this._addClass(this.anchors, "ui-tabs-anchor"), this.panels = k(), this.anchors.each(function (p, u) {
                var M, L, m, v = k(u).uniqueId().attr("id"), t = k(u).closest("li"), e = t.attr("aria-controls");
                f._isLocal(u) ? (M = u.hash, m = M.substring(1), L = f.element.find(f._sanitizeSelector(M))) : (m = t.attr("aria-controls") || k({}).uniqueId()[0].id, M = "#" + m, L = f.element.find(M), L.length || (L = f._createPanel(m), L.insertAfter(f.panels[p - 1] || f.tablist)), L.attr("aria-live", "polite")), L.length && (f.panels = f.panels.add(L)), e && t.data("ui-tabs-aria-controls", e), t.attr({
                    "aria-controls": m,
                    "aria-labelledby": v
                }), L.attr("aria-labelledby", v)
            }), this.panels.attr("role", "tabpanel"), this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"), c && (this._off(c.not(this.tabs)), this._off(d.not(this.anchors)), this._off(g.not(this.panels)))
        },
        _getList: function () {
            return this.tablist || this.element.find("ol, ul").eq(0)
        },
        _createPanel: function (c) {
            return k("<div>").attr("id", c).data("ui-tabs-destroy", !0)
        },
        _setOptionDisabled: function (f) {
            var c, d, g;
            for (k.isArray(f) && (f.length ? f.length === this.anchors.length && (f = !0) : f = !1), g = 0; d = this.tabs[g]; g++) {
                c = k(d), f === !0 || -1 !== k.inArray(g, f) ? (c.attr("aria-disabled", "true"), this._addClass(c, null, "ui-state-disabled")) : (c.removeAttr("aria-disabled"), this._removeClass(c, null, "ui-state-disabled"))
            }
            this.options.disabled = f, this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, f === !0)
        },
        _setupEvents: function (d) {
            var c = {};
            d && k.each(d.split(" "), function (f, g) {
                c[g] = "_eventHandler"
            }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {
                click: function (e) {
                    e.preventDefault()
                }
            }), this._on(this.anchors, c), this._on(this.tabs, {keydown: "_tabKeydown"}), this._on(this.panels, {keydown: "_panelKeydown"}), this._focusable(this.tabs), this._hoverable(this.tabs)
        },
        _setupHeightStyle: function (f) {
            var c, d = this.element.parent();
            "fill" === f ? (c = d.height(), c -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function () {
                var h = k(this), g = h.css("position");
                "absolute" !== g && "fixed" !== g && (c -= h.outerHeight(!0))
            }), this.element.children().not(this.panels).each(function () {
                c -= k(this).outerHeight(!0)
            }), this.panels.each(function () {
                k(this).height(Math.max(0, c - k(this).innerHeight() + k(this).height()))
            }).css("overflow", "auto")) : "auto" === f && (c = 0, this.panels.each(function () {
                c = Math.max(c, k(this).height("").height())
            }).height(c))
        },
        _eventHandler: function (u) {
            var p = this.options, M = this.active, g = k(u.currentTarget), f = g.closest("li"), L = f[0] === M[0],
                d = L && p.collapsible, t = d ? k() : this._getPanelForTab(f),
                m = M.length ? this._getPanelForTab(M) : k(),
                v = {oldTab: M, oldPanel: m, newTab: d ? k() : f, newPanel: t};
            u.preventDefault(), f.hasClass("ui-state-disabled") || f.hasClass("ui-tabs-loading") || this.running || L && !p.collapsible || this._trigger("beforeActivate", u, v) === !1 || (p.active = d ? !1 : this.tabs.index(f), this.active = L ? k() : f, this.xhr && this.xhr.abort(), m.length || t.length || k.error("jQuery UI Tabs: Mismatching fragment identifier."), t.length && this.load(this.tabs.index(f), u), this._toggle(u, v))
        },
        _toggle: function (h, d) {
            function f() {
                l.running = !1, l._trigger("activate", h, d)
            }

            function m() {
                l._addClass(d.newTab.closest("li"), "ui-tabs-active", "ui-state-active"), c.length && l.options.show ? l._show(c, l.options.show, f) : (c.show(), f())
            }

            var l = this, c = d.newPanel, g = d.oldPanel;
            this.running = !0, g.length && this.options.hide ? this._hide(g, this.options.hide, function () {
                l._removeClass(d.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), m()
            }) : (this._removeClass(d.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), g.hide(), m()), g.attr("aria-hidden", "true"), d.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), c.length && g.length ? d.oldTab.attr("tabIndex", -1) : c.length && this.tabs.filter(function () {
                return 0 === k(this).attr("tabIndex")
            }).attr("tabIndex", -1), c.attr("aria-hidden", "false"), d.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _activate: function (f) {
            var c, d = this._findActive(f);
            d[0] !== this.active[0] && (d.length || (d = this.active), c = d.find(".ui-tabs-anchor")[0], this._eventHandler({
                target: c,
                currentTarget: c,
                preventDefault: k.noop
            }))
        },
        _findActive: function (c) {
            return c === !1 ? k() : this.tabs.eq(c)
        },
        _getIndex: function (c) {
            return "string" == typeof c && (c = this.anchors.index(this.anchors.filter("[href$='" + k.ui.escapeSelector(c) + "']"))), c
        },
        _destroy: function () {
            this.xhr && this.xhr.abort(), this.tablist.removeAttr("role").off(this.eventNamespace), this.anchors.removeAttr("role tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function () {
                k.data(this, "ui-tabs-destroy") ? k(this).remove() : k(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")
            }), this.tabs.each(function () {
                var d = k(this), c = d.data("ui-tabs-aria-controls");
                c ? d.attr("aria-controls", c).removeData("ui-tabs-aria-controls") : d.removeAttr("aria-controls")
            }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "")
        },
        enable: function (d) {
            var c = this.options.disabled;
            c !== !1 && (void 0 === d ? c = !1 : (d = this._getIndex(d), c = k.isArray(c) ? k.map(c, function (e) {
                return e !== d ? e : null
            }) : k.map(this.tabs, function (f, e) {
                return e !== d ? e : null
            })), this._setOptionDisabled(c))
        },
        disable: function (d) {
            var c = this.options.disabled;
            if (c !== !0) {
                if (void 0 === d) {
                    c = !0
                } else {
                    if (d = this._getIndex(d), -1 !== k.inArray(d, c)) {
                        return
                    }
                    c = k.isArray(c) ? k.merge([d], c).sort() : [d]
                }
                this._setOptionDisabled(c)
            }
        },
        load: function (m, d) {
            m = this._getIndex(m);
            var g = this, t = this.tabs.eq(m), p = t.find(".ui-tabs-anchor"), c = this._getPanelForTab(t),
                l = {tab: t, panel: c}, f = function (h, i) {
                    "abort" === i && g.panels.stop(!1, !0), g._removeClass(t, "ui-tabs-loading"), c.removeAttr("aria-busy"), h === g.xhr && delete g.xhr
                };
            this._isLocal(p[0]) || (this.xhr = k.ajax(this._ajaxSettings(p, d, l)), this.xhr && "canceled" !== this.xhr.statusText && (this._addClass(t, "ui-tabs-loading"), c.attr("aria-busy", "true"), this.xhr.done(function (h, i, o) {
                setTimeout(function () {
                    c.html(h), g._trigger("load", d, l), f(o, i)
                }, 1)
            }).fail(function (h, i) {
                setTimeout(function () {
                    f(h, i)
                }, 1)
            })))
        },
        _ajaxSettings: function (f, c, d) {
            var g = this;
            return {
                url: f.attr("href").replace(/#.*$/, ""), beforeSend: function (h, i) {
                    return g._trigger("beforeLoad", c, k.extend({jqXHR: h, ajaxSettings: i}, d))
                }
            }
        },
        _getPanelForTab: function (d) {
            var c = k(d).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + c))
        }
    }), k.uiBackCompat !== !1 && k.widget("ui.tabs", k.ui.tabs, {
        _processTabs: function () {
            this._superApply(arguments), this._addClass(this.tabs, "ui-tab")
        }
    }), k.ui.tabs, k.widget("ui.tooltip", {
        version: "1.12.1", options: {
            classes: {"ui-tooltip": "ui-corner-all ui-widget-shadow"},
            content: function () {
                var c = k(this).attr("title") || "";
                return k("<a>").text(c).html()
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {my: "left top+15", at: "left bottom", collision: "flipfit flip"},
            show: !0,
            track: !1,
            close: null,
            open: null
        }, _addDescribedBy: function (f, c) {
            var d = (f.attr("aria-describedby") || "").split(/\s+/);
            d.push(c), f.data("ui-tooltip-id", c).attr("aria-describedby", k.trim(d.join(" ")))
        }, _removeDescribedBy: function (f) {
            var c = f.data("ui-tooltip-id"), d = (f.attr("aria-describedby") || "").split(/\s+/), g = k.inArray(c, d);
            -1 !== g && d.splice(g, 1), f.removeData("ui-tooltip-id"), d = k.trim(d.join(" ")), d ? f.attr("aria-describedby", d) : f.removeAttr("aria-describedby")
        }, _create: function () {
            this._on({
                mouseover: "open",
                focusin: "open"
            }), this.tooltips = {}, this.parents = {}, this.liveRegion = k("<div>").attr({
                role: "log",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), this.disabledTitles = k([])
        }, _setOption: function (f, c) {
            var d = this;
            this._super(f, c), "content" === f && k.each(this.tooltips, function (g, h) {
                d._updateContent(h.element)
            })
        }, _setOptionDisabled: function (c) {
            this[c ? "_disable" : "_enable"]()
        }, _disable: function () {
            var c = this;
            k.each(this.tooltips, function (d, e) {
                var f = k.Event("blur");
                f.target = f.currentTarget = e.element[0], c.close(f, !0)
            }), this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function () {
                var d = k(this);
                return d.is("[title]") ? d.data("ui-tooltip-title", d.attr("title")).removeAttr("title") : void 0
            }))
        }, _enable: function () {
            this.disabledTitles.each(function () {
                var c = k(this);
                c.data("ui-tooltip-title") && c.attr("title", c.data("ui-tooltip-title"))
            }), this.disabledTitles = k([])
        }, open: function (f) {
            var c = this, d = k(f ? f.target : this.element).closest(this.options.items);
            d.length && !d.data("ui-tooltip-id") && (d.attr("title") && d.data("ui-tooltip-title", d.attr("title")), d.data("ui-tooltip-open", !0), f && "mouseover" === f.type && d.parents().each(function () {
                var h, g = k(this);
                g.data("ui-tooltip-open") && (h = k.Event("blur"), h.target = h.currentTarget = this, c.close(h, !0)), g.attr("title") && (g.uniqueId(), c.parents[this.id] = {
                    element: this,
                    title: g.attr("title")
                }, g.attr("title", ""))
            }), this._registerCloseHandlers(f, d), this._updateContent(d, f))
        }, _updateContent: function (d, g) {
            var c, f = this.options.content, l = this, h = g ? g.type : null;
            return "string" == typeof f || f.nodeType || f.jquery ? this._open(g, d, f) : (c = f.call(d[0], function (e) {
                l._delay(function () {
                    d.data("ui-tooltip-open") && (g && (g.type = h), this._open(g, d, e))
                })
            }), c && this._open(g, d, c), void 0)
        }, _open: function (t, m, v) {
            function f(e) {
                g.of = e, u.is(":hidden") || u.position(g)
            }

            var d, u, c, p, g = k.extend({}, this.options.position);
            if (v) {
                if (d = this._find(m)) {
                    return d.tooltip.find(".ui-tooltip-content").html(v), void 0
                }
                m.is("[title]") && (t && "mouseover" === t.type ? m.attr("title", "") : m.removeAttr("title")), d = this._tooltip(m), u = d.tooltip, this._addDescribedBy(m, u.attr("id")), u.find(".ui-tooltip-content").html(v), this.liveRegion.children().hide(), p = k("<div>").html(u.find(".ui-tooltip-content").html()), p.removeAttr("name").find("[name]").removeAttr("name"), p.removeAttr("id").find("[id]").removeAttr("id"), p.appendTo(this.liveRegion), this.options.track && t && /^mouse/.test(t.type) ? (this._on(this.document, {mousemove: f}), f(t)) : u.position(k.extend({of: m}, this.options.position)), u.hide(), this._show(u, this.options.show), this.options.track && this.options.show && this.options.show.delay && (c = this.delayedShow = setInterval(function () {
                    u.is(":visible") && (f(g.of), clearInterval(c))
                }, k.fx.interval)), this._trigger("open", t, {tooltip: u})
            }
        }, _registerCloseHandlers: function (f, c) {
            var d = {
                keyup: function (h) {
                    if (h.keyCode === k.ui.keyCode.ESCAPE) {
                        var g = k.Event(h);
                        g.currentTarget = c[0], this.close(g, !0)
                    }
                }
            };
            c[0] !== this.element[0] && (d.remove = function () {
                this._removeTooltip(this._find(c).tooltip)
            }), f && "mouseover" !== f.type || (d.mouseleave = "close"), f && "focusin" !== f.type || (d.focusout = "close"), this._on(!0, c, d)
        }, close: function (f) {
            var c, d = this, h = k(f ? f.currentTarget : this.element), g = this._find(h);
            return g ? (c = g.tooltip, g.closing || (clearInterval(this.delayedShow), h.data("ui-tooltip-title") && !h.attr("title") && h.attr("title", h.data("ui-tooltip-title")), this._removeDescribedBy(h), g.hiding = !0, c.stop(!0), this._hide(c, this.options.hide, function () {
                d._removeTooltip(k(this))
            }), h.removeData("ui-tooltip-open"), this._off(h, "mouseleave focusout keyup"), h[0] !== this.element[0] && this._off(h, "remove"), this._off(this.document, "mousemove"), f && "mouseleave" === f.type && k.each(this.parents, function (m, l) {
                k(l.element).attr("title", l.title), delete d.parents[m]
            }), g.closing = !0, this._trigger("close", f, {tooltip: c}), g.hiding || (g.closing = !1)), void 0) : (h.removeData("ui-tooltip-open"), void 0)
        }, _tooltip: function (f) {
            var c = k("<div>").attr("role", "tooltip"), d = k("<div>").appendTo(c), g = c.uniqueId().attr("id");
            return this._addClass(d, "ui-tooltip-content"), this._addClass(c, "ui-tooltip", "ui-widget ui-widget-content"), c.appendTo(this._appendTo(f)), this.tooltips[g] = {
                element: f,
                tooltip: c
            }
        }, _find: function (c) {
            var d = c.data("ui-tooltip-id");
            return d ? this.tooltips[d] : null
        }, _removeTooltip: function (c) {
            c.remove(), delete this.tooltips[c.attr("id")]
        }, _appendTo: function (c) {
            var d = c.closest(".ui-front, dialog");
            return d.length || (d = this.document[0].body), d
        }, _destroy: function () {
            var c = this;
            k.each(this.tooltips, function (d, e) {
                var g = k.Event("blur"), f = e.element;
                g.target = g.currentTarget = f[0], c.close(g, !0), k("#" + d).remove(), f.data("ui-tooltip-title") && (f.attr("title") || f.attr("title", f.data("ui-tooltip-title")), f.removeData("ui-tooltip-title"))
            }), this.liveRegion.remove()
        }
    }), k.uiBackCompat !== !1 && k.widget("ui.tooltip", k.ui.tooltip, {
        options: {tooltipClass: null},
        _tooltip: function () {
            var c = this._superApply(arguments);
            return this.options.tooltipClass && c.tooltip.addClass(this.options.tooltipClass), c
        }
    }), k.ui.tooltip
});