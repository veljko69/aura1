function App(){

    var mobileBreakRes = 768;
    if($('header').hasClass('mobilesm')){
        mobileBreakRes = 995;
    }

    var defaultLang = '';
    var clickedLetter   = false;

    /*
     * GET WINDOW WIDTH
     */
    var windowWidth = function(){
        return (window.innerWidth) ?
            window.innerWidth :
        document.documentElement.clienWidth || document.body.clienWidth || 0;
    };

    /*
     * GET WINDOW HEIGHT
     */
    var windowHeight = function(){
        return (window.innerHeight) ?
            window.innerHeight :
        document.documentElement.clientHeight || document.body.clientHeight || 0;
    };

    /*
     * PRINT ELEMENT
     * Description: Print element with given ID
     */
    function printFrame(elId) {
        var printFrame = window.frames["print_frame"];

        printFrame.document.body.innerHTML=document.getElementById(elId).innerHTML;
        printFrame.window.focus();
        printFrame.window.print();
    }

    /*
     * LOAD TAB ON CLICK OF AN ELEMENT
     */
    var handleBindedToTab = function(){
        $('.binded-to-tab').click(function(e){
            e.preventDefault();

            var $elClicked = $(this);
            var $tab = $('a[href="'+$elClicked.attr('href')+'"]').tab('show').first();

            $("html, body").animate({scrollTop: $tab.offset().top}, 900);
        });
    };

    /*
     * Animate anchor links
     */

    var handleAnchorLinks = function(){
        /*$('a[href*=#]').on('click', function(event){
            if($(this).hasClass("smooth-scroll")){
                event.preventDefault();
                $('html,body').animate({scrollTop:$(this.hash).offset().top - 150}, 500);
            }
        });*/
    };

    /*
     * SET LOCALES
     * TODO: active language should be dynamically setted
     *       based on some global variable
     *       app.locale for example
     * Plugins used: Bootstraps Bootbox, ParsleyValidator
     */
    var setLocales = function(lang){
        bootbox.setDefaults({ locale: lang });
        window.ParsleyValidator.setLocale(lang);
        setDefaultLang(lang);
    };

    var setDefaultLang = function(lang){
        defaultLang = lang;
    };

    var getDefaultLang = function(){
        return defaultLang;
    };

    /*
     * GET LOGIN MODAL
     * Description: return modal that is globally being used for login
     */
    var getLoginModal = function(){
        return $('#login_modal');
    };

    /*
     * SET TOASTR OPTIONS
     * Plugin used: Bootstraps Toastr
     */
    var setToastrOptions = function(){
        toastr.options.positionClass = 'toast-middle-center';
    };

    /*
     * MAIN NAVIGATION
     * Plugin used: scrollToFixed,
     */
    var handleNavMain = function(){

        var $header = $('.header'),
            $navWrapper = $('.nav-main-wrapper'),
            $navDropdown = $('.nav-main-submenu-wrapper,.nav-main-dropdown-wrapper'),
            $nav = $(".nav-main");
        var header_fixed = $header.data('fixed');

        header_fixed = (header_fixed)? true:false;


        //fix header using plugin scrollToFixed
        function fixedHeader(){
            $header.scrollToFixed();
        };

        //fix main navigation using plugin scrollToFixed
        function fixedNavMain(){
            var adminheader = $('.header-top-nav-autocomplete');
            var tm;

            if(adminheader.length > 0){
                $(".header-top").addClass('underadmin');
                tm = $(".header-top").outerHeight()+30;
            }else{
                tm = $(".header-top").outerHeight();
            }

            if(header_fixed){
                $navWrapper.scrollToFixed({
                    dontSetWidth: true,
                    marginTop: tm,
                    preFixed: function() { $(".header-top").addClass("fixed-style");
                    $(".header-top-nav-autocomplete").addClass("fixed-style"); }
                });

            }else{
                $navWrapper.scrollToFixed({
                    dontSetWidth: true,
                    marginTop: tm,
                    preFixed: function() { $(".header-top").addClass("fixed-style");
                        $(".header-top-nav-autocomplete").addClass("fixed-style");},
                    unfixed: function() { $(".header-top").removeClass("fixed-style");
                        $(".header-top-nav-autocomplete").removeClass("fixed-style");}
                });

            }


        };

        //this is some real magic
        //line magically follows the cursor within main navigation
        //source: http://css-tricks.com/jquery-magicline-navigation
        function magicLine(){
            //do not show it on mobile devices
            if(app.width() <= app.mobileBreakpoint) return;

            var $el, leftPos, newWidth;

            $nav.append("<li class='nav-main-magicline'></li>");
            var $magicLine = $nav.find(".nav-main-magicline"),
                magicLineWidth = $nav.children(".active").length ? $nav.children(".active").width() : 0;

            $magicLine
                .width(magicLineWidth)
                .css("left", $nav.children(".active").length ? $nav.find(".active a").position().left : 0)
                .data("origLeft", $magicLine.position().left)
                .data("origWidth", magicLineWidth);

            $nav.find("li > a").hover(function() {
                $el = $(this);
                leftPos = $el.position().left;
                newWidth = $el.parent().width();
                $magicLine.stop().animate({
                    left: leftPos,
                    width: newWidth
                }, {duration: 200});
            }, function() {
                $magicLine.stop().animate({
                    left: $magicLine.data("origLeft"),
                    width: $magicLine.data("origWidth")
                }, {duration: 200});
            });
        };

        //show dropdown on hover of main navigation
        var dropdownHover = function(){
            $navDropdown.each(function(){
                var $dropdown = $(this),
                    $li = $dropdown.parent('li');

                var show = function(){
                    $li.addClass('active');
                    $dropdown.removeClass('hidden');
                    $dropdown.css({ top: $li.outerHeight(true)});
                    $dropdown.addClass('loaded');
                    var sliderss = $dropdown.find('.slider-init');
                    if($dropdown.parent('.level4').length === 0){
                        setTimeout(function(){ dropdownSlider(sliderss); }, 120);
                    }

                    //setTimeout(function(){ dropdownSliderReinit($sld); }, 120);
                    //handleBrandsSlider();
//                    magicLine();
                };

                var hide = function(){
                    $li.removeClass('active');
                    $dropdown.removeClass('loaded').addClass('hidden');
                };

                var timeoutId;
                $li.hover(function(e){
                    if (!timeoutId) {
                        timeoutId = window.setTimeout(function() {
                            timeoutId = null;
                            show();
                        }, 300);
                    }

                }, function(){
                    if (timeoutId) {
                        window.clearTimeout(timeoutId);
                        timeoutId = null;
                    }else {
                        hide();
                    }

                });

//                $dropdown.find('.nav-main-dropdown-inner').hover(function(e){}, function(e){
//                    if($(e.currentTarget)[0] === $(this)[0]){
//                        hide();
//                    }
//                });

                $dropdown.find('.nav-main-dropdown-inner').hover(function(){
                    $(this).find(".nav-main-dropdown-inner").removeClass("hidden");
                }, function(){
                    $(this).find(".nav-main-dropdown-inner").addClass("hidden");
                });

            });

        };

        /* Zbog problema na modalima u Safariju linkovi za modal se menjaju linkovima za strane */
/*        var safariUserBtns = function(){
            if (navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1 && windowWidth() < 768) {
                var buttonLogin = $('.nav-main-useractions .login-btn, .nav-main-useractions .register-btn');
                buttonLogin.click(function(){
                    $(this).removeAttr('data-toggle').removeAttr('data-target');
                    var permalink = $(this).data('permalink');
                    console.log(permalink);
                    window.location.replace(permalink);
                });
            }
        };*/




        var $navMobileIcon = $('.nav-mobile-icon'),
            $navMainWrapper = $('.nav-main-wrapper'),
            $shopOptions = $('.header .user'),
            $header = $('.header'),
            $topLangOptions = $('.lang-dropdown .dropdown-menu');

        function menuAdjustSize() {
            $navMainWrapper.removeClass('loaded');                                          /* Zatvara mobilni meni */
            $navMobileIcon.removeClass('active');                                           /* Deaktivira dugme za mob meni */
            $('.nav-main > li > a').css({'display': 'block'});
            $('.nav-main-dropdown-wrapper').addClass('hidden');
            if($(window).width() < mobileBreakRes) {
                $navMainWrapper.find('.nav-main-toplang').html($topLangOptions.html());     /* Probacuje lang bar u mobile menu */
                $navMainWrapper.find('.nav-main-useractions').html($shopOptions.html());    /* prebaci user links */
                $navMainWrapper.css({'display': 'none'});                                   /* Sakrij meni*/
            } else {
                $navMainWrapper.find('.nav-main-toplang').find('.lang-dropdown').hide();    /* Sakriva lang meni iz glavne navigacija  */
                $navMainWrapper.find('.nav-main-useractions').hide();                       /* Sakriva user linkove iz glavnog menija */
                $navMainWrapper.css({'margin-top': '0px', 'display': 'block'});             /* Prikazuje glavni meni i skida  marginu veličinu header-a */
                $("body").removeClass("body-overflow");
            }
        };

        var w = $(window).width();
        $(window).resize(function(){
            if ($(window).width()==w) return;
            w = $(window).width();
            menuAdjustSize();
        });

        $navMobileIcon.click(function(){

            $navMainWrapper.find('.nav-main-toplang').html($topLangOptions.html());         /* Probacuje lang bar u mobile menu na klik ako je pocetna rez bila mob */
            $navMainWrapper.find('.nav-main-useractions').html($shopOptions.html());        /* prebaci user links na klik ako je pocetna rez bila mob  */
            $("body").toggleClass("body-overflow");                                         /* Dodaje klasu da ne može da se skroluje ekran dok je otvoren meni */
            $navMobileIcon.toggleClass('active');
            $navMainWrapper.find('.nav-simple').removeClass('nav-simple hidden-xs').addClass('nav-main').find('a').removeClass('underline-effect');
            $navMainWrapper.toggleClass('loaded').css({'margin-top': ($header.outerHeight() - 1)}); /* Prikazuje meni i dodaje gornju marginu visine headera */
            $navMainWrapper.toggle();
            /* Prikazuje i sklanja meni */
            var safariUserBtns = function(){

                if (navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1 && windowWidth() < mobileBreakRes) {

                    var buttonLogin = $('.item-register .register-btn, .item-login .login-btn');
                    buttonLogin.removeAttr('data-toggle').removeAttr('data-target');
                    buttonLogin.click(function(){
                        var permalink = $(this).data('permalink');
                        $(this).attr('href',permalink);
                        //window.location.replace(permalink);
                    });

                }

            }();
        });

        //show dropdown on click of main navigation
        var dropdownToggle = function(){

            if($('.header').find('.user').length !== 0) {
                $header.next().hide();
            }

            $navMainWrapper.find('.nav-main > li > a').click(function(e){
                e.preventDefault();
                e.stopPropagation();
                window.location.href = $(this).attr('href');
            });

            //go to url once icon within link is clicked
            $navMainWrapper.find('.nav-main > li > a > i').click(function(e){
                e.preventDefault();
                e.stopPropagation();
            });

            //dropdowns within menu
            var dropdowns = function(){

                //loop through each dropdown
                $navDropdown.each(function(){
                    var $dropdown = $(this),
                        $li = $dropdown.parent('li');

                    //dont go to link when it is clicked
                    $dropdown.find('.nav-main-dropdown-item > a > h5, .nav-main-dropdown-item > ul > li > a, nav-main-submenu > li > a').click(function(e){
                        e.stopPropagation();
                        window.location.href = $(this).attr('href');
                    });

                    $li.children('a').children('i').click(function(e){
                        e.preventDefault();

                        if($dropdown.is(':visible')){
                            $dropdown.addClass('hidden');
                            $(this).parents('.nav-main-submenu').removeClass('active');
                            $(this).parent().parent('li').removeClass('active');
                            $(this).removeClass("fa fa-angle-left");
                            $(this).toggleClass("fa fa-angle-right");
                        } else {
                            app.scroll.resize($navMainWrapper);
                            $dropdown.removeClass('hidden');
                            $(this).parents('.nav-main-submenu').addClass('active');
                            $(this).parent().parent('li').addClass('active');
                            $(this).removeClass("fa fa-angle-right");
                            $(this).toggleClass("fa fa-angle-left");
                        }
                    });

                    $li.children('i').click(function(e){
                        e.stopImmediatePropagation();

                        $(this).parent('level4').children('a').toggleClass('hidden');

                        if($(e.delegateTarget)[0] !== $(this)[0]) return;

                        if($dropdown.is(':visible')){
                            $dropdown.addClass('hidden');
                            $li.removeClass('active');
                            $(this).removeClass("fa fa-angle-left");
                            $(this).toggleClass("fa fa-angle-right");
                        } else {
                            app.scroll.resize($navMainWrapper);
                            $dropdown.removeClass('hidden');
                            $li.addClass('active');
                            $(this).removeClass("fa fa-angle-right");
                            $(this).toggleClass("fa fa-angle-left");
                        }
                    });

                });
            };

            dropdowns();
        };

        var dropdownSlider  = function(slider){
            if(!slider.hasClass("slick-initialized")){
                slider.each(function(){

                    //var $slider = $(this);

                    slider.handleSlider({
                        arrows:true,
                        lazyLoad: 'ondemand'
                    });
                });
            }
        };

        var dropdownSliderReinit = function(dropdownSliderReinit){
            // $('.nav-main-wrapper .slider-init').each(function(){
            //     var $slider = $(this);
            //     console.log($(this));
            //
            //     $slider.reinitSlider({
            //         arrows:true
            //     });
            // });
            //console.log(dropdownSliderReinit);

                // if(!dropdownSliderReinit.hasClass('level4')){
                    var initSliderMenu = function(dropdownSliderReinit) {

                         var $slider = dropdownSliderReinit.find('.slider-init');//.children('.slider-init');

                         if (!$slider.hasClass("slick-initialized")) {
                             $slider.handleSlider({
                                 arrows: true
                             });
                         } else {
                             $slider.reinitSlider();
                         }

                    };
                    initSliderMenu(dropdownSliderReinit);
                // };

        };

        if(app.width() < mobileBreakRes){
            dropdownToggle();
            fixedHeader();
        } else {
            dropdownHover();
            if (!$navWrapper.hasClass('disable-fix')) {
                fixedNavMain();
            }
            $('.fixed-nav-wrapper').scrollToFixed({
                marginTop: $('.header-top').outerHeight() + $('.nav-main-wrapper').outerHeight()
            });
            if(header_fixed){
                fixedHeader();
            }

        }

    };

    /*
     *
     *
     */
    var handleReadMore = function(){

        $('.read-more-text').each(function(){
            var showChar = $(this).attr("data-characters");  // How many characters are shown by default
            var ellipsestext = "...";
            var moretext = $(".read-more-text").attr("data-moreText");
            var content = $(this).text();
            // var formatcontent = $(this).html();
            var formatcontent = $(this).find("img").remove().end().html();

            if(content.length > showChar) {

                var c = content.substr(0, showChar);
                var h = content.substr(showChar, content.length - showChar);

                var html = '<span class="lesstext">'+c+'</span>' + '<span class="moreellipses">' + ellipsestext+ '&nbsp;</span><span class="morecontent"><span class="more-content" style="display: none;">' + formatcontent + '</span><a href="" class="morelink btn btn-sm btn-ghost read-more-btn">' + moretext + '</a></span>';

                $(this).html(html);
            }

        });

        $(".morelink").click(function(){
            $(".lesstext").toggleClass('hidden');
            if($(this).parents(".read-more-text").hasClass("less")){
                $(this).parents(".read-more-text").removeClass("less");
                $(this).html($(this).parents(".read-more-text").attr("data-lessText"));
            } else {
                $(this).parents(".read-more-text").addClass("less");
                $(this).html($(this).parents(".read-more-text").attr("data-moreText"));
            }
            $(this).parents(".read-more-text").find(".moreellipses").toggle();
            $(this).prev().toggle();
            return false;
        });

    };

    var handlefiltershowhide = function(){
        var button = $('.btn-showall-filters');

//            button.click(function(){
//                if($(this).parent().children().hasClass("hide-item")){
//                    $(this).parent().children(".hide-item").addClass("show-item");
//                    $(this).parent().children(".hide-item").removeClass("hide-item");
//                }else
//                {
//                    $(this).parent().children(".show-item").addClass("hide-item");
//                    $(this).parent().children(".show-item").removeClass("show-item");
//                }
//
//            });


        button.click(function(){
            $(this).parent().children(".hide-item").toggle("hide-item");
            $(this).children(".content").toggle("active");
        });
    };

    /*
     * Slide toggle
     * $button is clicked element that interacts with $object
     */

    var handleSlideToggle = function($button){
        $button.each(function(){

            var $thisButton = $(this);
            var $object = $(this).parent().find(".slidetoggle-object").first();

            if($object){
                $object.parent().addClass("has-dropdown");
            }

            $thisButton.click(function(){
                toggleElements();
            });

            var toggleElements = function(){
                if($thisButton.hasClass("closed")){
                    openElements();
                }
                else {
                    closeElements();
                }
            };

            var openElements = function(){
                $object.slideDown();

                $thisButton.removeClass("closed");
                $object.removeClass("closed");
            };

            var closeElements = function(){
                $object.slideUp();

                $thisButton.addClass("closed");
                $object.addClass("closed");
            };
        });
    };

    var handleAutocomplete = function(){
        var $wrapper = $('.autocomplete-wrapper'),
            $input = $('.autocomplete-input'),
            $buttons = $('.autocomplete-button, .autocomplete-close'),
            $results = $('.autocomplete-results'),
            $header = $('.header'),
            $logoHidden = $('.search-logo'),
            $hideElements = $('.hidden-fullscreen'),
            scrollWidth = $results.data('scroll-width'),
            scrollPadding = $results.data('scroll-padding'),
            $Searchshowmenu = $('.search-show-menu .nav-main-wrapper.hidden-fullscreen');


        $buttons.click(function(){

            handleAutocompleteFun();
        });

        if($('.main-4level').hasClass('main-4level-with-search-input')){
            $('html').click(function(e) {
                if(app.width() >= mobileBreakRes) {
                    var clickCheck = true;
                    if ($(e.target).hasClass('autocomplete-wrapper') || $(e.target).hasClass('autocomplete-button') || $(e.target).hasClass('autocomplete-input')) {
                        var clickCheck = false;
                    }
                    if (clickCheck == true) {
                        $('.autocomplete-wrapper').addClass('hidden');
                        $('#search-text').val('');
                    }
                }
            });
        }

        var handleAutocompleteFun = function(){

            $('.autocomplete-button-wrapper').toggleClass('hidden');
            $wrapper.toggleClass('hidden');
            $logoHidden.toggleClass('hidden');

            if($('.main-4level').hasClass('main-4level-with-search-input') && app.width() > app.mobileBreakpoint) {
                $('#search-form').appendTo('.main-4level-with-search-input .nav > .container');
                $input.focus();
            } else {
                $('body').scrollTop();
                $('body').toggleClass('srch');

                $('.cart-wrapper').toggleClass('hidden');
                $hideElements.toggleClass('hidden');
                if($Searchshowmenu.length > 0){

                    $Searchshowmenu.removeClass('hidden');
                    $('.autocomplete-button').toggleClass('hidden');

                    $('.autocomplete-close').click(function(){
                        $('.autocomplete-button').removeClass('hidden');
                        }

                    )

                }

                $input.focus();

                var headerHeight = $header.outerHeight(true);
                $wrapper.height(app.height() - headerHeight - 1);
                $results.height(app.height() - headerHeight - 61);

                $('.header').next().toggleClass('scroll-to-fixed-css');
                $('.scroll-to-fixed-css').css("max-height", $(".header").height() + 1);

                if (app.width() > mobileBreakRes) {
                    app.scroll.set($results, {
                        curcursorcolor: "rgba(255, 255, 255, 0.4)",
                        railpadding: {right: scrollPadding},
                        zindex: 2500,
                        cursorwidth: scrollWidth
                    });

                    app.scroll.resize($results);
                } else {
                    $results.css('overflow', 'scroll');
                }
            };
        };

        $buttons.focusin(function(){
            $(this).css("background-color", "#FFFFCC");
        });
    };

    var handleProfile = function(){

        var removeWishlistItem = function(){

            $('#tab_profile_wish_list .product-item .remove-item').click(function(e){
                e.preventDefault();
                $(this).parents('.product-item').parent().remove();
            });
        };

        var removePricechangeItem = function(){

            $('#tab_profile_price_change .product-item .remove-item').click(function(e){
                e.preventDefault();
                $(this).parents('.product-item').parent().remove();
            });
        };

        $('.show-vertical-menu').click(function(){
            $(this).next(".nav").slideToggle();
        });

        removeWishlistItem();
        removePricechangeItem();
    };

   /* var handleModalCenter = function(){

        var centerModal = function() {
            $('.modal').not($(this)).modal('hide');

            $(this).css('display', 'block');
            var $dialog = $(this).find(".modal-dialog");
            var offset = ($(window).height() - $dialog.height()) / 2;

            if(offset <= 0){
                return;
            }
            // Center modal vertically in window
            $dialog.css("margin-top", offset);
        };

        $('.modal').on('show.bs.modal', centerModal);
        $(window).on("resize", function () {
            $('.modal:visible').each(centerModal);
        });
    };*/

    var handleToggle = function(){
        var button      = $(".toggle-init");
        button.click(function(){
            $(this).parent(".toggle-wrapper").toggleClass("closed-toggle");
            $(this).parent(".toggle-wrapper").find(".toggle-elem").slideToggle();
        });

        if(app.width() < 768){
            $(".toggle-init").parent(".toggle-wrapper").toggleClass("closed-toggle");
            $(".toggle-init").parent(".toggle-wrapper").find(".toggle-elem").slideToggle();
        }
    };

    var handleTooltip = function($object){
        $object.tooltip();
    };

    var handleCountdown = function(){

        var countDownTimer = $(".countdown-timer");
        var deadLine       = $(".countdown-timer").data("until");

        var deadLineHours   = $(".countdown-timer").data("until-hours");
        var deadLineMinutes = $(".countdown-timer").data("until-minutes");
        var deadLineSeconds = $(".countdown-timer").data("until-seconds");

        var myDate         = new Date(deadLine);
        myDate.setHours(parseInt(deadLineHours));
        myDate.setMinutes(parseInt(deadLineMinutes));
        myDate.setSeconds(parseInt(deadLineSeconds));

        initRegionalOptionsCountdown($, getDefaultLang());

        countDownTimer.countdown({
            until: myDate,
            timeSeparator: ':',
            timezone: +2,
            padZeroes: true,
            format: 'HMS'
        });

    };

    /* Sidebar functionality for tablets */
    var handleSidebarInfo = function(){
        $(".sidebar-info .icon-item").click(function(){
            if($(this).hasClass("clicked")){
                $(".sidebar-info .icon-item").removeClass("clicked");
            }
            else{
                $(".sidebar-info .icon-item").removeClass("clicked");
                $(this).addClass("clicked");
            }
        });
    };

    /* function to create same style for banner as seen on articles*/
    var articleBannerStyle = function(){
        var article         = $(".article-big-item"),
            banner          = $(".article-banner .banner-img"),
            catalogItem     = $(".product-item-col"),
            catalogBanner   = $(".catalog-banner");

        article.find('img').batchImageLoad({
            loadingCompleteCallback: function(){
                banner.height(article.height() - 21);
                banner.css("padding-top", (banner.height()-250)/2 );
            }
        });

        catalogItem.find('img').batchImageLoad({
            loadingCompleteCallback: function(){
                catalogBanner.height(catalogItem.height() - 21);
                catalogBanner.css("padding-top", (catalogBanner.height()-250)/2 );
            }
        });

    };

    var handleFavoriteProduct = function($elements){

        var addFavoriteProductSession = function($favIcon){

            $.ajax({
                type: "POST",
                url: nb_active_page_url,
                data: {
                    nbAjax: 1,
                    nbTask: 'product_favorites',
                    flag: "yes",
                    ajax: "yes",
                    task: "add_session_favorites_product",
                    productId: $favIcon.parents('.product-item').length
                        ? $favIcon.parents('.product-item').data('productid')
                        : $favIcon.data('productid'),
                    typeObject: $favIcon.data('favoritetypeobject') === 'undefined'
                        ? 'product'
                        : $favIcon.data('favoritetypeobject')
                },
                contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                dataType: 'json',
                success: function(ret) {
                    if (ret.flag){

                    }else{
                        toastr.error(ret.info);
                    }
                }
            });
        };

        var favoriteProduct = function($favIcon){

            if(!app.logged_in){

                addFavoriteProductSession($favIcon);

                getLoginModal().modal('show');

            } else {
                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: {
                        nbAjax: 1,
                        nbTask: 'product_favorites',
                        flag: "yes",
                        ajax: "yes",
                        task: "add_favorites_product",
                        productId: $favIcon.parents('.product-item').length
                            ? $favIcon.parents('.product-item').data('productid')
                            : $favIcon.data('productid'),
                        typeObject: $favIcon.data('favoritetypeobject') === 'undefined'
                            ? 'product'
                            : $favIcon.data('favoritetypeobject')
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
                    success: function(ret) {
                        if (ret.flag) {

                            $favIcon.data('favoriteid', ret.id);
                            $favIcon.attr('data-content', $favIcon.data('favorite-text-delete'));
                            $favIcon.attr('data-original-title', $favIcon.data('favorite-text-delete'));
                            var delFavText = '<span class="icon icon-heart-f"></span><span class="text">'+$favIcon.data('favorite-text-delete')+'</span>';
                            if ($favIcon.parents('.products-detail-wrapper').length) {
                                $favIcon.html(delFavText);
                            }

                            if($favIcon.parents('.product-item').length){
                                $favIcon.parents('.product-item').find('.favorite').addClass('active');

                                var buttonNoNotifyMe = $favIcon.parents('.product-item').find('.notifyme');
                                if(typeof(buttonNoNotifyMe.data('button-no-notify-me')) != 'undefined' && buttonNoNotifyMe.data('button-no-notify-me') != null){
                                    buttonNoNotifyMe.text(buttonNoNotifyMe.data('button-no-notify-me'));
                                    buttonNoNotifyMe.data('favoriteid', ret.id)
                                }

                                buttonNoNotifyMe.addClass('active');

                            }else{
                                $favIcon.addClass('active');
                            }

                            toastr.success(ret.info);
                            refreshFavoritesList();
                            var favoriteTotal = (parseInt($('.favorite-header-total').html()) + 1);
                            $('.favorite-header-total').html(favoriteTotal);
                        } else{
                            toastr.error(ret.info);
                        }
                        $favIcon.removeClass('pulse');
                    }
                });
            }
        };

        var unfavoriteProduct = function($favIcon){
            if(!app.logged_in){
                getLoginModal().modal('show');
            } else {
                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: {
                        nbAjax: 1,
                        nbTask: 'product_favorites',
                        flag: "yes",
                        ajax: "yes",
                        task: "delete_favorites_product",
                        id: $favIcon.data('favoriteid'),
                        typeObject: $favIcon.data('favoritetypeobject') === 'undefined'
                            ? 'product'
                            : $favIcon.data('favoritetypeobject')
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
                    success: function(ret) {
                        if (ret.flag) {

                            $favIcon.attr('data-content', $favIcon.data('favorite-text-add'));
                            $favIcon.attr('data-original-title', $favIcon.data('favorite-text-add'));
                            var addFavText = '<span class="icon icon-heart"></span><span class="text">'+$favIcon.data('favorite-text-add')+'</span>';
                            if ($favIcon.parents('.products-detail-wrapper').length) {
                                $favIcon.html(addFavText);
                            }

                            if($favIcon.parents('.product-item').length){

                                $favIcon.parents('.product-item').find('.favorite').removeClass('active')

                                var buttonNotifyMe = $favIcon.parents('.product-item').find('.notifyme');
                                if(typeof(buttonNotifyMe.data('button-notify-me')) != 'undefined' && buttonNotifyMe.data('button-notify-me') != null){
                                    buttonNotifyMe.text(buttonNotifyMe.data('button-notify-me'));
                                }
                                buttonNotifyMe.removeClass('active');

                            }else{
                                $favIcon.removeClass('active');
                            }


                            toastr.info(ret.info);
                            refreshFavoritesList();
                            var favoriteTotal = (parseInt($('.favorite-header-total').html()) - 1);
                            $('.favorite-header-total').html(favoriteTotal);
                        } else{
                            toastr.error(ret.info);
                        }
                        $favIcon.removeClass('pulse');
                    }
                });
            }
        };

        $elements.click(function(e){

            var $favIcon = $(this);

            e.preventDefault();
            e.stopPropagation();

            $favIcon.addClass('pulse');

            if($favIcon.hasClass('active')){
                unfavoriteProduct($favIcon);
            } else {
                favoriteProduct($favIcon);
            }
        });
    };

    var handleLowerPriceProduct = function($elements){

        var lowerPrice = function($product){
            if(!app.logged_in){
                getLoginModal().modal('show');
            } else if($('#product_has_comb').val() > 0 && $('#product_comb_id').val() <= 0){
                toastr.error($('#product_no_comb_msg').val());
            } else {
                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: {
                        nbAjax: 1,
                        nbTask: 'product_price_changes',
                        flag: "yes",
                        ajax: "yes",
                        task: "add_product_price_changes",
                        productId: $('#product_id').val(),
                        combinationId: $('#product_comb_id').val(),
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
                    success: function(ret) {
                        if (ret.flag) {
                            toastr.success(ret.info);
                            refreshPriceChangesList();
                        } else{
                            toastr.info(ret.info);
                        }
                    }
                });
            }
        };

        $elements.click(function(e){
            e.preventDefault();

            if(!$(this).hasClass('active')){
                lowerPrice($(this));
            }
        });
    };

    var handleBuyProductOnListing = function(){

        var $productItem = $('.product-item');

        if(!$productItem.length) return;

        var addToCartPtoduct = function(){

            var $btn = $productItem.find('.buyButtonOnLists');

            if(!$btn.length) return;

            var values = {};

            $btn.click(function(){
                $btn = $(this);
                validate($btn);
            });

            $btn.bind('shop-button.reset', function(){
                resetButton();
            });

            var setValues = function($elements){
                values = {
                    productId: $elements.parents('.product-item').data('productid'),
                    productHasComb: $elements.data('product-has-comb'),
                    productCombId: $elements.data('product-comb-id'),
                    size: $elements.data('product-size-name'),
                    quantity: $elements.data('product-quantity'),
                    errorMsg: $elements.data('product-no-comb-msg')
                };
            };

            var validate = function($elements){
                setValues($elements);
                startBouncingIcon();

                if(values.productHasComb > 0 && !values.size){
                    stopBouncingIcon();
                    $btn.html($btn.data('btn-text-select-size'))
                        .removeClass('btn-success')
                        .addClass('btn-danger');
                } else {
                    addAJAX();
                }
            };

            var addAJAX = function(){
                $.ajax({
                    type: "POST",
                    url: getCartPageUrl(),
                    data: {
                        ajax: 'yes',
                        task: 'cartInsert',
                        id: values.productId,
                        combId: values.productCombId,
                        amount: values.quantity,
                        size: values.size
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
//                    async: false,
                    success: function(ret) {
                        if (ret.flag){
                            stopBouncingIcon($btn.data('btn-text-addedtocart'));
                            addSuccess(values.quantity);
                            nbshopJS.CustomEventTrigger('cartButtonClick');
                        }else{
                            stopBouncingIcon($btn.data('btn-text-addtocart'));
                            addFailed(ret.info);
                        }
                    }
                });
            };

            var startBouncingIcon = function(){
                $btn.addClass('icon-bounce');
                $btn.html('...');
            };

            var stopBouncingIcon = function(msg){
                $btn.removeClass('icon-bounce');
                $btn.html(msg).removeClass('btn-danger').addClass('btn-success');
            };

            var resetButton = function(){
                stopBouncingIcon();
                $btn.html($btn.data('btn-text-addtocart'));
            };

            var addSuccess = function(qnt){
                $btn.addClass('btn-activated');
                $btn.addClass('cart-increased');
                $btn.attr('data-content', '+'+qnt);

                setTimeout(function(){
                    $btn.removeClass('btn-activated');
                }, 1000);

                setTimeout(function(){
                    $btn.html($btn.data('btn-text-addtocart'));
                    $btn.attr('data-content', '');
                    $btn.removeClass('cart-increased');
                    $btn.removeClass('btn-success.autocomplete-button');
                }, 4000);

                refreshMinCartToggle();
            };

            var addFailed = function(msg){
                $btn.html($btn.data('btn-text-no-state'))
                    .removeClass('btn-success')
                    .addClass('btn-danger');
                toastr.info(msg);
            };

            //setValues();
        };

        var addAsWantedOnProductListing = function(productId, attrCombId){

            if(!app.logged_in){
                getLoginModal().modal('show');
                return;
            }

            $.ajax({
                type: "POST",
                url: nb_active_page_url,
                data: {
                    nbAjax: 1,
                    nbTask: 'product_available_sizes',
                    flag: 'yes',
                    ajax: 'yes',
                    task: 'add_product_available_sizes',
                    productId: productId,
                    combinationId: attrCombId
                },
                contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                dataType: 'json',
                success: function(ret) {
                    if(ret.flag) {
                        toastr.success(ret.info);
                    }else{
                        toastr.info(ret.info);
                    }
                }
            });
        };

        var selectSize = function($elements){

            if(!$elements.length) return;

            $elements.click(function(){
                $atribute = $(this);

                $atribute.parents('.product-sizes').find('.item').removeClass('active');
                $atribute.addClass('active');

                var $btnBuy = $(this).parents('.product-item').find('.buyButtonOnLists');

                if($atribute.hasClass('disabled')){
                    addAsWantedOnProductListing($atribute.parents('.product-item').data('productid'), $atribute.data('productsize-combid'));
                    return;
                };

                $btnBuy.data('product-size-name', $atribute.data('productsize-name'));
                $btnBuy.data('product-comb-id', $atribute.data('productsize-combid'));

                if($btnBuy.data('product-comb-id') > 0){
                    $btnBuy.removeClass('btn-danger');
                    $btnBuy.html($btnBuy.data('btn-text-addtocart'));
                };

            });
        };

        selectSize($('.product-item .product-sizes .item'));
        addToCartPtoduct();
    };

    var handleProductDetails = function(){

        var $productDetails = $('.product-details'),
            id = $('#product_id').val(),
            $combId = $('#product_comb_id'),
            hasComb = $('#product_has_comb').val(),
            $size = $('#product_size'),
            $quantity = $('#product_quantity'),
            errorMsg = $('#product_no_comb_msg').val(),
            $productPriceQueryCombinationId = $('#product_price_query_combination_id'),
            $productPriceQueryCombinationName = $('#product_price_query_combinationName'),
            $productCharacteristicValue = $('#product_characteristic_value'),
            hasCharacteristic = $('#product_has_characteristic').val()
        ;



        if(!$productDetails.length) return;

        var addToCart = function(){

            var $btn = $productDetails.find('.shop-button-qnt');

            var values = {};

            $btn.click(function(){
                $btn = $(this);
                validate();
            });



            $btn.bind('shop-button.reset', function(){
                resetButton();
            });

            var setValues = function(){
                values = {
                    productId: id,
                    productCombId: $combId.val(),
                    productHasComb: hasComb,
                    size: $size.val(),
                    quantity: $quantity.val(),
                    productCharacteristicValue: $productCharacteristicValue.val(),
                    productHasCharacteristic: hasCharacteristic,
                    errorMsg: errorMsg
                };
            };

            var validate = function(){
                setValues();
                startBouncingIcon();

                if(values.productHasCharacteristic > 0 && values.productCharacteristicValue == ""){
                    stopBouncingIcon();
                    $(".product-attributes-wrapper").addClass("select-size-error");
                    $btn.html($btn.data('btn-text-select-characteristic'))
                        .removeClass('btn-success')
                        .addClass('btn-danger');
                } else if(values.productHasComb > 0 && !values.size){
                    stopBouncingIcon();
                    $(".product-attributes-wrapper").addClass("select-size-error");
                    $btn.html($btn.data('btn-text-select-size'))
                        .removeClass('btn-success')
                        .addClass('btn-danger');
                } else {
                    addAJAX();


                }
            };

            var addAJAX = function(){

                $.ajax({
                    type: "POST",
                    url: getCartPageUrl(),
                    data: {
                        ajax: 'yes',
                        task: 'cartInsert',
                        id: values.productId,
                        combId: values.productCombId,
                        amount: values.quantity,
                        size: values.size,
                        productCharacteristicValue: values.productCharacteristicValue,
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
//                    async: false,
                    success: function(ret) {
                        if (ret.flag){
                            stopBouncingIcon($btn.data('btn-text-addedtocart'));
                            addSuccess(values.quantity);
                            nbshopJS.CustomEventTrigger('cartButtonClick');
                        }else{
                            stopBouncingIcon($btn.data('btn-text-addtocart'));
                            addFailed(ret.info);
                        }
                    }
                });
            };

            var startBouncingIcon = function(){
                $btn.addClass('icon-bounce');
                $btn.html('...');
            };

            var stopBouncingIcon = function(msg){
                $btn.removeClass('icon-bounce');
                $btn.html(msg).removeClass('btn-danger').addClass('btn-success');
            };

            var resetButton = function(){
                stopBouncingIcon();
                $btn.html($btn.data('btn-text-addtocart'));
            };

            var addSuccess = function(qnt){
                $btn.addClass('btn-activated');
                $btn.addClass('cart-increased');
                $btn.attr('data-content', '+'+qnt);

                setTimeout(function(){
                    $btn.removeClass('btn-activated');
                }, 1000);

                setTimeout(function(){
                    $btn.html($btn.data('btn-text-addtocart'));
                    $btn.attr('data-content', '');
                    $btn.removeClass('cart-increased');
                }, 4000);

                refreshMinCartToggle();



            };

            var addFailed = function(msg){
                $btn.html($btn.data('btn-text-no-state'))
                    .removeClass('btn-success')
                    .addClass('btn-danger');
                toastr.info(msg);
            };

            setValues();
        };


        //stop video on modal close
        $("#product_video_modal").on('hidden.bs.modal', function (e) {
            $("#product_video_modal iframe").attr("src", $("#product_video_modal iframe").attr("src"));
        });

        var setProductPrice = function(price){
            $('.product-price .product-price-value').text(price);
        };

        var setProductPriceWithoutDiscount = function(hasDiscount, price, priceWithoutDiscount){

            var formatPriceWithoutDiscount = 0;
            var formatPrice = 0;

            if(typeof priceWithoutDiscount == "undefined" || typeof price == "undefined"){
                return false;
            }

            if(typeof priceWithoutDiscount == "number"){
                priceWithoutDiscount = priceWithoutDiscount.toString();
            }

            if(typeof price == "number"){
                price = price.toString();
            }

            if(priceWithoutDiscount.indexOf(".") !== -1){
                var formatPriceWithoutDiscount = priceWithoutDiscount.replace(".", "");
                formatPriceWithoutDiscount = formatPriceWithoutDiscount.replace(",", "");
                formatPriceWithoutDiscount = parseFloat(formatPriceWithoutDiscount);
            }else{
                formatPriceWithoutDiscount = parseFloat(priceWithoutDiscount);
            }

            if(price.indexOf(".") !== -1) {
                formatPrice = price.replace(".", "");
                formatPrice = formatPrice.replace(",", "");
                formatPrice = parseFloat(formatPrice);
            }else{
                formatPrice = parseFloat(price);
            }

            var priceWithoutDiscountShow = formatPriceWithoutDiscount - formatPrice;
            //console.log(priceWithoutDiscountShow);

            if(formatPriceWithoutDiscount > formatPrice && (priceWithoutDiscountShow) > 1){
                $('.product-prev-price.product-pricewithoutdiscount').removeClass('hide');
            }else{
                $('.product-prev-price.product-pricewithoutdiscount').addClass('hide');
            }

            $('.product-prev-price .product-price-without-discount-value').text(priceWithoutDiscount);

        };

        var setProductOldPrice = function(hasDiscount, showOldPrice, price, priceWithoutDiscount, oldPrice){

            var formatPriceWithoutDiscount = 0;
            var formatPrice = 0;

            if(typeof priceWithoutDiscount == "undefined" || typeof price == "undefined"){
                return false;
            }

            if(typeof priceWithoutDiscount == "number"){
                priceWithoutDiscount = priceWithoutDiscount.toString();
            }

            if(typeof price == "number"){
                price = price.toString();
            }

            if(priceWithoutDiscount.indexOf(".") !== -1){
                formatPriceWithoutDiscount = priceWithoutDiscount.replace(".", "");
                formatPriceWithoutDiscount = formatPriceWithoutDiscount.replace(",", "");
                formatPriceWithoutDiscount = parseFloat(formatPriceWithoutDiscount);
            }else{
                formatPriceWithoutDiscount = parseFloat(priceWithoutDiscount);
            }

            if(price.indexOf(".") !== -1) {
                formatPrice = price.replace(".", "");
                formatPrice = formatPrice.replace(",", "");
                formatPrice = parseFloat(formatPrice);
            }else{
                formatPrice = parseFloat(price);
            }

            if(hasDiscount == 1 && formatPriceWithoutDiscount > formatPrice){
                $('.product-prev-price.product-oldprice').addClass('product-prev-price-third');
            }else{
                $('.product-prev-price.product-oldprice').removeClass('product-prev-price-third');
            }

            if(showOldPrice == 1){
                $('.product-prev-price.product-oldprice').removeClass('hide');
            }else{
                $('.product-prev-price.product-oldprice').addClass('hide');
            }

            $('.product-prev-price.product-oldprice .product-oldprice-value').text(oldPrice);
        };

        var setDiscount = function(showDiscount, showCaptionPlusconnector, discount){

            if(showDiscount == 1){
                $('.product-details .product-discount').removeClass('hide');

                if(showCaptionPlusconnector == 1){
                    $('.product-details .product-discount .caption-plusconnector').removeClass('hide');
                }else{
                    $('.product-details .product-discount .caption-plusconnector').addClass('hide');
                }
            }else{
                $('.product-details .product-discount').addClass('hide');
            }

            $('.product-details .product-discount .product-discount-value-formatted').text(discount);
        };

        var seCombinationCode = function(showCombinationCode, combinationCode){

            var containerId = '#combination-code-container';
            var valueId     = '#combination-code-preview-value';

            if(showCombinationCode == 1){
                $(containerId).show();
                $(valueId).html(combinationCode);
            }
        };

        var setProductPriceSaved = function(priceSaved){

            var formatPriceSavedValue = 0;

            if(typeof priceSaved == "undefined"){
                return false;
            }

            if(typeof priceSaved == "number"){
                priceSaved = priceSaved.toString();
            }

            if(priceSaved.indexOf(".") !== -1) {
                formatPriceSavedValue = priceSaved.replace(".", "");
                formatPriceSavedValue = formatPriceSavedValue.replace(",", "");
                formatPriceSavedValue = parseFloat(formatPriceSavedValue);
            }else{
                formatPriceSavedValue = parseFloat(priceSaved);
            }

            if(formatPriceSavedValue > 0){
                $('.product-price-wrapper .product-price-saved').removeClass('hide');
            }else{
                $('.product-price-wrapper .product-price-saved').addClass('hide');
            }

            $('.product-price-wrapper .product-price-saved .product-price-saved-value').text(priceSaved);
        };
        
        function setPriceConvert(flagPriceConver, priceConvert, currencyConvert){

            if((typeof priceConvert == "undefined" || typeof currencyConvert == "undefined")){
                return false;
            }
            
            if(flagPriceConver == 1){
                var formatPriceConvertValue = priceConvert.replace(".", "");
                formatPriceConvertValue = formatPriceConvertValue.replace(",", ".");
                formatPriceConvertValue = parseFloat(formatPriceConvertValue);

                $('.product-convert-price .product-price-convert-value').text(priceConvert);
                $('.product-convert-price .product-currency-convert-value').text(currencyConvert);
            }
        }


        var productQuantity = function(){
            $productDetails.find('.product-quantity-arrows i').click(function(){
                var $arrow = $(this),
                    $productQuantity = $('.product-quantity-input'),
                    $productQuantityHelper = $('.product-quantity-helper-pre'),
                    productQuantityVal = parseInt($productQuantity.val());

                $productQuantity.removeClass('ease-slow active-down active-up');
                $productQuantityHelper.removeClass('active ease-slow');

                if($arrow.hasClass('quantity-up')){
                    var productQuantityNewVal = productQuantityVal+1;
                    $productQuantity.addClass('active-up');

                } else if($arrow.hasClass('quantity-down')){
                    if(productQuantityVal == 1) return;
                    var productQuantityNewVal = productQuantityVal-1;

                    $productQuantityHelper = $('.product-quantity-helper-post');
                    $productQuantity.addClass('active-down');
                }

                $productQuantity.addClass('ease-slow');
                $productQuantityHelper.html(productQuantityNewVal).addClass('active ease-slow');

                setTimeout(function(){
                    $productQuantityHelper.removeClass('active ease-slow');
                    $productQuantity.removeClass('active-up active-down ease-slow');
                    $productQuantity.val(productQuantityNewVal);
                }, 500);
            });
        };

        var productAttribute = function(){

            var setSelectedAttr = function(sizeName, price, combId, attrShowDiscount, attrShowCaptionPlusconnector, attrDiscount, priceWithoutDiscount, showOldPrice, oldPrice, priceSaved, showCombinationCode, combinationCode, flagPriceConver, priceConvert, currencyConvert){
                $size.val(sizeName);
                $combId.val(combId);
                setProductPrice(price);
                setProductPriceWithoutDiscount(attrShowDiscount, price, priceWithoutDiscount);
                setProductOldPrice(attrShowDiscount, showOldPrice, price, priceWithoutDiscount, oldPrice);
                setProductPriceSaved(priceSaved);
                setDiscount(attrShowDiscount, attrShowCaptionPlusconnector, attrDiscount);
                seCombinationCode(showCombinationCode, combinationCode);
                $productPriceQueryCombinationId.val(combId);
                $productPriceQueryCombinationName.val(sizeName);
                setPriceConvert(flagPriceConver, priceConvert, currencyConvert);
            };

            var addAsWanted = function(attrCombId){

                if(!app.logged_in){
                    getLoginModal().modal('show');
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: {
                        nbAjax: 1,
                        nbTask: 'product_available_sizes',
                        flag: 'yes',
                        ajax: 'yes',
                        task: 'add_product_available_sizes',
                        productId: $('#product_id').val(),
                        combinationId: attrCombId
                    },
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
                    success: function(ret) {
                        if(ret.flag) {
                            toastr.success(ret.info);
                        }else{
                            toastr.info(ret.info);
                        }
                    }
                });

            };

            $('#product_characteristic_value').change(function(){
                $productDetails.find('.shop-button-qnt').trigger('shop-button.reset');
            });

            var $productAttrs = $productDetails.find('.product-attributes');

            $productAttrs.find('li').click(function(){

                var $attrClicked = $(this),
                    attrName = $attrClicked.data('productsize-name'),
                    attrPrice = $attrClicked.data('productsize-price'),
                    attrShowDiscount = $attrClicked.data('productsize-show-dicount'),
                    attrShowCaptionPlusconnector = $attrClicked.data('productsize-show-caption-plusconnector'),
                    attrDiscount = $attrClicked.data('productsize-dicount'),
                    attrPriceWithoutDiscount = $attrClicked.data('productsize-price-without-discount'),
                    attrShowOldPrice = $attrClicked.data('productsize-show-oldprice'),
                    attrOldPrice = $attrClicked.data('productsize-oldprice'),
                    priceSaved = $attrClicked.data('productsize-pricesaved'),
                    attrCombId = $attrClicked.data('productsize-combid');
                    showCombinationCode = $attrClicked.data('show-combination-code');
                    combinationCode = $attrClicked.data('combination-code');
                    attrproductsizeFlagPriceConvert = $attrClicked.data('productsize-flag-price-convert');
                    attrproductsizePriceConvert = $attrClicked.data('productsize-price-convert');
                    attrproductsizeCurrencyConvert = $attrClicked.data('productsize-currency-convert');

                if($attrClicked.hasClass('disabled')){
                    addAsWanted(attrCombId);
                    return;
                }

                if(!$productAttrs.hasClass('multiple-choice')){
                    $productAttrs.find('li').removeClass('active');
                }

                if(!$attrClicked.hasClass('disabled')){
                    $attrClicked.hasClass('multiple-choice') ? $attrClicked.removeClass('active') : '';

                    $attrClicked.hasClass('active')
                        ? $attrClicked.removeClass('active')
                        : $attrClicked.addClass('active');
                }

                if($attrClicked.hasClass('active')){
                    $productDetails.find('.shop-button-qnt').trigger('shop-button.reset');
                }

                setSelectedAttr(attrName, attrPrice, attrCombId, attrShowDiscount, attrShowCaptionPlusconnector, attrDiscount, attrPriceWithoutDiscount, attrShowOldPrice, attrOldPrice, priceSaved, showCombinationCode, combinationCode, attrproductsizeFlagPriceConvert, attrproductsizePriceConvert, attrproductsizeCurrencyConvert);
            });

            //only one active size is avaliable, check it automatically
            if($productAttrs.find('li').length === 1 && $productAttrs.find('li:not(.disabled)').length === 1){
                $productAttrs.find(':not(.disabled)').click();
            }

        };

        var productImages = function(){

            var $images = $('.product-main');
            var indexID;

            function mainSlider(){
                var mainImgNoSlider = '';
                if($(window).width() < 768){
                    mainImgNoSlider = ", .product-images-gallery .slider-init";
                }
                $navigation     =  $('.slider.product-main, .product-images-gallery').find('.slider-navigation-absolute');
                $slider =  $('.product-main.slider .slider-init'+mainImgNoSlider);
                $slider.nbHandleSlider({
                    speed: 1,
                    appendArrows: $navigation,
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                    arrows: true,
                    asNavFor: '.product-images-thumbs .slider-init,.product-images-thumbs-vertical .slider-init',
                    responsive: [
                        {breakpoint: 768,  settings: { dots: true}}
                    ]
                });

                $(".slider.product-main .item").click(function(){
                    indexID = $('.slider.product-main .slick-current img').data("index");
                });

                $(".product-images-gallery .item .img-wrapper").click(function(){
                    indexID = $(this).data("index");
                    $('.fullscreen > .slider-init').slick('slickGoTo', indexID);
                });

            };

            // Fullscreen slider
            var fullscreenSlider = function(){

                var $fullscreenWrapper = $('.fullscreen'),
                    $fullscreenSlider = $('.fullscreen > .slider-init'),
                    $zoomOpenBtn = $('.product-images-zoom-open, .slider.product-main .item:not(.video), .product-images-gallery .item:not(.video) .img-wrapper'), //.slider.product-main .item
                    $zoomCloseBtn = $('.fullscreen .close'),
                    $thumbsFullscreenSlider = $('.product-images-thumbs-vertical-fullscreen .slider-init');
                var imgWrapper = $('.fullscreen > .slider-init .img-wrapper');

                if(!$fullscreenWrapper.length) return;

                //Fullscreen slider
                var $navigation     =  $('.fullscreen > .slider-navigation-absolute');

                $fullscreenSlider.handleSlider({
                    arrows: false,
                    fade:true,
                    appendArrows: $navigation,
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>'
                });

                $(".fullscreen").click(function(){
                    indexID = $('.slider-init.fscrren .slick-current img').data("index");
                });

                imgWrapper.click(function(){
                    closeZoom();
                }).children().click(function(e) {
                    return false;
                });

                var thumbsItems = $('.product-images').data('slider-items');
                if(typeof(thumbsItems) == 'undefined' || thumbsItems == null || thumbsItems == ""){
                    thumbsItems = 4;
                }


                //Fullscreen slider thumbs
                $thumbsFullscreenSlider.handleSlider({
                    speed: 200,
                    slidesToShow: thumbsItems,
                    vertical: true,
                    arrows: true,
                    focusOnSelect: true,
                    appendArrows: $('.product-images-thumbs-vertical-fullscreen .slider-navigation'),
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                    asNavFor: '.slider-init.fscrren, .product-images-thumbs .slider-init'
                });


                var openZoom = function(){
                    if(app.width() <= app.mobileBreakpoint) return;

                    //goto(mainSliderInstance.getCurrentIndex());

                    $fullscreenWrapper.addClass('loaded').css('height', (app.height()-$('.header').outerHeight(true)-30)+"px");
                    $fullscreenWrapper.addClass('loaded').css('height', (app.height()-70)+"px");
                    $fullscreenWrapper.find("img").addClass('loaded').css('max-height', (app.height()-$('.header').outerHeight(true)-30)+"px");
                    $fullscreenWrapper.find(".slider-navigation").removeClass('hidden');
                    $('.header').addClass("hidden");

                    bindEscapeButton();

                    setTimeout(function(){
                        $('.hideon-fullscreen').addClass('hidden');
                    }, 500);

                    $('.header').next().addClass('scroll-to-fixed-pos');
                    $('.fixed-header-cart').hide();

                    setTimeout(function(){
                        $fullscreenSlider.reinitSlider();
                        $('.fullscreen > .slider-init').slick('slickGoTo', indexID);
                    }, 100);
                    setTimeout(function(){
                        $thumbsFullscreenSlider.reinitSlider();
                    }, 500);

                };

                var bindEscapeButton = function(){
                    $(document).keyup(function(e) {
                        if (e.keyCode == 27) closeZoom();
                    });
                };

                var unbindEscapeButton = function(){
                    $(document).unbind('keyup');
                };

                var closeZoom = function(){
                    $('.hideon-fullscreen').removeClass('hidden');
                    $fullscreenWrapper.removeClass('loaded');
                    $fullscreenWrapper.find(".slider-navigation").addClass('hidden');
                    $('.header').removeClass("hidden");

                    setTimeout(function(){
                        $('.hideon-fullscreen').removeClass('hidden');
                    }, 500);

                    unbindEscapeButton();

                    $('.header').next().removeClass('scroll-to-fixed-pos');

                    $('.fixed-header-cart').show();


                    $('.product-main.slider .slider-init').slick('slickGoTo', indexID);

                };

//                var goto = function(index){
//                    $fullscreenSlider.trigger('to.owl.carousel', [index, 1]);
//                };

//                var getCurrentIndex = function(){
//                   return $fullscreenSlider.find('.owl-item.active img').data('index');
//                };

                $zoomOpenBtn.click(function(e){
                    e.preventDefault();
                    openZoom();

                });

                $zoomCloseBtn.click(function(e){
                    e.preventDefault();
                    closeZoom();
                    var $slider =$('.handlines-sldier .slider-init');
                    $slider.slick('unslick');
                    $slider.nbHandleSlider({
                        autoplay: true,
                        speed: 1000
                    });
                });


            };

            var sliderThumbs = function(){

                var vertical = $('.product-images').data('vertical');
                var items = $('.product-images').data('slider-items');
                $slider = $('.product-images-thumbs .slider-init');

                if(typeof(vertical) == 'undefined' || vertical == null || vertical == ""){
                    vertical = false;
                }else{
                    vertical = true;
                }

                if(typeof(items) == 'undefined' || items == null || items == ""){
                    items = 3;
                }


                $slider.nbHandleSlider({
                    speed: 200,
                    slidesToShow: items,
                    vertical: vertical,
                    arrows: true,
                    focusOnSelect: true,
                    appendArrows: $('.product-images-thumbs .slider-navigation'),
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                    asNavFor: '.product-main .slider-init, .product-images-thumbs-vertical-fullscreen .slider-init'
                });


            };

            var sliderThumbsVertical = function(){

                var vertical = $('.product-images').data('vertical');
                //var items = $('.product-images').data('items');

                var items = $('.product-images').data('slider-items');
                var $slider = $('.product-images-thumbs-vertical .slider-init');

                if(typeof(vertical) == 'undefined' || vertical == null || vertical == ""){
                    vertical = false;
                }else{
                    vertical = true;
                }

                if(typeof(items) == 'undefined' || items == null || items == ""){
                    items = 3;
                }


                $slider.nbHandleSlider({
                    speed: 200,
                    slidesToShow: items,
                    vertical: vertical,
                    arrows: true,
                    focusOnSelect: true,
                    appendArrows: $('.product-images-thumbs-vertical .slider-navigation'),
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                    asNavFor: '.product-main .slider-init'
                });


            };

            //Thumbs
            var minigallery = function(mainSliderInstance){

                var $miniGalleryThumbs = $images.find('.minigallery-thumbs'),
                    $thumbsOpenBtn = $('.minigallery-thumbs-open'),
                    $thumbsCloseBtn = $images.find('.minigallery-thumbs-close'),
                    $imageThumb = $images.find('.minigallery-thumb-item');

                if(!$miniGalleryThumbs.length) return;

                var openThumbs = function(){
                    $miniGalleryThumbs.addClass('active');
                    $thumbsCloseBtn.removeClass('hidden');
                    $thumbsOpenBtn.addClass('hidden');

                    app.scroll.set($miniGalleryThumbs, {
                        curcursorcolor: "rgba(255, 255, 255, 0.4)",
                        railpadding: {right: 5},
                        zindex: 1500
                    });

                    app.scroll.show($miniGalleryThumbs);
                };

                var closeThumbs = function(){
                    $miniGalleryThumbs.removeClass('active');
                    $thumbsOpenBtn.removeClass('hidden');
                    $thumbsCloseBtn.addClass('hidden');
                    app.scroll.hide($miniGalleryThumbs);
                };

                $('html').click(function(e) {
                    if( $miniGalleryThumbs.hasClass('active') && !$(e.target).closest($imageThumb).length &&
                        !$(e.target).closest($imageThumb).length && !$(e.target).closest($thumbsOpenBtn).length){
                        closeThumbs();
                    }
                });

                $thumbsOpenBtn.click(function(e){
                    e.preventDefault();
                    openThumbs();
                });

                $thumbsCloseBtn.click(function(e){
                    e.preventDefault();
                    closeThumbs();
                });

                $imageThumb.click(function(e){
                    //mainSliderInstance.goto($(this).data('index'));
                    $miniGalleryThumbs.removeClass('active');
                    closeThumbs();
                });
            };

            var slider = new mainSlider;
            new fullscreenSlider(slider);
            // new minigallery(slider);
            new sliderThumbs(slider);
            new sliderThumbsVertical(slider);
        };

        var youtubeAspectRatio = function(){
            var $video = $productDetails.find("iframe[src^='http://www.youtube.com']");

            // Figure out and save aspect ratio for video
            $video
                .data('aspectRatio', $video.height() / $video.width())

                // and remove the hard coded width/height
                .removeAttr('height')
                .removeAttr('width');

            // When the window is resized
            // (You'll probably want to debounce this)
            $(window).resize(function() {

                // The element that is fluid width
                var $fluidEl = $video.parents('.tab-content').find('.tab-pane.active'); // $productDetails.find('.tab-pane:visible');

                var newWidth = $fluidEl.width();

                // Resize video according to its own aspect ratio
                $video
                    .width(newWidth)
                    .height(newWidth * $video.data('aspectRatio'));

                // Kick off one resize to fix all videos on page load
            }).resize();

            $('a[href="#tab_product_video"]').on('shown.bs.tab', function (e) {
                $(window).resize();
            });
        };

        var horizontalDivider = function(){
            $productDetails.imagesLoaded(function(){
                $('.product-horizontal-divider').css('margin-top', $('.product-intro').height() + 20).addClass('loaded');
            });
        };

        var productBrandClicked = function(){
            $productDetails.find('.product-brand a').click(function(e){
                e.preventDefault();
                e.stopPropagation();
                window.open($(this).attr('href'), $(this).attr('target'));
            });
        };

        var addProductIsAvailable = function(){

            var $productIsAvailable = $productDetails.find('#actionInfoProductIsAvailable');
            $productIsAvailable.click(function() {
                $productDetails.find('.product-attributes .infoSizeIsAvailable').trigger( "click" );
            });
        };


        addToCart();
        productQuantity();
        productAttribute();
        productImages();
        youtubeAspectRatio();
        //horizontalDivider();
        productBrandClicked();
        addProductIsAvailable();


    };

    /*
     * PRODUCT LISTING
     * Description: Everything that has to do with listing of a products:
     *              types of a listing, filters, toggling filters etc.
     * Plugins used: niceScroll, ionRangeSlider
     */
    var handleProductListing = function($productListing){

        //define objects
        var $filtersWrapper = $productListing.find('.product-listing-filters'),
            $filterGroup = $productListing.find('.filter-group'),
            $filterGroupItems = $productListing.find('.filter-group .items-wrapper');

        //changing the type of listing
        var listTypes = function(){
            var $listTypes = $('.list-types-wrapper .item');

            //type of a listing is changed
            $listTypes.click(function(){
                var $typeClicked = $(this);

                //set all types to inactive
                $listTypes.removeClass('active');

                //set clicked type to active
                $typeClicked.addClass('active');

                //set proper icons
                //those with "-f" at the end of its name are with full color
/*                $listTypes.each(function(){
                    var $type = $(this),
                        listTypeName = $type.attr('rel');

                    if($type.hasClass('active')){
                        $type.removeClass('icon-'+listTypeName).addClass('icon-'+listTypeName+'-f');
                    } else {
                        $type.addClass('icon-'+listTypeName).removeClass('icon-'+listTypeName+'-f');
                    }
                });*/

            });
        };



        //MOBILE DEVICES ONLY!!!
        var mobileDeviceFilters = function(){
            var $labelFilters = $('.action-filters,.label-filters'),
                $closeBtn = $filtersWrapper.find('.filter-search, .filters-close'),
                $resetTagBtn = $filtersWrapper.find('.reset-tag-wrapper');

            if($(window).width() < 768) {
                $resetTagBtn.click( function () {
                    $filtersWrapper.removeClass('loaded');
                })
            }

            //label filter is clicked
            $labelFilters.on('click', function(){
                $filtersWrapper.addClass('loaded');

               /* app.scroll.set($filtersWrapper, {
                    cursorcolor: "#3973b5",
                    zindex: 199
                });*/

                //go to top of a window
                $filtersWrapper.animate({scrollTop: 0}, 0);

                //resize niceScroll, some weird bug OMG
                app.scroll.resize($filterGroupItems);
            });

            //close filters
            $closeBtn.click(function(){
                //yeah, close it

                $filtersWrapper.removeClass('loaded');

                //hide niceScroll, some weird bug OMG
                app.scroll.hide($filtersWrapper);
                app.scroll.hide($filterGroupItems);
            });
        };

        var priceRange = function(){
            //init price range with ionRangeSlider plugin
            /*$("#prices").ionRangeSlider({
                type: 'double',
                postfix: "",
                hideMinMax: true,
                maxPostfix: "+",
                prettify: false
            });*/
        };

        //every group of filter items must have max-height setted
        //if real height is bigger, scroll will be visible using a niceScroll plugin
        var setScrolls = function(){
            app.scroll.set($filterGroupItems, {
                cursorcolor: $filtersWrapper.data('scroll-color'),
                background: $filtersWrapper.data('background') ? $filtersWrapper.data('background') : "#f0f0f0",
                cursorwidth: $filtersWrapper.data('cursor-width') ? $filtersWrapper.data('cursor-width') : 7,
                zindex: 1
            });

            //resize niceScroll on scroll event, some weird bug OMG
            $(window).scroll(function() {
                app.scroll.resize($filterGroupItems);
            });
        };

        var toggleFilterGroup = function(){

            $filterGroup.each(function(){

                //set objects for clicked filter group
                var $itemsWrapper = $(this).find('.items-wrapper'),
                    $headline = $(this).find('.headline-wrapper'),
                    $openIcon = $headline.find('.icon.icon-open'),
                    $closeIcon = $headline.find('.icon.icon-close');

                if($(window).width() < 768) {
                    $openIcon.removeClass('active');
                    $closeIcon.addClass('active');
                    $itemsWrapper.addClass('hidden');
                };

                //show or hide items, and set correct icon
                $headline.click(function() {

                    if($(window).width() < 768) {
                        $openIcon.toggleClass('active');
                        $closeIcon.toggleClass('active');
                        $itemsWrapper.toggleClass('hidden');
                    } else {
                        if($itemsWrapper.is(':visible')){

                            $openIcon.removeClass('active');
                            $closeIcon.addClass('active');
                            if($(window).width() >= 768) {
                                app.scroll.hide($itemsWrapper.find('.items-wrapper'));

                                $itemsWrapper.slideUp({
                                    duration: 'fast',
                                    progress: function(){
                                        app.scroll.resize($filterGroupItems);
                                    }
                                });

                            }
                        } else {
                            $itemsWrapper.removeClass('hidden');
                            $openIcon.addClass('active');
                            $closeIcon.removeClass('active');

                            $itemsWrapper.slideDown({
                                duration: 'fast',
                                progress: function(){
                                    app.scroll.resize($filterGroupItems);
                                },
                                done: function(){
                                    app.scroll.show($itemsWrapper.find('.items-wrapper'));
                                }
                            });
                        }
                    }


                });
            });

            app.scroll.resize($filterGroupItems);
        };

        listTypes();
        mobileDeviceFilters();
        priceRange();
        app.scroll.remove($filterGroupItems);
        setScrolls();
        toggleFilterGroup();
        handleShowHideFiltersDropdown();
    };

    /*
     * CHECKBOX AND RADIO ELEMENTS
     * Description: Sets custom html for checkbox and radio elementsm
     *              Looks a lot more pretty :D
     * Plugins used: icheck
     */
    var handleCheckboxRadio = function($elements){
        $elements.icheck({
            checkboxClass: 'icheckbox_flat',
            radioClass: 'iradio_flat',
            increaseArea: '20%' // optional
        });
    };

    /*
     * APPEARING OF ELEMENTS
     * Description: Fade in elements once appeared on screen
     *              Elements must have "appear" class
     *              CSS is a lot of help here --> .appear with opacity: 0
     *                                            .appearead with opacity: 1
     * Plugins used: appear
     */
    var handleAppearing = function($elements){
        //once appeared add "appeared" class with opacity: 1
        var setAppeared = function($el){
            $el.addClass('appeared');
        };

        if($elements.length) {
            //loop through each element
            $elements.each(function(){
                var $el = $(this);

                $el.appear(function(){
                    //on appear event add appeared class for that element
                    setAppeared($el);
                });
            });
        }

        $('[data-transition]:not([data-transition=""])').each(function(){
            var $el = $(this),
                delay = $el.data('transition-delay') ? $el.data('transition-delay') : 0,
                accuracy = $el.data('appear-accuracy') ? $el.data('appear-accuracy') : 0;

            $el.data('transition-duration') ? $el.css('transition-duration', $el.data('transition-duration')) : '';

            $el.appear(function(){
                setTimeout(function(){
                    $el.addClass($el.data('transition'));
                }, delay);
            }, {accY: accuracy});
        });
    };

    /*
     * Market
     * Description: Set scrolls
     */
/*
    var handleScrolls = function($scroll){
        $scroll.niceScroll({
            cursorcolor: $scroll.data('scroll-color') ? $scroll.data('scroll-color') : "#3973b5",
            autohidemode: false,
            cursorborderradius: 0,
            railvalign: "top",
            cursorwidth: $scroll.data('cursor-width') ? $scroll.data('cursor-width') : 7,
            cursorborder: $scroll.data('scroll-border') ? $scroll.data('scroll-border') : "1px solid #FF9102",
            background: $scroll.data('background') ? $scroll.data('background') : "#f0f0f0"
        });
    };*/

    var handleCatalogZoomer = function(){
        var catalogZoomer = $(".catalog-zoomer");
        if(catalogZoomer.lenght > 0){
            catalogZoomer.panzoom({
                contain: 'invert',
                minScale: 1,
                maxScale: 1.90,
                $zoomIn: $(".catalog-zoomer-buttons .zoom-in"),
                $zoomOut: $(".catalog-zoomer-buttons .zoom-out"),
                $zoomRange: $(".catalog-zoomer-buttons .zoom-range")
            });
        }


    };

    // Product Zoomer
    var productzoomer = function(){

        //var zoomerHeight = app.height()-$('.header').outerHeight(true)- 50;
        var zoomerHeight = app.height()- 80;
        $(".zoomer-container, .zoomer_wrapper").height(zoomerHeight);
        $(".fullscreen").height(zoomerHeight + 20);
        $(".zoomer_basic").zoomer("destroy");
        $(".zoomer_basic").zoomer();

        var fullscreenWidth = $(".fullscreen").width();
//        setInterval(function(){
        if ($(".fullscreen").width() !== fullscreenWidth ) {
            fullscreenWidth = $(".fullscreen").width();
            $(".zoomer_basic").zoomer("destroy");
            $(".zoomer_basic").zoomer();
            var zoomerHeight = app.height()-$('.header').outerHeight(true)- 50;
            $(".zoomer-container, .zoomer_wrapper").height(zoomerHeight);
            $(".fullscreen").height(zoomerHeight + 20);

            $(window).trigger('resolutionchange');
        }
//        }, 500);

        $(window).bind('resolutionchange');
    };

    /*
     * LANGUAGE SELECTOR
     * Description: Show or hide avaliable languages on language selector hover
     */
    var handleLangToggle = function(){
        var $selector = $('.language-selector'),
            $options = $selector.find('.dropdown-options');

        if(!$selector.length) return;

        //show or hide options using a hidden class
        $selector.hover(function(){
            $options.removeClass('hidden');
        }, function(){
            $options.addClass('hidden');
        });
    };

    var handleCurrencyToggle = function(){
        var $selector = $('.currency-selector'),
            $options = $selector.find('.dropdown-options');

        if(!$selector.length) return;

        //show or hide options using a hidden class
        $selector.hover(function(){
            $options.removeClass('hidden');
        }, function(){
            $options.addClass('hidden');
        });

        //stop executing that link!
        $selector.find('a').click(function(e){
            e.preventDefault();
        });
    };

    var handleHeaderCart = function(){
        var $cart = $('.header-cart-flat,.header-cart'),
            $cartPreview = $('.header-cart-preview'),
            $cartToggle = $('.header-cart-toggle'),
            $fixedHeaderCart = $('.fixed-header-cart'),
            $cartItems = $('.header-cart-items');

        if(!$cart.length || !$cartToggle.length){
            return;
        }

        var hover = function(){
            $cartToggle.css({top: $cartPreview.outerHeight(true)});

            if(!$cart.children('.mini-cart').hasClass('mini-cart-side')){
                $cart.hover(function(){
                    $cartToggle.removeClass('invisible');
                    setTimeout(function(){
                        $cartToggle.css({opacity: 1});
                    }, 1);
                }, function(){
                    $cartToggle.addClass('invisible');
                    $cartToggle.css({opacity: 0});
                });

                $fixedHeaderCart.hover(function(){
                    $(this).prev().addClass("fhc-hover");
                }, function(){
                    $(this).prev().removeClass("fhc-hover");
                });
            }

        };

        var removeItem = function(){
            $cartItems.find('.remove-item').click(function(e){
                e.preventDefault();
                $(this).parents('li').remove();
            });
        };

        hover();
        removeItem();
    };

    var handleGalleryImagesSlider = function(){
        var $slider = $('.gallery-images.slider'),
            dataItems = $slider.data('items');

        $slider.handleSlider({
            margin: 5,
            navText: ['<i class="icon-angle-fat-left slider-prev ease-slow"></i>', '<i class="icon-angle-fat-right slider-next ease-slow"></i>'],
            navContainer: false,
            items: dataItems ? dataItems : 3
        });
    };

    /* proveriti - ovaj script na kraju update-a teme treba obrisati posto ima staru html strukturu slider-a */
    var handleProductsSlider = function(){
        if(!$('.product-slider-wrapper .slider').hasClass("slick-initialized")) {

            $('.product-slider-wrapper').each(function(){

                var $slider = $(this).find('.slider');
                var vertical = $slider.data('vertical');

                vertical = (vertical > '')? true:false;

                $slider.handleSlider({
                    dots: true,
                    vertical: vertical,
                    navText: ['<i class="arrow fullwidth-slider-prev fa fa-angle-left icon-lg ease-slow"></i>', '<i class="arrow fullwidth-slider-next fa fa-angle-right icon-lg ease-slow"></i>'],
                    prevArrow: '<div class="slider-arrow slider-prev"<i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>'
                });


                $('a[data-toggle="tab"]').on('shown.bs.tab', function(){
                    $slider.reinitSlider();
                });
            });
        }
    };

    var handleRelatedProductsSlider = function(){

        var $slider = $('.related-products-slider');

        $slider.handleSlider({
            appendArrows: $('.product-related-wrapper .slider-arrows'),
            dots: false,
            prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
            nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>'

        });

    };

    var handlePromoSliderBig = function(){
        $('.promo-slider-big').each(function(){
            var $slider = $(this),
                dataItems = $slider.data('items');

            $slider.handleSlider({
                items: dataItems ? dataItems : 5,
                dots: true
            });

            $('.promo-slider-big').find('img').batchImageLoad({
                loadingCompleteCallback: function(){
                    $(".promo-bg-big").height($(".promo-slider-big").height());

                    $(".promo-bg-big").niceScroll({
                        cursorcolor: $(this).data('scroll-color') ? $(this).data('scroll-color') : "#ff8f02"
                    });


                }
            });
        });
    };

    var handlePostsSlider = function(){
        $('.posts-slider').each(function(){
            var $slider = $(this);

            $slider.HandleSlider({
                dots: false
            });
        });
    };




    var handleSliderOnLandingPage = function(){
        var slider = $('.landing-slider').handleSlider({
            items: 1,
            lazyLoad: true,
            animateIn: 'fadeIn',
            animateOut: 'fadeOut',
            autoplay: true,
            navText: ['<i class="arrow landing-slider-prev fa fa-angle-left icon-lg ease-slow"></i>', '<i class="arrow landing-slider-next fa fa-angle-right icon-lg ease-slow"></i>']
        });

    };

    var handleAtributeSlider = function(){

        var centerPadding = ($(".fullwidth-slider-wrapper").width() - $(".container").width()) / 2 + "px";

        $('.atributes-slider').handleSlider({
            dots: true,
            centerMode: true,
            autoplay: true,
            centerPadding: centerPadding
        });
    };

    var handleMainSliderPlaneta = function(){
        var $slider = $('.main-slider-full');
        var padding = ($slider.width() - 1200)/2 +'px';

        var sliderwidth =$slider.width()+'px';

        $slider.handleSlider({
            dots: true,
            slidesToShow: 1,
            centerMode: true,
            centerPadding: padding,
            adaptiveHeight: true

        });

        $('.main-slider-wrapper.slider-wrapper-full  .slider-navigation-absolute').css('left', padding);
        $('.main-slider-wrapper.slider-wrapper-full  .slider-navigation-absolute').css('width','sliderwidth');

        $slider.on('beforeChange', function(event, slick, currentSlide, nextSlide){
            var slika = currentSlide;
            //$('.main-slider-wrapper.slider-wrapper-full .slider-next').css("background","red");

        });

    };

    var handleMainTwoImgSlider = function(){

        var $slider = $('.main-two-img-slider .slider-init');

        $slider.nbHandleSlider({
            dots: true,
            speed: 1000,
            fade: true
        });

    };

    var handleHandlinesSlider = function(){

        var $slider = $('.handlines-sldier .slider-init');

        $slider.nbHandleSlider({
            autoplay: true,
            speed: 1000
        });

    };


    /*var handleSmallSimplelider = function(){

        var $slider = $('.simple-small-slider .slider-init');

        $slider.nbHandleSlider({
            autoplay: true,
            arrows:false,
            dots:true
        });

    };*/

    var handleGenericSlider = function(){
        var $slider = $('.slider-generic');

        $slider.each(function(){

            var $this = $(this);
            var dataArrows          = $this.data('arrows');
            var dataName            = $this.data('uname');
            var dataDots            = $this.data('dots');
            var dataItems           = $this.data('items');
            var dataVertical        = $this.data('vertical');
            var dataSync            = $this.data('sync');
            var dataAuto            = $this.data('autoplay');
            var dataNavWidth        = $this.data('navwidth');
            var dataAutoplaySpeed   = $this.data('autoplayspeed');
            var dataSpeed           = $this.data('speed');
            var dataFade            = $this.data('fade');
            var dataDrag            = $this.data('draggable');


            dataArrows      = dataArrows == 1 ? true : false;
            dataDots        = dataDots == 1 ? true : false;
            dataAuto        = dataAuto == 1 ? true : false;
            dataVertical    = dataVertical == 1 ? true : false;
            dataSync        = dataSync >'' ? dataSync : false;
            dataAutoplaySpeed        = dataAutoplaySpeed >'' ? dataAutoplaySpeed : 1000;
            dataSpeed        = dataSpeed >'' ? dataSpeed : 500;
            var Focus = dataSync >'' ? true : false;
            dataFade = dataFade == 1 ? true : false;

            $this.handleSlider({
                arrows: dataArrows,
                dots: dataDots,
                items: dataItems,
                autoplay: dataAuto,
                vertical: dataVertical,
                asNavFor: dataSync,
                focusOnSelect: Focus,
                speed: dataSpeed,
                autoplaySpeed: dataAutoplaySpeed,
                fade: dataFade,
                draggable: dataDrag,
                cssEase: 'linear'

            });
            if(dataNavWidth > '' && dataNavWidth == 'image') {

                var navwidth    = $('.slider-generic .slick-current.slick-active img').width();
                //var padding     = ($slider.width() - navwidth)/2 +'px';
                navwidth        = navwidth+'px';

                $(dataName+'-slider-wrapper .slider-arrows.slider-navigation-absolute').css({"width":"1400px"});
                // $(dataName+'-slider-wrapper .slider-navigation-absolute').css('width', 'navwidth');

            }
        });
    };


    var handleSliderWithText = function(){
        var $slider = $('.caption-slider');

        $slider.handleSlider({
            dots: false,
            slidesToScroll: 1,
            lazyLoad: true,
            animateIn: 'fadeIn',
            animateOut: 'fadeOut',
            autoplay: true,
            vertical: true,
            speed: 300
        });

    };

    var handleSliderWithPadding = function(){
        var $slider = $('.center-slider');
        var padding = ($slider.width() - 1200)/2 +'px';

        $('.sldier-with-padding-wrapper .slider-navigation-absolute').css('width','1200px');
        //$('.main-slider-wrapper .slider-navigation-absolute').css('left',padding);
        $slider.handleSlider({
            dots: false,
            slidesToShow: 1,
            centerMode: true,
            centerPadding: padding,
            adaptiveHeight: true,
            prevArrow: '<div class="slider-arrow slider-prev"><i class="icon-caret-down icon-rotate-90"></i></div>',
            nextArrow: '<div class="slider-arrow slider-next"><i class="icon-caret-down icon-rotate-270"></i></div>'

        });


        $slider.on('beforeChange', function(event, slick, currentSlide, nextSlide){
            var slika = currentSlide;

        });

    };

    var handleTabsSlider = function(){
        if($(window).width() < 768) {

            var $slider = $('.contact-page .tabs-slider, .page-cooperation .tabs-slider,.page-career .tabs-slider, .product-specification-tabs .tabs-slider, .product-tab .tabs-slider');

            $slider.slick({
                dots: false,
                infinite: true,
                speed: 300,
                slidesToShow: 1,
                centerMode: true,
                arrows: false,
                adaptiveHeight: true,
                touchMove:true

            });
            $slider.on('beforeChange', function(event, slick, current_slide_index, next_slide_index){

                $('.slick-slide').removeClass('active');
                $('.slick-slide[data-index=' + next_slide_index + ']').addClass('active');
            });
        }

    };

    var handleCatalog = function(){

        var slider              = $('.catalog-slider'),
            sliderAlt           = $('.catalog-slider-bookalt'),
            sliderHTML          = $('.catalog-slider-html'),
            slideWidth          = $('.book-view .catalog-slider img').width(),
            bookPagination      = $(".book-pagination"),
            bookPaginationAlt   = $('.bookalt-pagination'),
            bookPaginationHTML  = $('.catalog-html-pagination'),
            catalogReaderIcons  = $('.catalog-reader-footer i'),
            catalogContent      = $('.catalog-content'),
            zoomerButtons       = $('.catalog-zoomer-buttons'),
            catalogPagination   = $('.catalog-pagination'),
            catalogZoomerMobile = $(".catalog-zoomer-mobile"),
            catalogZoomer       = $(".catalog-zoomer");

        if($(window).width() > 767){

            zoomerButtons.hide();
            catalogContent.width(slideWidth);
            catalogPagination.width(slideWidth);

            slider.slick({
                appendArrows: bookPagination,
                prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>'
            });

            $('.footer-wrapper').css("padding-bottom", 40);
        }

        else{
            slider.slick({
                appendArrows: bookPagination,
                prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                swipe: false,
                touchMove: false
            });
            if(catalogZoomerMobile.length > 0){
                catalogZoomerMobile.panzoom({
                    contain: 'invert',
                    minScale: 1,
                    maxScale: 1.90,
                    $zoomIn: $(".catalog-zoomer-buttons .zoom-in"),
                    $zoomOut: $(".catalog-zoomer-buttons .zoom-out"),
                    $zoomRange: $(".catalog-zoomer-buttons .zoom-range")
                });
            }
            zoomerButtons.show();

            slider.on('beforeChange', function(){
                catalogZoomerMobile.panzoom("reset");
            });
        }

        // number of initial slide
        $("#catalogActivePage").html($(".catalog-reader-outer-wrapper").attr("data-slide"));

        $('.catalog-reader-footer i.icon-book').click(function(){
            catalogReaderIcons.removeClass('active');
            $(this).addClass('active');
            catalogContent.removeClass("grid-view bookalt-view");
            catalogContent.addClass("book-view");
            catalogContent.width(slideWidth);
            catalogPagination.width(slideWidth);
            slider.slick('setPosition');
            if($(window).width() > 767){
                zoomerButtons.hide();
                catalogPagination.width($('.book-view .catalog-slider img').width());
            }
            else{
                zoomerButtons.show();
            }

            $('map').imageMapResize();

            $(".catalog-branding .banner-branding-left").css("margin-left","-1460px");
            $(".catalog-branding .banner-branding-right").css("margin-right","-1460px");

        });

        $('.catalog-reader-footer i.icon-grid').click(function(){
            catalogReaderIcons.removeClass('active');
            $(this).addClass('active');
            catalogContent.removeClass("book-view grid-view");
            catalogContent.addClass("bookalt-view");
            $('.catalog-slider-bookalt, .catalog-content.bookalt-view').width(slideWidth*1.4);
            catalogPagination.width($('.catalog-slider-bookalt').width());
            catalogPagination.width(slideWidth*1.4);
            $('.catalog-reader .zoomer').height();
            $('.fotoer-wrapper').hide();

            if(!sliderAlt.hasClass("slick-initialized")){
                sliderAlt.slick({
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    appendArrows: bookPaginationAlt,
                    prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
                    nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
                    swipe: false,
                    touchMove: false
                });
            }

            sliderAlt.on('beforeChange', function(){
                catalogZoomer.panzoom("reset");
            });

            $('.catalog-zoomer-buttons').show();

            handleCatalogZoomer();

            $('map').imageMapResize();

            $(".catalog-branding .banner-branding-left").css("margin-left","-1560px !important");
            $(".catalog-branding .banner-branding-right").css("margin-right","-1560px !important");

        });

        $('.catalog-reader-footer i.icon-gridalt').click(function(){
            catalogReaderIcons.removeClass('active');
            $(this).addClass('active');
            catalogContent.removeClass("bookalt-view book-view");
            catalogContent.addClass("grid-view");
            $('.catalog-reader').width();
            zoomerButtons.hide();
            $('body').css("overflow","auto");

        });

        $('map').imageMapResize();

        //image map fix for iOS devices
        $(".catalog-reader map").on("touchstart", function (evt){
            evt.preventDefault();
            if (evt.target.tagName.toLowerCase() === "area"){
                location.href = evt.target.href;
            }
        });

        bookPaginationHTML.width($('.catalog-slider-html').width()-20);

        sliderHTML.slick({
            slidesToShow: 2,
            slidesToScroll: 1,
            appendArrows: $('.bookalt-pagination'),
            prevArrow: '<div class="slider-arrow slider-prev"><i class="fa fa-angle-left" aria-hidden="true"></i></div>',
            nextArrow: '<div class="slider-arrow slider-next"><i class="fa fa-angle-right" aria-hidden="true"></i></div>',
            responsive: [{
                breakpoint: 1025,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    adaptiveHeight: true
                }
            }]

        });


        $(".catalog-reader-html .icon-book").click(function(){
            sliderHTML.slick('slickSetOption','slidesToShow','1');
            sliderHTML.slick('slickSetOption','adaptiveHeight','true');
            $('.catalog-content-html').addClass("half-width");
            sliderHTML.slick('setPosition');
            bookPaginationHTML.width($('.catalog-slider-html').width()-20);
        });

        $(".catalog-reader-html .icon-grid").click(function(){
            sliderHTML.slick('slickSetOption','slidesToShow','2');
            sliderHTML.slick('slickSetOption','adaptiveHeight','false');
            $('.catalog-content-html').removeClass("half-width");
            sliderHTML.slick('setPosition');
            bookPaginationHTML.width($('.catalog-slider-html').width()-20);
        });

        $(".catalog-reader-html .catalog-pagination .slider-prev").click(function(){
            $("#catalogActivePage").html(sliderHTML.slick('slickCurrentSlide')+1);
        });

        $(".catalog-reader-html .catalog-pagination .slider-next").click(function(){
            $("#catalogActivePage").html(sliderHTML.slick('slickCurrentSlide')+1);
        });

    };

    var handleStoreMap = function(){
        var storeMapWrapper = $('.store-map-wrapper');
        var storePanel = $('.storelocator-panel');

        storeMapWrapper.height($(window).height() - $('.header').height());
        storePanel.height(storeMapWrapper.height() - 50);


    };

    var handleScrollSlider = function(){
        var sliderWrapper   = $('.scroll-slider-wrapper');
        var scrollSlider    = sliderWrapper.next(".scroll-slider-object");
        var totalWidth      = scrollSlider.find(".scroll-slider-width").width();
        var prevButton      = sliderWrapper.find('.slider-prev');
        var nextButton      = sliderWrapper.find('.slider-next');
        var step            = scrollSlider.outerWidth();
        var animationSpeed  = 500;

        if(scrollSlider.width() > totalWidth){
            prevButton.hide();
            nextButton.hide();
        }

        prevButton.click(function(){
            scrollSlider.animate({ scrollLeft: '-='+step }, animationSpeed);
        });

        nextButton.click(function(){
            scrollSlider.animate({ scrollLeft: '+='+step }, animationSpeed);
        });

    };

    /*
     * SLIDER WITH ONE ITEM PER PAGE
     */
    var handleOneitemSlider = function(){
        var $slider = $('.oneitem-slider');

        $slider.handleSlider({
            slidesToShow: 1,
            slidesToScroll: 1,
            dots: true,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
            ]
        });
    };

    /*/!*
     * ACCORDION
     * Description: Panels with its expandable child panels (on click).
     * Plugins used: Bootstrap's Collapse
     *!/
    var handleAccordion = function($panelsGroup){

        var collapsing = function(){

            //on shown pannel set all panels to not opened, except the collapsed panel
            $panelsGroup.on('shown.bs.collapse', function(e){

                //set all to not opened
                $panelsGroup.find('.panel-top').children('.panel-heading').removeClass('opened');

                if($(e.target).parents('.panel').children('.collapse.in').length === 0) return;
                $(e.target).parents('.panel').children('.panel-heading').addClass('opened');
            });

            $panelsGroup.on('hide.bs.collapse', function(e){
                if($(e.target).parent('.panel').children('.collapse.in').length === 0) return;
                $(e.target).parent('.panel').children('.panel-heading').removeClass('opened');
            });
        };

        //If top panel (parent panel) has only one child panel,
        //automatically expand that child panel
        var expandSinglePanels = function(){

            //panel group has only one child panel, expand it
            if($panelsGroup.children('.panel').length === 1){
                $panelsGroup.children('.panel').find('.collapse').addClass('in');
                return;
            }

            //panel group has multiple child panels
            //loop through them
            $panelsGroup.children('.panel').each(function(){
                var $panel = $(this),
                    $panelHeading = $panel.children('.panel-heading');

                //top panel is toggled,
                //if there is only one child panel, expand it
                $panelHeading.click(function(){
                    if($panel.find('.panel').length > 1) return;
                    $panel.find('.panel > .collapse').addClass('in');
                });
            });
        };


        collapsing();
        expandSinglePanels();
    };*/
    /*
     * DATEPICKER
     * Description: @TODO
     * Plugin used: Bootstrap's datepicker http://bootstrap-datepicker.readthedocs.org/
     */
/*    var handleDatepicker = function($date){
        $date.datepicker();
    };*/
/*
    var handleDatepicker = function($date){
        $date.datepicker({
            autoclose: true,
            format:'dd.mm.yyyy'
        });

    };*/

    var handleScrollDown =  function(){
        if($(window).width() > 768){
            var buttontop = $('.scroll-down');

            buttontop.click(function(){
                $('html, body').animate({
                    scrollTop: $(".background-slider-div").offset().top
                }, 1000);
            });
        }
    };

    var handleMainNavMobile = function(){
        var caret = $('.nav-main > li > a > i');
        if($(window).width() < mobileBreakRes) {
            caret.click(function () {
                $(this).parent().toggleClass('show',0);
                $('.nav-main > li > a').fadeToggle(200, "linear" ,'hidden');
                $('.nav-main > li.has-bg').fadeToggle(200, "linear" ,'hidden');
                $('.nav-main-useractions').fadeToggle(0, "linear" ,'hidden');
                $('.menu-login-wrapper').toggleClass('hide',0);
            });
        }
    };

    /*
     * GOOGLE MAPS
     * Description: Google maps displayed within container
     * Library used: Google Maps
     */
    /*var handleMap = function($container, options, markerOptions){
        if(!$container.length) return;

        var Wscroll = $container.data('well-scroll');

        Wscroll = (Wscroll && Wscroll>'')? true : false;

        var styles = [
            {
                "featureType": "landscape",
                "elementType": "all",
                "stylers": [{"hue": "#F1FF00"},{"saturation": -27.4},{"lightness": 9.4},{"gamma": 1}]
            },
            {
                "featureType": "road.highway",
                "elementType": "all",
                "stylers": [{"hue": "#EDBFBE"},{"saturation": -20},{"lightness": 36.4},{"gamma": 1}]
            },
            {
                "featureType": "road.arterial",
                "elementType": "all",
                "stylers": [{"hue": "#00FF4F"},{"saturation": 0},{"lightness": 0},{"gamma": 1}]},
            {
                "featureType": "road.local",
                "elementType": "all",
                "stylers": [{"hue": "#FFB300"},{"saturation": -38},{"lightness": 11.2},{"gamma": 1}]},
            {
                "featureType": "water",
                "elementType": "all",
                "stylers": [{"hue": "#00B6FF"},{"saturation": 4.2},{"lightness": -63.4},{"gamma": 1}
                ]
            },
            {
                "featureType": "poi",
                "elementType": "all",
                "stylers": [{"hue": "#9FFF00"},{"saturation": 0},{"lightness": 0},{"gamma": 1}]
            }
        ];

        var _options = {
            center: new google.maps.LatLng($container.data('lat'), $container.data('lng')),
            zoom: 16,
            scrollwheel: Wscroll,
            mapTypeControl: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: styles
        };

        var map = new google.maps.Map($container[0], $.extend(_options, options));

        //markerOptions is false
        //which means that it should not be on the map
        if(markerOptions === false) return map;

        var _markerOptions = {
            position: new google.maps.LatLng($container.data('lat'), $container.data('lng')),
            icon: $container.data('map-marker') ? new google.maps.MarkerImage($container.data('map-marker')) : null,
            map: map
        };

        var marker = new google.maps.Marker($.extend(_markerOptions, markerOptions));

        marker.setMap(map);

        return map;
    };*/

   /* /!*
     * MAP MODAL
     * Description: Modal that contains Google Map
     * Plugin used: Bootstrap's Modal

    var handleModalMap = function($mapTrigger){

        if(!$mapTrigger.length) return;

        var $mapModal = $('#map_modal'),
            $map = $mapModal.find('.modal-map');

        //modal with map is requested
        $mapTrigger.click(function(){

            var $mapTriggerInstance = $(this);

            //vertically align modal before displaying
            handleModalCenter();

            //get its title by title of map trigger link
            //$mapModal.find('.modal-title').html($mapTriggerInstance.data('title'));

            //modal is ready, show it
            $mapModal.modal('show');

            //empty map
            $map.empty();

            //once showed initialize map with its coordinates
            //map CANNOT be initialized before this event, because its CONTAINER HAS TO BE VISIBLE!
            $mapModal.on('shown.bs.modal', function(){
                $map.data('lat', $mapTriggerInstance.data('lat'));
                $map.data('lng', $mapTriggerInstance.data('lng'));
                handleMap($map);
            });

        });
    };*/

    /*
     * PROMO MODAL
     * Description: Modal that is showed 2 seconds as page gets loaded
     * Plugin used: Bootstrap's Modal
     */
    var handleModalPromo = function($modal){
        if(!$modal.length || app.width() <= 767) return;

        var $images = $modal.find('img'),
            $virtualImages = $(),   //images that exists only in browser's memory, those are not printed
            width = 0;

        $images.each(function(){
            //get source of real images and add them to memory
            $virtualImages = $virtualImages.add($('<img>').attr('src', $(this).attr('src')));
        });

        var show = function(){
            //once all images have been loaded begin show modal
            $virtualImages.imagesLoaded(function(){
                if($modal.hasClass('promo-modal')){
                    //calculate modal's width in order to get him centered
                    $virtualImages.each(function(){
                        if($(this)[0].width > width){
                            width = $(this)[0].width;
                        }
                    });
                    //add 40px as modal-dialog has 20px padding-left and padding-right
                    $modal.find('.modal-dialog').width(width + 40);
                }



                //$modal.modal('show');
            });
        };

        setTimeout(show, $modal.data('delay'));
    };

    var handleForms = function(){

        var initiateValidationByDataAttr = function(){
            $('[data-validation-validate]').validate();
        };

        var login = function(){
            $('.login_form').each(function(){
                var validate = $(this).validate({
                    formData: { ajax: 'yes', task: 'login' }
                }).data('nb.validate');


//                //some field value has been changed
//                validate.$element.find('select').on('change', function(){
//
//                    //get some values from server
//                    $.ajax({
//                        url: 'some-url',
//                        success: function(ret){
//                            if(ret){
//                                $('someotherfield').parsley().destroy();
//                            } else {
//                                $('tottalyDifferentField').parsley();
//                            }
//                        }
//                    });
//
//
//                });

                validate.$element.bind('nb.validate.remoteSuccess', function(e){
                    validate.$element.find('.modal-body :not(.alert), .modal-footer').addClass('hidden');
                    window.location.reload();

                });
            });
        };

        var lostPassword = function(){
            $('.lost_password_form').each(function(){
                var validate = $(this).validate({
                    formData: { ajax: 'yes', task: 'lostpassword' }
                }).data('nb.validate');

                validate.$element.bind('nb.validate.remoteSuccess', function(e){
                    validate.$element.find('.modal-body :not(.alert), .modal-footer').addClass('hidden');
                });

                $('#lost_password_modal').on('show.bs.modal', function(){
                    validate.$element.find('#lost_password_email').val('').removeClass('parsley-success parsley-error');
                    validate.$element.find('.modal-body :not(.alert), .modal-footer').removeClass('hidden');
                    validate.resetAlertContainer();
                });
            });
        };

        var registration = function(){

            var typePerson = function($idElement, prefixName, validate){

                var validateTypePerson = function(thisElement, prefixName, validate){

                    var $naturalPerson = $('.registration_form .'+prefixName+'naturalPerson');
                    var $legalEntity = $('.registration_form .'+prefixName+'legalEntity');

                    if(thisElement.val() == 2){

                        $legalEntity.removeClass('hidden');

                        if(!$naturalPerson.hasClass('hidden')){
                            $naturalPerson.addClass('hidden');
                        }

                        //TEXT FILDS
                        $legalEntity.find('.form-control').data('parsley-required', 'true');
                        $legalEntity.find('.form-control').prop("required", "true");

                        $naturalPerson.find('.form-control').data('parsley-required', 'false');
                        $naturalPerson.find('.form-control').prop("required", "false");
                        $naturalPerson.find('.form-control').removeAttr('required');

                        //SELECT FILDS
                        $legalEntity.find('select').data('parsley-required', 'true');
                        $legalEntity.find('select').prop("required", "true");

                        $naturalPerson.find('select').data('parsley-required', 'false');
                        $naturalPerson.find('select').prop("required", "false");
                        $naturalPerson.find('select').removeAttr('required');

                    }else{

                        $naturalPerson.removeClass('hidden');

                        if(!$legalEntity.hasClass('hidden')){
                            $legalEntity.addClass('hidden');
                        }

                        //TEXT FILDS
                        $naturalPerson.find('.form-control').data('parsley-required', 'true');
                        $naturalPerson.find('.form-control').prop("required", "true");

                        $legalEntity.find('.form-control').data('parsley-required', 'false');
                        $legalEntity.find('.form-control').prop("required", "false");
                        $legalEntity.find('.form-control').removeAttr('required');

                        //SELECT FILDS
                        $naturalPerson.find('select').data('parsley-required', 'true');
                        $naturalPerson.find('select').prop("required", "true");

                        $legalEntity.find('select').data('parsley-required', 'false');
                        $legalEntity.find('select').prop("required", "false");
                        $legalEntity.find('select').removeAttr('required');

                    }

                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocument').data('parsley-required', 'false');
                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocument').prop("required", "false");
                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocument').removeAttr('required');
                    //
                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocumentText').data('parsley-required', 'false');
                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocumentText').prop("required", "false");
                    // $legalEntity.find('#reg_'+prefixName+'vatNumberDocumentText').removeAttr('required');

                    $naturalPerson.find('#reg_'+prefixName+'company_work').data('parsley-required', 'false');
                    $naturalPerson.find('#reg_'+prefixName+'company_work').prop("required", "false");
                    $naturalPerson.find('#reg_'+prefixName+'company_work').removeAttr('required');

                    $naturalPerson.find('#reg_'+prefixName+'position_in_company').data('parsley-required', 'false');
                    $naturalPerson.find('#reg_'+prefixName+'position_in_company').prop("required", "false");
                    $naturalPerson.find('#reg_'+prefixName+'position_in_company').removeAttr('required');

                    $naturalPerson.find('#reg_'+prefixName+'social_status').data('parsley-required', 'false');
                    $naturalPerson.find('#reg_'+prefixName+'social_status').prop("required", "false");
                    $naturalPerson.find('#reg_'+prefixName+'social_status').removeAttr('required');

                    $naturalPerson.find('#reg_'+prefixName+'marriage_status').data('parsley-required', 'false');
                    $naturalPerson.find('#reg_'+prefixName+'marriage_status').prop("required", "false");
                    $naturalPerson.find('#reg_'+prefixName+'marriage_status').removeAttr('required');

                    validate.$element.parsley().reset();
                };

                $( "#"+$idElement).change(function() {
                    validateTypePerson($(this), prefixName, validate);
                });

                if($("#"+$idElement).length > 0){
                    validateTypePerson($("#"+$idElement), prefixName, validate);
                }

            };

            $('.registration_form').each(function(){

                var flagRefreshPage = false;
                if($(this).data('refresh-page') == 1){
                    flagRefreshPage = true;
                }

                //console.log(flagRefreshPage);

                var validate = $(this).validate({
                    formData: { ajax: 'yes', task: 'registration' },
                    refreshPage : flagRefreshPage,
                }).data('nb.validate');

                validate.$element.bind('nb.validate.remoteSuccess', function(e){
                    validate.$element.find('.modal-body :not(.alert), .modal-footer, .registration-page-form-inputs :not(.alert)').addClass('hidden');
                });

                typePerson("reg_type_person", '', validate);
                typePerson("reg_page_type_person", 'page_', validate);

                var $emailField = validate.$element.find('#reg_email');
                validate.addFieldRemoteValidate(
                    $emailField, {
                        ajax: 'yes',
                        task: 'check_email',
                        email: function(){
                            return $emailField.val();
                        }
                    }
                );

                 var $emailPageField = validate.$element.find('#reg_page_email');
                 validate.addFieldRemoteValidate(
                     $emailPageField, {
                         ajax: 'yes',
                         task: 'check_email',
                         email: function(){
                             return $emailPageField.val();
                         }
                     }
                 );

                var $registrationModal = $('#register_modal');
                $emailField.bind('nb.validate.remoteErrorData', function(e, msg){
                    $registrationModal.modal('hide');
                    e.preventDefault();

                    bootbox.dialog({
                        message: msg,
                        title: $registrationModal.data('reg-modal-label'),
                        className: "activate-account-modal",
                        buttons: {
                            success: {
                                label: $registrationModal.data('reg-modal-success-label'),
                                className: "btn-success",
                                callback: function(){
                                    var $bootboxConfirm = $('.activate-account-modal'),
                                        $bootboxConfirmBody = $bootboxConfirm.find('.modal-body');

                                    var $loaderIcon = '<div class="loader-icon loader-icon-inline loader-icon-xs"></div>';
                                    $bootboxConfirmBody.html($registrationModal.data('reg-modal-success-text') + '...'+$loaderIcon);

                                    $.ajax({
                                        type: "POST",
                                        url: validate.$element.data('remote-url'),
                                        data: {
                                            ajax: 'yes',
                                            task: 'completionregistrationprocess',
                                            email: $emailField.val()
                                        },
                                        dataType: 'json',
                                        success: function(ret){
                                            if(ret.flag){

                                                $bootboxConfirmBody.html('<div class="alert alert-success">'+ret.info+'</div>');
                                                $bootboxConfirm.find('.modal-footer .btn').remove();
                                                validate.resetForm();

                                                if(ret.flagRefreshPage){
                                                    setTimeout(window.location = ret.backUrl, 2000);
                                                }

                                            } else {
                                                $bootboxConfirmBody.html('<div class="alert alert-danger">'+ret.info+'</div>');
                                            }
                                        }
                                    });

                                    //dont hide the bootbox-confirm modal
                                    return false;
                                }
                            },
                            danger: {
                                label: $registrationModal.data('reg-modal-danger-label'),
                                className: "btn-default btn-icon-left icon-arrow-long-left pull-left",
                                callback: function(){
                                    var $bootboxConfirm = $('.activate-account-modal');
                                    $bootboxConfirm.data('modal', null);
                                    $registrationModal.modal('show');
                                }
                            },
                        }
                    });

                });

                var $registrationPage = $('#registration_page');
                //na strani
                $emailPageField.bind('nb.validate.remoteErrorData', function(e, msg){

                    //$registrationPage.modal('hide');
                    bootbox.dialog({
                        message: msg,
                        title: $registrationPage.data('reg-modal-label'),
                        className: "activate-account-modal",
                        buttons: {
                            success: {
                                label: $registrationPage.data('reg-modal-success-label'),
                                className: "btn-success",
                                callback: function(){
                                    var $bootboxConfirm = $('.activate-account-modal'),
                                        $bootboxConfirmBody = $bootboxConfirm.find('.modal-body');

                                    var $loaderIcon = '<div class="loader-icon loader-icon-inline loader-icon-xs"></div>';
                                    $bootboxConfirmBody.html($registrationPage.data('reg-modal-success-text') + '...'+$loaderIcon);

                                    $.ajax({
                                        type: "POST",
                                        url: validate.$element.data('remote-url'),
                                        data: {
                                            ajax: 'yes',
                                            task: 'completionregistrationprocess',
                                            email: $emailPageField.val()
                                        },
                                        dataType: 'json',
                                        success: function(ret){
                                            if(ret.flag){
                                                $bootboxConfirmBody.html('<div class="alert alert-success">'+ret.info+'</div>');
                                                $bootboxConfirm.find('.modal-footer .btn').remove();
                                                validate.resetForm();
                                                
                                                if(ret.flagRefreshPage){
                                                    setTimeout(window.location = ret.backUrl, 2000);
                                                }
                                                
                                            } else {
                                                $bootboxConfirmBody.html('<div class="alert alert-danger">'+ret.info+'</div>');
                                            }
                                        }
                                    });

                                    //dont hide the bootbox-confirm modal
                                    return false;
                                }
                            },
                            danger: {
                                label: $registrationPage.data('reg-modal-danger-label'),
                                className: "btn-default btn-icon-left icon-arrow-long-left pull-left",
                                callback: function(){
                                    var $bootboxConfirm = $('.activate-account-modal');
                                    $bootboxConfirm.data('modal', null);
                                    //$registrationPage.modal('show');
                                }
                            },
                        }
                    });

                });
            });
        };

        var newsletter = function(){
            var form = $('#newsletter_form, #newsletter_form_sidebar');
            if(!form.length) return;

            var newsletterValidate = form.validate({
                formData: { task: 'save', nbAjax: 1, nbTask: 'newsletter' }
            }).data('nb.validate');

            newsletterValidate.$element.bind('nb.validate.remoteSuccess', function(e){
                newsletterValidate.$element.find('.form-control, .btn').addClass('hidden');
            });
        };

        var subscribe = function(){

            var form = $('#subscribe_form, #subscribe_form_solo');

            if(!form.length) return;

            var subscribeValidate = form.validate({
                formData: { ajax: 'yes', task: 'save_subscribe' }
            }).data('nb.validate');

            subscribeValidate.$element.bind('nb.validate.remoteSuccess', function(e){
                subscribeValidate.$element.find('.form-inputs').addClass('hidden');
                $(document).trigger('popSubscribeSuccess');
            });
        };

        var comment = function(){

            var reloadComments = function($form){
                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: 'nbAjax=1&task=reload_comment&'+$form,
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    //dataType: 'json',
                    success: function(ret){
                        $('#commentsContent').html(ret);
                    }
                });
            };

            $('.form-comment').each(function(){

                var formComment = $(this).serialize();

                var validate = $(this).validate({
                    formData: { nbAjax: 1, ajax: 'yes', task: 'save_comment' }
                }).data('nb.validate');

                validate.$element.bind('nb.validate.remoteSuccess', function(e){
                    validate.$element.find('.form-control, .btn, .form-group label').addClass('hidden');
                    reloadComments(formComment);
                });
            });
        };

        var productPriceQuery = function(){
            var form = $('#product_price_query_form');
            if(!form.length) return;

            var subscribeValidate = form.validate({
                formData: { ajax: 'yes', task: 'productpricequery' }
            }).data('nb.validate');

            subscribeValidate.$element.bind('nb.validate.remoteSuccess', function(e){
                subscribeValidate.$element.find('.form-inputs').addClass('hidden');
                subscribeValidate.$element.find('.modal-footer').addClass('hidden');
            });
        };


        var cart = function(flagIstanceSubmitTicket){

            var billingAddress = function($idElement, typePerson,  prefixName, validate){

                var validateBillingAddress = function($idElement, typePerson, prefixName, validate){

                    var $billingAddress  =  $('.order-billing-address');
                    var $naturalPerson  = $('#cart_onepage_form .' + prefixName + 'naturalPerson');
                    var $legalEntity    = $('#cart_onepage_form .' + prefixName + 'legalEntity');

                    if($idElement.is(":checked")){

                        $('.new-billing-addess').removeClass('hidden');

                        $billingAddress.find('.form-control').data('parsley-required', 'true');
                        $billingAddress.find('.form-control').prop("required", "true");

                        $billingAddress.find('select').data('parsley-required', 'true');
                        $billingAddress.find('select').prop("required", "true");

                        if(typePerson == 2){
                            //TEXT FILDS
                            $legalEntity.find('.form-control').data('parsley-required', 'true');
                            $legalEntity.find('.form-control').prop("required", "true");

                            $naturalPerson.find('.form-control').data('parsley-required', 'false');
                            $naturalPerson.find('.form-control').prop("required", "false");
                            $naturalPerson.find('.form-control').removeAttr('required');

                            //SELECT FILDS
                            $legalEntity.find('select').data('parsley-required', 'true');
                            $legalEntity.find('select').prop("required", "true");

                            $naturalPerson.find('select').data('parsley-required', 'false');
                            $naturalPerson.find('select').prop("required", "false");
                            $naturalPerson.find('select').removeAttr('required');

                        }else{
                            //TEXT FILDS
                            $naturalPerson.find('.form-control').data('parsley-required', 'true');
                            $naturalPerson.find('.form-control').prop("required", "true");

                            $legalEntity.find('.form-control').data('parsley-required', 'false');
                            $legalEntity.find('.form-control').prop("required", "false");
                            $legalEntity.find('.form-control').removeAttr('required');

                            //SELECT FILDS
                            $naturalPerson.find('select').data('parsley-required', 'true');
                            $naturalPerson.find('select').prop("required", "true");

                            $legalEntity.find('select').data('parsley-required', 'false');
                            $legalEntity.find('select').prop("required", "false");
                            $legalEntity.find('select').removeAttr('required');
                        }

                    }else{

                        $billingAddress.find('.form-control').data('parsley-required', 'false');
                        $billingAddress.find('.form-control').prop("required", "false");
                        $billingAddress.find('.form-control').removeAttr('required');

                        $billingAddress.find('select').data('parsley-required', 'false');
                        $billingAddress.find('select').prop("required", "false");
                        $billingAddress.find('select').removeAttr('required');

                        $('.new-billing-addess').addClass('hidden');
                    }

                    validate.$element.parsley().reset();
                };

                $("#" + $idElement).change(function () {
                    validateBillingAddress($(this), $('#'+typePerson).val(), prefixName, validate);
                });

                if($("#" + $idElement).length > 0){
                    validateBillingAddress($("#"+$idElement), $('#'+typePerson).val(), prefixName, validate);
                }
            };

            var typePerson = function($idElement, prefixName, validate) {

                var validateTypePerson = function (thisElement, prefixName, validate) {

                     var $naturalPerson = $('#cart_onepage_form .' + prefixName + 'naturalPerson');
                     var $legalEntity = $('#cart_onepage_form .' + prefixName + 'legalEntity');

                     if (thisElement.val() == 2) {

                         $legalEntity.removeClass('hidden');

                         if (!$naturalPerson.hasClass('hidden')) {
                             $naturalPerson.addClass('hidden');
                         }

                         //TEXT FILDS
                         $legalEntity.find('.form-control').data('parsley-required', 'true');
                         $legalEntity.find('.form-control').prop("required", "true");

                         $naturalPerson.find('.form-control').data('parsley-required', 'false');
                         $naturalPerson.find('.form-control').prop("required", "false");
                         $naturalPerson.find('.form-control').removeAttr('required');

                         //SELECT FILDS
                         $legalEntity.find('select').data('parsley-required', 'true');
                         $legalEntity.find('select').prop("required", "true");

                         $naturalPerson.find('select').data('parsley-required', 'false');
                         $naturalPerson.find('select').prop("required", "false");
                         $naturalPerson.find('select').removeAttr('required');

                     } else {

                         $naturalPerson.removeClass('hidden');

                         if (!$legalEntity.hasClass('hidden')) {
                             $legalEntity.addClass('hidden');
                         }

                         //TEXT FILDS
                         $naturalPerson.find('.form-control').data('parsley-required', 'true');
                         $naturalPerson.find('.form-control').prop("required", "true");

                         $legalEntity.find('.form-control').data('parsley-required', 'false');
                         $legalEntity.find('.form-control').prop("required", "false");
                         $legalEntity.find('.form-control').removeAttr('required');

                         //SELECT FILDS
                         $naturalPerson.find('select').data('parsley-required', 'true');
                         $naturalPerson.find('select').prop("required", "true");

                         $legalEntity.find('select').data('parsley-required', 'false');
                         $legalEntity.find('select').prop("required", "false");
                         $legalEntity.find('select').removeAttr('required');

                     }

                    $("#cart_onepage_new_address_list").data('parsley-required', 'false');
                    $("#cart_onepage_new_address_list").prop("required", "false");
                    $("#cart_onepage_new_address_list").removeAttr('required');

                    $("#cart_onepage_new_address_list_id").data('parsley-required', 'false');
                    $("#cart_onepage_new_address_list_id").prop("required", "false");
                    $("#cart_onepage_new_address_list_id").removeAttr('required');

                     validate.$element.parsley().reset();
                };

                $("#" + $idElement).change(function () {
                    validateTypePerson($(this), prefixName, validate);
                });

                if($("#"+$idElement).length > 0){
                    validateTypePerson($("#"+$idElement), prefixName, validate);
                }
            };


            var $form = $('#cart_onepage_form');
            if(!$form.length){
                return;
            }

            var validate = $form.validate().data('nb.validate');

            validate.$element.find('.delivery-options li').click(function(){
                $(this).find('input').icheck('checked');
            });

            //main submit button clicked
            if(flagIstanceSubmitTicket){

                //type person change
                typePerson('cart_onepage_type_person', '',validate);
                typePerson('cart_onepage_billing_type_person', 'billing', validate);
                billingAddress('cart_onepage_new_billing_address', 'cart_onepage_billing_type_person', 'billing', validate);

                validate.$element.find('[name=submit_order_one_page]').click(function(e){
                    e.preventDefault();

                    var elementCartOnepageTermsOfUse = $('input[type="checkbox"][name="cart_onepage_terms_of_use"]');
                    if(elementCartOnepageTermsOfUse.length > 0){
                        elementCartOnepageTermsOfUse.data('parsley-required', 'true');
                        elementCartOnepageTermsOfUse.prop("required", "true");
                    };

                    var elementCartOnepageAnti  = $('#cart_onepage_anti');
                    if(elementCartOnepageAnti.length > 0){
                        elementCartOnepageAnti.data('parsley-required', 'true');
                    }

                    var $textFieldsAddress = validate.$element.find('.address-setnew .form-control');
                    $textFieldsAddress.data('parsley-required', 'true');

                    validate.$element.data('ticketBtnOriginalEvent', -1);

                    validate.setButtonSubmitted($(this));

                    validate.$element.submit();
                });

            }

            //ticket submit button clicket
            validate.$element.find('[name=cart_insert_ticket]').click(function (e) {
                //stop form from submitting
                e.preventDefault();

                var elementCartOnepageTermsOfUse = $('input[type="checkbox"][name="cart_onepage_terms_of_use"]');
                if (elementCartOnepageTermsOfUse.length > 0) {
                    elementCartOnepageTermsOfUse.data('parsley-required', 'false');
                    elementCartOnepageTermsOfUse.prop("required", "false");
                    elementCartOnepageTermsOfUse.removeAttr('required');
                }
                ;

                var elementCartOnepageAnti = $('#cart_onepage_anti');
                if (elementCartOnepageAnti.length > 0) {
                    elementCartOnepageAnti.removeAttr('required');
                    elementCartOnepageAnti.data('parsley-required', 'false');
                }

                var $textFieldsAddress = validate.$element.find('.address-setnew .form-control');
                $textFieldsAddress.removeAttr('required');
                $textFieldsAddress.data('parsley-required', 'false');

                //this is how we will now the ticket btn is clicked, not great solution, I know :O
                validate.$element.data('ticketBtnOriginalEvent', 1);

                //set this button as submitted
                validate.setButtonSubmitted($(this));

                //and now submit the form
                validate.$element.submit();
            });

            //remove ticket submit button clicket
            validate.$element.find('[name=cart_remove_ticket]').click(function (e) {

                //stop form from submitting
                e.preventDefault();

                var elementCartOnepageTermsOfUse = $('input[type="checkbox"][name="cart_onepage_terms_of_use"]');
                if (elementCartOnepageTermsOfUse.length > 0) {
                    elementCartOnepageTermsOfUse.data('parsley-required', 'false');
                    elementCartOnepageTermsOfUse.prop("required", "false");
                    elementCartOnepageTermsOfUse.removeAttr('required');
                }
                ;

                var elementCartOnepageAnti = $('#cart_onepage_anti');
                if (elementCartOnepageAnti.length > 0) {
                    elementCartOnepageAnti.removeAttr('required');
                    elementCartOnepageAnti.data('parsley-required', 'false');
                }

                var $textFieldsAddress = validate.$element.find('.address-setnew .form-control');
                $textFieldsAddress.removeAttr('required');
                $textFieldsAddress.data('parsley-required', 'false');

                //add
                validate.setButtonSubmitted($(this));

                validate.$element.submit();

            });


            if(flagIstanceSubmitTicket){

                validate.$parsley.subscribe('parsley:form:validate', function (formInstance) {
                    var $textFields = validate.$element.find('.address-setnew .form-control');

                    if (!validate.$element.find('#orderAddress').prop('checked')) {
                        $textFields.removeAttr('required');
                        $textFields.data('parsley-required', 'false');
                    } else {
                        $textFields.data('parsley-required', 'true');
                    }

                    //reinit parsley validation
                    validate.$element.parsley();

                    if (formInstance.isValid() && validate.$element.data('ticketBtnOriginalEvent') != 1) {

                        var $ticket = validate.$element.find('#cart_ticket');

                        if (typeof $ticket.data('denied') === "undefined" && $ticket.val() == -1) {

                            formInstance.submitEvent.preventDefault();

                            bootbox.dialog({
                                message: $ticket.data('bootbox-question'),
                                title: $ticket.data('bootbox-btn-use-ticket'),
                                buttons: {
                                    success: {
                                        label: $ticket.data('bootbox-btn-yes'),
                                        className: "btn-success",
                                        callback: function () {
                                            $('body').animate({scrollTop: $ticket.parents('.cart-step').offset().top}, 500);
                                            return;
                                        }
                                    },
                                    danger: {
                                        label: $ticket.data('bootbox-btn-no'),
                                        callback: function () {
                                            $ticket.data('denied', 1);
                                            validate.$element.data('ticketBtnOriginalEvent', -1);
                                            validate.$element.find('#submit_order_one_page').click();
//                                        validate.$element.submit();
                                        }
                                    }
                                }
                            });
                        } else {

                            if (formInstance.isValid()) {
                                $('#submit_order_one_page').addClass('active');
                            } else {
                                $('#submit_order_one_page').removeClass('active');
                            }

                        }
                    } else {

                        if (formInstance.isValid()) {
                            $('#submit_order_one_page').addClass('active');
                        }

                    }
                });
            };
        };

        var showHideCommentForm = function(){


            $('.btn-display-form').click(function(e){

                $('.form-comment').toggleClass('active');
            });
        };

        var contact = function(){
            var form = $('#contact_form');
            if(!form.length) return;

            var validate = form.validate({
                formData: { task: 'save' }
            }).data('nb.validate');

            validate.$element.bind('nb.validate.remoteSuccess', function(e){
                validate.$element.find('.form-control, .btn').addClass('hidden');
            });
        };
        var travelBooking = function(){
            var form = $('.booking-travel-form');
            if(!form.length) return;

            var validate = form.validate({
                formData: { submit: true }
            }).data('nb.validate');

        };
        var preorderForm = function(){
            var form = $('#preorder_contact');
            if(!form.length) return;

            var preorderValidate = form.validate({
                formData: { task: 'save', nbAjax: 1, nbTask: '' }
            }).data('nb.validate');

        };
        var contactReservation = function(){
            var form = $('#contact_form_reservation');
            if(!form.length) return;

            var validate = form.validate({
                formData: { task: 'save' }
            }).data('nb.validate');

            validate.$element.bind('nb.validate.remoteSuccess', function(e){
                validate.$element.find('.form-control, .btn').addClass('hidden');
            });
        };
        var orderStatus = function(){
            var form = $('.view-order-status-form');
            if(!form.length) return;

            var validate = form.validate({
                formData: { task: 'save' }
            }).data('nb.validate');

            validate.$element.bind('nb.validate.remoteSuccess', function(e){
                validate.$element.find('.form-control, .btn').addClass('hidden');
            });
        };

        var importProductInCart = function(){

            var importProductCartInCart = function(textQuestion){

                bootbox.confirm(textQuestion, function(result) {
                    if (!result) {
                        return;
                    }
                    $.ajax({
                        type: "POST",
                        url: nb_active_page_url,
                        data: 'nbAjax=-1&ajax=yes&task=import_product_cart_in_cart',
                        contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                        dataType: 'json',
                        success: function(ret){
                            if(ret.flag){
                                //ovde treba da se redirektuje
                                window.location = ret.urlRedirect;

                            }else{
                                
                                $('#cart_import_form .alert').removeClass('hidden');
                                $('#cart_import_form .alert').addClass('alert-danger');
                                $('#cart_import_form .alert').text(ret.info);
                            }
                        }
                    });

                });
            };

            var resetImportProductCartInSession = function(textQuestion){

                bootbox.confirm(textQuestion, function(result) {
                    if (!result) {
                        return;
                    }

                    $.ajax({
                        type: "POST",
                        url: nb_active_page_url,
                        data: 'nbAjax=-1&ajax=yes&task=reset_import_product_cart',
                        contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                        dataType: 'json',
                        success: function(ret){
                            if(ret.flag){

                                reloadImportProductCartInSession();

                                $("#cart_import_form .cart-import-form-inputs").removeClass('hidden');
                                $("#cart_import_form .confirm-loader").removeClass('active');
                                $("#cart_import_form .alert").addClass('hidden');
                            }
                        }
                    });
                });
            };


            var deleteImportProductCartInSession = function(id, textQuestion){

                bootbox.confirm(textQuestion, function(result) {
                    if (!result) {
                        return;
                    }

                    $.ajax({
                        type: "POST",
                        url: nb_active_page_url,
                        data: 'nbAjax=-1&ajax=yes&task=delete_import_product_cart&id=' + id,
                        contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                        dataType: 'json',
                        success: function (ret) {
                            if (ret.flag) {
                                reloadImportProductCartInSession();
                            }
                        }
                    });
                });
            };

            var reloadImportProductCartInSession = function(){

                var form = $('#cart_import_form');
                if(!form.length) return;

                var cartImportLoader = $('.cart-import-loader');

                cartImportLoader.removeClass('hidden');

                $.ajax({
                    type: "POST",
                    url: nb_active_page_url,
                    data: 'nbAjax=-1&ajax=yes&task=reload_import_product_cart',
                    contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                    dataType: 'json',
                    success: function(ret){
                        if(ret.flag){

                            cartImportLoader.addClass('hidden');

                            $('#importProductsCartContent').html(ret.html);

                            if(ret.html.trim() == ''){
                                $("#cart_import_form .cart-import-form-inputs").removeClass('hidden');
                            }


                        }else{
                            $('#importProductsCartContent').html("");
                        }
                    }
                });
            };

            var saveProductCartInSession = function (){
                var form = $('#cart_import_form');
                if(!form.length) return;

                var validate = form.validate({
                    formData: {  nbAjax: -1, ajax: 'yes', task: 'import_cart_product' }
                }).data('nb.validate');

                validate.$element.bind('nb.validate.remoteSuccess', function(e){
                    validate.$element.find('.cart-import-form-inputs').addClass('hidden');
                    reloadImportProductCartInSession();
                });
            };

            var saveProductCartOnProfileInSession = function(urlPage, textQuestion, orderId, userPublicId){

                bootbox.confirm(textQuestion, function(result) {
                    if (!result) {
                        return;
                    }
                    $.ajax({
                        type: "POST",
                        url: urlPage,
                        data: 'nbAjax=-1&ajax=yes&task=import_cart_product_on_profile&orderId='+orderId+'&userPublicId='+userPublicId,
                        contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                        dataType: 'json',
                        success: function(ret){
                            if(ret.flag){
                                //ovde treba da se redirektuje
                                window.location = ret.urlRedirect;
                            }
                        }
                    });

                });
            };

            return{
                initImportProductInCartForms: function() {
                    saveProductCartInSession();
                    reloadImportProductCartInSession();
                },

                saveProductCartInSession : saveProductCartInSession,
                saveProductCartOnProfileInSession : saveProductCartOnProfileInSession,
                deleteImportProductCartInSession : deleteImportProductCartInSession,
                resetImportProductCartInSession : resetImportProductCartInSession,
                importProductCartInCart : importProductCartInCart,
                importProductCartInCart : importProductCartInCart,
            };

        };

        return{
            initForms: function() {
                initiateValidationByDataAttr();
                showHideCommentForm();
                login();
                lostPassword();
                registration();
                newsletter();
                comment();
                cart(true); //doto prebacno je da se pozove samo ova forma
                contact();
                preorderForm();
                contactReservation();
                orderStatus();
                subscribe();
                importProductInCart().initImportProductInCartForms();
                productPriceQuery();
                travelBooking();
            },
            cart : cart,
            registration: registration,
            importProductInCart: importProductInCart
        };
    };

    var handlePhoneVerification = function(){
        var $form = $('#phoneticket_verification_form'),
            $ticketModal = $('#phoneticket_verification_modal'),
            $btnTrigger = $('.phoneticket-verification-trigger');

        if(!$form.length) return;

        $btnTrigger.click(function(){

            bootbox.dialog({
                message: $ticketModal.data('phonetikcet-modal-text'),
                title: $ticketModal.data('phonetikcet-modal-title'),
                className: "phone-verificatino-modal",
                buttons: {
                    success: {
                        label: $ticketModal.data('phonetikcet-modal-send'),
                        className: "btn-success",
                        callback: function(){
                            var $bootboxConfirm = $('.phone-verificatino-modal'),
                                $bootboxConfirmBody = $bootboxConfirm.find('.modal-body');

                            var $loaderIcon = '<div class="loader-icon loader-icon-inline loader-icon-xs"></div>';
                            $bootboxConfirmBody.html($ticketModal.data('phonetikcet-modal-send-ticket') + '...'+$loaderIcon);

                            $.ajax({
                                type: "POST",
                                url: $btnTrigger.data('remote-url'),
                                data: {
                                    ajax: 'yes',
                                    task: 'createticketcode'
                                },
                                dataType: 'json',
                                success: function(ret){
                                    if(!ret.flag){
                                        $bootboxConfirmBody.html('<div class="alert alert-danger">'+ret.info+'</div>');
                                    } else {
                                        $bootboxConfirm.modal('hide');
                                        $ticketModal.modal('show');
                                    }
                                }
                            });

                            //dont hide the bootbox-confirm modal
                            return false;
                        }
                    },
                    danger: {
                        label: $ticketModal.data('phonetikcet-modal-cancel'),
                        className: "btn-default btn-cancel"
                    },
                    main: {
                        label: $ticketModal.data('phonetikcet-modal-has-ticket'),
                        className: "btn-primary btn-ticket",
                        callback: function(){
                            var $bootboxConfirm = $('.phone-verificatino-modal');
                            $bootboxConfirm.modal('hide');
                            $ticketModal.modal('show');
                        }
                    }
                }
            });

            $div = $('<div class="footer-text"></div>');

            $div.insertBefore($('.btn-ticket'));

            $text = $ticketModal.data('phonetikcet-modal-title-footer');
            $div.html($text);


//                bootbox.confirm(getSTRING('Pošalji SMS sa tiketom na uneti broj telefona?'), function(result) {
//                    if(!result) return;
//
//                });
        });

        var validate = $form.validate({
            formData: { ajax: 'yes', task: 'confirmticketcode' }
        }).data('nb.validate');

        validate.$element.bind('nb.validate.remoteSuccess', function(e){
            validate.$element.find('.modal-body :not(.alert), .modal-footer').addClass('hidden');
        });
    };

    var handlePageOnModal = function($elements){

        var $pageModal = $('#page_modal');

        $($elements).click(function(e){
            e.preventDefault();
            $.ajax({
                type: "POST",
                url: nb_active_page_url,
                data: {
                    nbAjax: 1,
                    ajax: 'yes',
                    task: 'getpagemodal',
                    pageId: $(this).data('remote-modal-page-id')
                },
                //dataType: 'json',
                success: function(ret){
                    if(ret){
                        $('.modal-content-page').html(ret);
                        $pageModal.modal('show');
                    }
                }
            });
        });
    };

    /*
     * INVOICE ORDER MODAL
     */
    var handleInvoiceOrderModal = function(){

        $('#invoice_modal_order').on('show.bs.modal', function (e){
            var total_price = $('#onepage-product-price-value').text();
            total_price = total_price.trim().split(" ");
            $('.invoice-amount').text(total_price[0]);

            var addressChecked = $("#orderAddress").prop("checked");

            var firstNameData = '';
            var lastNameData = '';
            var streetData = '';
            var streetNoData = '';
            var cityData = '';

            var billingAddressChecked = $("#cart_onepage_new_billing_address").prop("checked");
            if(billingAddressChecked){
                 firstNameData   = $("#cart_onepage_billing_firstname").val();
                 lastNameData    = $("#cart_onepage_billing_lastname").val();
                 streetData      = $("#cart_onepage_billing_street").val();
                 streetNoData    = $("#cart_onepage_billing_street_no").val();
                 cityData        = $("#cart_onepage_billing_city").val();
            }else{

                if($("#p_typeSetUserDataInBillingAddress").length > 0 && $("#p_typeSetUserDataInBillingAddress").val() == "user_data_from_profile"){

                     firstNameData   = $("#p_firstname").val();
                     lastNameData    = $("#p_lastname").val();
                     streetData      = $("#p_street").val();
                     streetNoData    = $("#p_street_no").val();
                     cityData        = $("#p_city").val();

                }else{
                    
                    if(addressChecked){
                        firstNameData   = $("#cart_onepage_firstname").val();
                        lastNameData    = $("#cart_onepage_lastname").val();
                        streetData      = $("#cart_onepage_street").val();
                        streetNoData    = $("#cart_onepage_street_no").val();
                        cityData        = $("#cart_onepage_city").val();
                    }else{
                        firstNameData   = $("#p_firstname").val();
                        lastNameData    = $("#p_lastname").val();
                        streetData      = $("#p_street").val();
                        streetNoData    = $("#p_street_no").val();
                        cityData        = $("#p_city").val();
                    }
                }
            }


            var data = {
                firstName: firstNameData,
                lastName: lastNameData,
                street: streetData,
                streetNo: streetNoData,
                city: cityData
            };

            // var data = {
            //     firstName: addressChecked ? $("#cart_onepage_firstname").val() : $("#p_firstname").val(),
            //     lastName: addressChecked ? $("#cart_onepage_lastname").val() : $("#p_lastname").val(),
            //     street: addressChecked ? $("#cart_onepage_street").val() : $("#p_street").val(),
            //     streetNo: addressChecked ? $("#cart_onepage_street_no").val() : $("#p_street_no").val(),
            //     city: addressChecked ? $("#cart_onepage_city").val() : $("#p_city").val()
            // };

            var text = "";
            text += data.firstName ? data.firstName+" " : "";
            text += data.lastName ? data.lastName : "";

            text += (data.street || data.streetNo) ? ", " : "";

            text += data.street ? data.street+" " : "";
            text += data.streetNo ? data.streetNo : "";
            text += data.city ? ", "+data.city : "";

            $('.invoice-name').text(text);
        });
    };

    var handleTypehead = function(){

        function initTypeheadCountriesGeo(elementId, elmentNameId){

            var $countryGeo = $('#'+elmentNameId);

            if($countryGeo.length == 0 || $countryGeo.is('[readonly]')){
                return;
            }

            if(typeof($countryGeo.data('typehead-url')) == 'undefined' || $countryGeo.data('typehead-url') == null || $countryGeo.data('typehead-url') == ""){
                return;
            }

            var countryBH = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 20,
                remote: {
                    url: $countryGeo.data('typehead-url'),
                    filter: function (streets){
                        $('#'+elementId).val("-1");
                        return $.map(streets.list, function (elem) {
                            return elem;
                        });
                    }
                }
            });

            countryBH.initialize();


            $countryGeo.typeahead({
                    minLength: 1,
                    highlight: true
                },
                {
                    displayKey: 'name',
                    source: countryBH.ttAdapter()
                }).on('typeahead:selected', function (e, ret){
                //set here the id of the selected cities, or whatever needed
                $countryGeo.parsley().validate();
                $('#'+elementId).val(ret.id);
            });

            $countryGeo.parent().find('.tt-hint').removeAttr('required');
        }

        function initTypeheadRegions(elementId, elmentNameId, elementCountryGeoId){

            var $region = $('#'+elmentNameId);

            if($region.length == 0){
                return;
            }

            if(typeof($region.data('typehead-url')) == 'undefined' || $region.data('typehead-url') == null || $region.data('typehead-url') == ""){
                return;
            }

            var regionBH = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 20,
                remote: {
                    url: $region.data('typehead-url'),
                    ajax: {
                        data: {
                            countryGeoId: function(){
                                if (typeof($('#'+elementCountryGeoId).val()) != 'undefined' && $('#'+elementCountryGeoId).val() != null){
                                    return $('#'+elementCountryGeoId).val();
                                }
                                return 0;
                            }
                        }
                    },
                    filter: function (streets){
                        $('#'+elementId).val("-1");
                        return $.map(streets.list, function (elem) {
                            return elem;
                        });
                    }
                }
            });

            regionBH.initialize();


            $region.typeahead({
                    minLength: 1,
                    highlight: true
                },
                {
                    displayKey: 'name',
                    source: regionBH.ttAdapter()
                }).on('typeahead:selected', function (e, ret){
                //set here the id of the selected cities, or whatever needed
                $region.parsley().validate();
                $('#'+elementId).val(ret.id);
            });

            $region.parent().find('.tt-hint').removeAttr('required');
        }

        var initTypeheadCities = function(elementId, elmentNameId, elementStreetName, elementPostcode, elementRegionId){

            var $city = $('#'+elmentNameId);

            if($city.length == 0){
                return;
            }

            if(typeof($city.data('typehead-url')) == 'undefined' || $city.data('typehead-url') == null || $city.data('typehead-url') == ""){
                return;
            }

            var cityBH = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 150,
                remote: {
                    url: $city.data('typehead-url'),
                    ajax: {
                        data: {
                            streetName: function(){
                                if (typeof($('#'+elementStreetName).val()) != 'undefined' && $('#'+elementStreetName).val() != null){
                                    return $('#'+elementStreetName).val();
                                }
                                return '';
                            },
                            regionId: function(){
                                if (typeof($('#'+elementRegionId).val()) != 'undefined' && $('#'+elementRegionId).val() != null){
                                    return $('#'+elementRegionId).val();
                                }
                                return 0;
                                //return $('#'+elementRegionId).val();
                            }
                        }
                    },
                    filter: function (cities){
                        $('#'+elementId).val("-1");
                        return $.map(cities.list, function (elem) {
                            return elem;
                        });
                    }
                }
            });

            cityBH.initialize();


            $city.typeahead({
                    minLength: 1,
                    highlight: true
                },
                {
                    displayKey: 'name',
                    source: cityBH.ttAdapter()
                }).on('typeahead:selected', function (e, ret){
                //set here the id of the selected cities, or whatever needed

                $city.parsley().validate();
                $('#'+elementId).val(ret.id);

                if(typeof elementPostcode !== "undefined" && $('#'+elementPostcode).length > 0){
                    $('#'+elementPostcode).val(ret.postCode).parsley().validate();
                }
            });

            $city.parent().find('.tt-hint').removeAttr('required');
        };

        var initNBAutocompleteSystem = function(elementId, elmentNameId, elementPrintName){

            var $element = $('#'+elmentNameId);

            if($element.length == 0){
                return;
            }

            if(typeof($element.data('typehead-url')) == 'undefined' || $element.data('typehead-url') == null || $element.data('typehead-url') == ""){
                return;
            }

            var elementBH = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 150,
                remote: {
                    url: $element.data('typehead-url'),
                    ajax: {
                        data: {
                            rand: function(){
                                return Math.random();
                            },
                            param2: function(){
                                return 0;
                            }
                        }
                    },
                    filter: function (records){
                        $('#'+elementId).val("-1");
                        return $.map(records.list, function (elem) {
                            return elem;
                        });
                    }
                }
            });

            elementBH.initialize();


            $element.typeahead({
                    minLength: 1,
                    hint: true,
                    highlight: true
                },
                {
                    displayKey: elementPrintName,
                    source: elementBH.ttAdapter()
                }).on('typeahead:selected', function (e, ret){
                //set here the id of the selected records, or whatever needed

                $element.parsley().validate();
                $('#'+elementId).val(ret.id);
                $element.val(ret.showName);
                $element.blur(function(){
                    $(this).val(ret.showName);
                });

            });

        };

        function initTypeheadStreets(elementId, elmentNameId){

            var $street = $('#'+elmentNameId);

            if($street.length == 0){
                return;
            }

            if(typeof($street.data('typehead-url')) == 'undefined' || $street.data('typehead-url') == null || $street.data('typehead-url') == ""){
                return;
            }

            var streetBH = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 20,
                remote: {
                    url: $street.data('typehead-url'),
                    filter: function (streets){
                        $('#'+elementId).val("-1");
                        return $.map(streets.list, function (elem) {
                            return elem;
                        });
                    }
                }
            });

            streetBH.initialize();


            $street.typeahead({
                    minLength: 1,
                    highlight: true
                },
                {
                    displayKey: 'name',
                    source: streetBH.ttAdapter()
                }).on('typeahead:selected', function (e, ret){
                //set here the id of the selected cities, or whatever needed
                $street.parsley().validate();
                $('#'+elementId).val(ret.id);


                //                    if(typeof elementCityName !== "undefined" && $('#'+elementCityName).length > 0){
                //                        $('#'+elementCityName).val(ret.cityName).parsley().validate();
                //                    }

                //                    if(typeof elementCityId !== "undefined" && $('#'+elementCityId).length > 0){
                //                        $('#'+elementCityId).val(ret.cityId);
                //                    }

                //                    if(typeof elementPostcode !== "undefined" && $('#'+elementPostcode).length > 0){
                //                        $('#'+elementPostcode).val(ret.cityPostcode).parsley().validate();
                //                    }
            });

            $street.parent().find('.tt-hint').removeAttr('required');
        }


        function initTypeheadNewAddressCart(elementId, elmentNameId){

            var $newAddressList = $('#'+elmentNameId), $newAddressListId = $('#'+elementId);

            if(typeof($newAddressListId.data('type-selection-new-address')) != 'undefined' && $newAddressListId.data('type-selection-new-address') == 'user_public_new_address_select'){

                if($newAddressListId.length == 0){
                    return;
                }

                $newAddressListId.on('change', function() {
                    getNewUserAddress($newAddressListId.val());
                });

                var getNewUserAddress = function(userAddressId){
                    $.ajax({
                        type: "POST",
                        url: getCartPageUrl(),
                        data: {
                            ajax: 'yes',
                            task: 'getnewuseraddress',
                            userAddressId: userAddressId,
                            countryGeoId : function(){
                                if (typeof($('#cart_onepage_country_geo_id').val()) != 'undefined' && $('#cart_onepage_country_geo_id').val() != null && $('#cart_onepage_country_geo_id').val() > 0){
                                    return $('#cart_onepage_country_geo_id').val();
                                }
                                return 0;
                            },
                        },
                        dataType: 'json',
                        success: function(ret){
                            if(ret.flag){

                                if(ret.userPublicNewAddress){

                                    $('#cart_onepage_firstname').val(ret.userPublicNewAddress.firstname);
                                    $('#cart_onepage_lastname').val(ret.userPublicNewAddress.lastname);

                                    if($('#cart_onepage_company_name').length > 0){
                                        $('#cart_onepage_company_name').val(ret.userPublicNewAddress.firstname);
                                    }

                                    if($('#cart_onepage_company_shortname').length > 0){
                                        $('#cart_onepage_company_shortname').val(ret.userPublicNewAddress.lastname);
                                    }

                                    $('#cart_onepage_email').val(ret.userPublicNewAddress.email);
                                    $('#cart_onepage_phone').val(ret.userPublicNewAddress.phone);

                                    if($('#cart_onepage_company_pib').length > 0){
                                        $('#cart_onepage_company_pib').val(ret.userPublicNewAddress.personalNumber);
                                    }

                                    if($('#cart_onepage_company_id_number').length > 0){
                                        $('#cart_onepage_company_id_number').val(ret.userPublicNewAddress.idNumber);
                                    }

                                    if($('#cart_onepage_chief_executive_officer').length > 0){
                                        $('#cart_onepage_chief_executive_officer').val(ret.userPublicNewAddress.chiefExecutiveOfficer);
                                    }

                                    if($('#cart_onepage_street').length > 0){
                                        $('#cart_onepage_street').val(ret.userPublicNewAddress.street);
                                    }

                                    if($('#cart_onepage_street_id').length > 0){
                                        $('#cart_onepage_street_id').val(ret.userPublicNewAddress.streetId);
                                    }

                                    if($('#cart_onepage_street_no').length > 0){
                                        $('#cart_onepage_street_no').val(ret.userPublicNewAddress.street_no);
                                    }

                                    if($('#cart_onepage_city').length > 0){
                                        $('#cart_onepage_city').val(ret.userPublicNewAddress.city);
                                    }

                                    if($('#cart_onepage_city_id').length > 0){
                                        $('#cart_onepage_city_id').val(ret.userPublicNewAddress.cityId);
                                    }

                                    if($('#cart_onepage_postcode').length > 0){
                                        $('#cart_onepage_postcode').val(ret.userPublicNewAddress.postcode);
                                    }

                                    if($('#cart_onepage_region').length > 0){
                                        $('#cart_onepage_region').val(ret.userPublicNewAddress.region);
                                    }

                                    if($('#cart_onepage_region_id').length > 0){
                                        $('#cart_onepage_region_id').val(ret.userPublicNewAddress.regionId);
                                    }

                                }
                            }
                        }
                    });
                }

            }else{

                if($newAddressList.length == 0){
                    return;
                }

                if(typeof($newAddressList.data('typehead-url')) == 'undefined' || $newAddressList.data('typehead-url') == null || $newAddressList.data('typehead-url') == ""){
                    return;
                }

                var streetBH = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('id'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    limit: 20,
                    remote: {
                        url: $newAddressList.data('typehead-url'),
                        filter: function (newAddress){
                            $('#'+elementId).val("-1");
                            if(typeof newAddress.list != 'undefined'){
                                return $.map(newAddress.list, function (elem) {
                                    return elem;
                                });
                            }else {
                                return "";
                            }
                        }
                    }
                });

                streetBH.initialize();

                $newAddressList.typeahead({
                        minLength: 1,
                        highlight: true
                    },
                    {
                        displayKey: 'name',
                        source: streetBH.ttAdapter()
                    }).on('typeahead:selected', function (e, ret){
                    //set here the id of the selected cities, or whatever needed
                    $newAddressList.parsley().validate();
                    $('#'+elementId).val(ret.id);

                    $('#cart_onepage_firstname').val(ret.name);
                    $('#cart_onepage_lastname').val(ret.internalName);

                    if($('#cart_onepage_company_name').length > 0){
                        $('#cart_onepage_company_name').val(ret.name);
                    }

                    if($('#cart_onepage_company_shortname').length > 0){
                        $('#cart_onepage_company_shortname').val(ret.internalName);
                    }

                    $('#cart_onepage_email').val(ret.email);
                    $('#cart_onepage_phone').val(ret.phone);

                    //$('#cart_onepage_country_geo').val(ret.street);
                    //$('#cart_onepage_country_geo_id').val(ret.street);

                    $('#cart_onepage_city').val(ret.cityName);
                    $('#cart_onepage_city_id').val(ret.cityId);

                    $('#cart_onepage_street').val(ret.street);
                    $('#cart_onepage_street_id').val(ret.streetId);

                    $('#cart_onepage_postcode').val(ret.postCode);

                    if($('#cart_onepage_company_pib').length > 0){
                        $('#cart_onepage_company_pib').val("");
                    }

                    if($('#cart_onepage_company_id_number').length > 0){
                        $('#cart_onepage_company_id_number').val("");
                    }

                    if($('#cart_onepage_chief_executive_officer').length > 0){
                        $('#cart_onepage_chief_executive_officer').val("");
                    }

                });

                $newAddressList.parent().find('.tt-hint').removeAttr('required');
            }

        }

        initTypeheadCities('cart_onepage_city_id', 'cart_onepage_city', 'cart_onepage_street', 'cart_onepage_postcode', 'cart_onepage_region_id');
        initTypeheadCities('reg_city_id', 'reg_city', 'reg_address', 'reg_postcode', 'reg_address_id');
        initTypeheadCities('reg_page_city_id', 'reg_page_city', 'reg_page_address', 'reg_page_postcode', 'reg_page_address_id');
        initTypeheadCities('profile_city_id', 'profile_city', 'profile_address', 'profile_postcode', 'profile_address_id');
        initTypeheadCities('subscribe_city_id', 'subscribe_city');

        initTypeheadStreets('cart_onepage_street_id', 'cart_onepage_street');
        initTypeheadStreets('reg_address_id', 'reg_address');
        initTypeheadStreets('reg_page_address_id', 'reg_page_address');
        initTypeheadStreets('profile_address_id', 'profile_address');

        initTypeheadRegions('cart_onepage_region_id', 'cart_onepage_region', 'cart_onepage_country_geo_id');
        initTypeheadRegions('reg_region_id', 'reg_region', 'reg_country_geo_id');
        initTypeheadStreets('reg_page_region_id', 'reg_page_region', 'reg_page_country_geo_id');
        initTypeheadStreets('profile_region_id', 'profile_region', 'profile_country_geo_id');

        initTypeheadCountriesGeo('cart_onepage_country_geo_id', 'cart_onepage_country_geo');
        initTypeheadCountriesGeo('reg_country_geo_id', 'reg_country_geo');
        initTypeheadCountriesGeo('reg_page_country_geo_id', 'reg_page_country_geo');
        initTypeheadCountriesGeo('profile_country_geo_id', 'profile_country_geo');

        initTypeheadNewAddressCart('cart_onepage_new_address_list_id', 'cart_onepage_new_address_list');

        //inicijalizacija svih autocomplete opcija
        initNBAutocompleteSystem('admin_userPublicId', 'admin_userPublic', 'name');

    };

    /*
     * POPOVERS
     * Description: Tooltips possibly containing html, images etc.
     * Plugins used: Bootstrap's Popover
     */
    var handlePopover = function($elements){
        $elements.each(function(){
            var $el = $(this);
            $el.popover({
                html: true,
                trigger: $el.data('trigger') ? $el.data('trigger') : 'hover',
                placement: $el.data('placement') ? $el.data('placement') : 'bottom',
                content: $el.find('.popover-content').length ? $el.find('.popover-content').html() : null
            });
        });
    };

    var handleShowHideElements = function(){
        //add class c_element on element you want to click
        //that element must have data-element attr with name of the class tou want to show/hide
        //on click element gets/removes hidden class
        var c_elements = $('.c_element');
        $(c_elements).on('click', function() {
            var cls = $(this).data('element');
            $('.'+cls).toggleClass('hidden');
        });

    };

    var handleFileSelect = function($file){

        $file.on('change', function(){
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $file.on('fileselect', function(event, numFiles, label){
            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles + ' files selected' : label;
            if(input.length){
                input.val(log);
            }
        });
    }

    var handleScroll = function(){
        var get = function($container){
            return $container.getNiceScroll();
        };

        var set = function($container, options){
            $container.each(function(){
                var _options = {
                    cursorcolor: $(this).data('scroll-color') ? $(this).data('scroll-color') : "#3973b5",
                    background: $(this).data('background') ? $(this).data('background') : "",
                    cursorborder: "0",
                    autohidemode: false,
                    cursorborderradius: 0,
                    cursorwidth: $(this).data('cursor-width') ? $(this).data('cursor-width') : "7"
                };
                $container.niceScroll($.extend(_options, options));
            });
        };

        var show = function($container){
            get($container).show();
        };

        var hide = function($container){
            get($container).hide();
        };

        var remove = function($container){
            get($container).remove();
        };

        var resize = function($container){
            get($container).resize();
        };

        return {
            get: get,
            set: set,
            show: show,
            hide: hide,
            remove: remove,
            resize: resize
        }
    }

    /*var handleBrendLettersFilter = function(){
        var wrapper         = $('.list-letters-wrapper');
        var ltr             = $('.list-letters .item');
        var itmletter       = $('.letters-inline .item');

        itmletter.click(function(){
            var cl = $(this).data('letter');
            ltr.removeClass('hidden');
            ltr.removeClass('show');

            itmletter.each(function() {
                $(this).removeClass('testera');
            });

            if(clickedLetter != cl){
                clickedLetter = cl;

                ltr.each(function() {

                    if(!$(this).hasClass(cl)) {
                        $(this).addClass('hidden');

                    }
                });
            } else {
                ltr.each(function() {
                    $(this).removeClass('hidden');
                });
                clickedLetter = false;
            }



        });

    };*/
    var handleBrendLettersFilter = function(){
        var wrapper         = $('.list-letters-wrapper');
        var ltr             = $('.list-letters .item');
        var itmletter       = $('.letters-inline .item');

        itmletter.click(function(){
            var cl = $(this).data('letter');
            ltr.removeClass('hidden');
            ltr.removeClass('show');


            if(clickedLetter != cl){
                clickedLetter = cl;

                ltr.each(function() {

                    if(!$(this).hasClass(cl)) {
                        $(this).addClass('hidden');
                        //app.scroll.hide($(this).find('.item-list-wrapper.setscrolls'));
                        app.scroll.remove($(this).find('.content'));
                    }else{
                        app.scroll.remove($(this).find('.content'));
                        app.scroll.set($(this).find('.content'));
                    }
                });
            } else {
                ltr.each(function() {
                    $(this).removeClass('hidden');
                    app.scroll.set($(this).find('.content'));
                    app.scroll.resize($(this).find('.content'));
                });
                clickedLetter = false;
            }



        });

    };

    var handleHTMLEditorTableResponsive = function(){
        var tabela = $('.post-content').find('table');
        $(tabela).each(function(){

            if ($(tabela).parent('.table-responsive').length == 0) {
                $(tabela).wrap( "<div class='table-responsive'></div>" );
            }else{
                // $(tabela).wrap( "<div class='table-responsive'></div>" );
            }
        })
    };

    var handleMapStoreShowHide = function(type){

        var $elementSearch = $('.storelocator-panel'),
            $elementMap = $('.stores-map');

        if(windowWidth() < 767){

            /*if(type == 'search'){

                $elementSearch.toggleClass('hidden');
                $elementMap.css('opacity', '1');

            }if(type == 'map'){

                $elementMap.css('opacity', '0');
                $elementSearch.toggleClass('hidden');

            }*/

        }

    };

    var handleCountry_lang = function(){
        var $wrapper = $('.country-wrapper'),
            $buttons = $('.country-dropdown, .country-button, .country-close'),
            $countrydropdown = $('.country-dropdown'),
            $results = $('.country-results'),
            $image = $('.dropdown-button img'),
            $header = $('.header'),
            $hideElements = $('.hidden-fullscreen:not(.nav-main-wrapper)');
        $nicescroll = $('.nicescroll-rails');

        $buttons.click(function(){
            $('body').scrollTop();
            $countrydropdown.toggleClass('active');
            $image.toggleClass('hidden');
            $wrapper.toggleClass('hidden');
            $hideElements.toggleClass('hidden');
            $nicescroll.toggleClass('hidden');


            var headerHeight = $header.outerHeight(true);
            $wrapper.height(app.height() - headerHeight + 1);
            $results.height(app.height() - headerHeight - 50);

            app.scroll.set($results, {
                curcursorcolor: "rgba(255, 255, 255, 0.4)",
                railpadding: {right: -5},
                zindex: 2500,
                cursorwidth: 3
            });
        });
    };

    var handleProductDetailsQuickViewOnModal = function($elements){

        var $productDetailsQuickViewModal = $('#product_details_modal');

        $($elements).click(function(e){
            e.preventDefault();

            var $modalContentProductDetailsQuickView = $('.modal-content-product-details-quick-view'),
                $loaderWrapper = $modalContentProductDetailsQuickView.find('.loader-wrapper');

            $loaderWrapper.removeClass('hidden');

            $modalContentProductDetailsQuickView.find('.content-product-details-quick-view').html("");

            $productDetailsQuickViewModal.modal('show');
            $.ajax({
                type: "POST",
                url: $(this).data('remote-modal-quick-wiew-product-permalink'),
                data: {
                    //iframeView: 1,
                    returnType: 'json',
                },
                dataType: 'json',
                success: function(ret){

                    if(ret.flag){

                        $loaderWrapper.addClass('hidden');

                        $modalContentProductDetailsQuickView.find('.content-product-details-quick-view').html(ret.info);
                        //$modalContentProductDetailsQuickView.html(ret);

                        handleAppearing($('.appear'));
                        handleProductDetails();
                        handleRelatedProductsSlider();
                        handleFavoriteProduct($('.favorite'));
                        handleLowerPriceProduct($('.action-lowerprice'));
                        nbshopJS.handleSliderCountdown($(".counter"));
                    }
                }
            });
        });
    };

    var handleLocationBuyProductOnModal = function($elements){

        var $locationBuyProductModal = $('#modal_location_buy');

        $($elements).click(function(e){
            e.preventDefault();

            var $modalContentLocationBuyProduct = $('.modal-content-location-buy-product'),
                $loaderWrapper = $modalContentLocationBuyProduct.find('.loader-wrapper');

            $loaderWrapper.removeClass('hidden');

            $modalContentLocationBuyProduct.find('.content-location-buy-product').html("");

            $locationBuyProductModal.modal('show');
            $.ajax({
                type: "POST",
                url: nb_active_page_url,
                data: {
                    nbAjax: 1,
                    flag: "yes",
                    ajax: "yes",
                    task: "location_buy_product",
                    productId: $($elements).data('location-buy-productid'),
                    //iframeView: 1,
                    returnType: 'json',
                },
                dataType: 'json',
                success: function(ret){

                    if(ret.flag){

                        $loaderWrapper.addClass('hidden');

                        $modalContentLocationBuyProduct.find('.content-location-buy-product').html(ret.productHtml);
                        //$modalContentProductDetailsQuickView.html(ret);

                        // handleAppearing($('.appear'));
                        // handleProductDetails();
                        // handleRelatedProductsSlider();
                        // handleFavoriteProduct($('.favorite'));
                        // handleLowerPriceProduct($('.action-lowerprice'));
                        // handleReadMore();
                    }
                }
            });
        });
    };

    var handleSoonSaleProductOnModal = function($elements){

        var $locationBuyProductModal = $('#modal_soon_sale_product');

        $($elements).click(function(e){
            e.preventDefault();

            var $modalContentSoonSaleProduct = $('.modal-content-soon-sale-product'),
                $loaderWrapper = $modalContentSoonSaleProduct.find('.loader-wrapper');

            $loaderWrapper.removeClass('hidden');

            $modalContentSoonSaleProduct.find('.content-soon-sale-product').html("");

            $locationBuyProductModal.modal('show');
            $.ajax({
                type: "POST",
                url: nb_active_page_url,
                data: {
                    nbAjax: 1,
                    flag: "yes",
                    ajax: "yes",
                    task: "soon_sale_product",
                    productId: $($elements).data('soon-sale-productid'),
                    //iframeView: 1,
                    returnType: 'json',
                },
                dataType: 'json',
                success: function(ret){

                    if(ret.flag){

                        $loaderWrapper.addClass('hidden');

                        $modalContentSoonSaleProduct.find('.content-soon-sale-product').html(ret.productHtml);
                        //$modalContentProductDetailsQuickView.html(ret);

                        // handleAppearing($('.appear'));
                        // handleProductDetails();
                        // handleRelatedProductsSlider();
                        // handleFavoriteProduct($('.favorite'));
                        // handleLowerPriceProduct($('.action-lowerprice'));
                        // handleReadMore();
                    }
                }
            });
        });
    };

    var handleMasonry = function(){

        var $container = $('.js-masonry');
        if (typeof($container.masonry) == 'function') {

            // initialize
            $container.find('img').batchImageLoad({
                loadingCompleteCallback: function(){
                    // apply mansory to the grid items
                    $container.masonry({
                        //          columnWidth: 200,
                        itemSelector: '.masonry-item'
                    });
                }
            });
        }

    };

    var handleFilterDropdown = function(){

        var $wrapper = $('.filter-headlines.block');
        var oldId = '';

        $wrapper.find('.item').click(function(){
            //alert($(this).attr('id'));
            //$('.filter-headlines.block .item').removeClass('active');
            //$('.product-listing-filters .filter-group').removeClass('active');


            //$(this).toggleClass('active');

            var fwrapper = $(this).attr('id');
            //alert(oldId);
            if(oldId != fwrapper){

                $('.product-listing-filters .filter-group').removeClass('active');
                $('.filter-headlines.block .item').removeClass('active');
                $('#nb_'+fwrapper).toggleClass('active');
                $(this).toggleClass('active');

                oldId = fwrapper;
            }else{
                $(this).toggleClass('active');
                $('#nb_'+fwrapper).toggleClass('active');
            }


        });

    };

    var handleFixedFiltersButton = function(){

        var wrapper = $('.fixed-button-wrapper-productlist');
        var productsFound = $('.products-found');
        $(window).scroll(function(){
            if ($(this).scrollTop() > 80) {
                wrapper.addClass('fixed');
                productsFound.addClass('fixed');
            } else {
                wrapper.removeClass('fixed');
                productsFound.removeClass('fixed');
            }
        });
    };


    var handleToggleBanner = function(){

        var banner      = $(".toggle-banner > .item");
        var button      = $(".toggle-banner .toggle-button");
        var wholebanner = $(".toggle-banner .item, .toggle-banner .toggle-button");
        var buttonIcon  = $(".toggle-banner .toggle-button i");
        if(!readCookie('banner_promo') && app.width() > 1400){
            banner.removeClass("closed");
            button.addClass("expand");

        }
        if(readCookie('banner_promo')=='open' && app.width() > 1400){
            banner.removeClass("closed");
            button.addClass("expand");
        }


        button.click(function(){
            if(readCookie('banner_promo')=='close'){
                createCookie('banner_promo','open',1);

            }else{
                createCookie('banner_promo','close',1);
            }
            banner.toggleClass("closed");
            button.toggleClass("expand");
        });
        

    };

    var handleFixedHeader = function(){

        var wrapper = $('.header');

        $(window).scroll(function(){
            if ($(this).scrollTop() > 81) {
                wrapper.addClass('fixed');
            } else {
                wrapper.removeClass('fixed');
            }
        });
    };

    var handleShowHideLabel = function(){

        if(typeof hidelabels !== 'undefined' && hidelabels == true){

            var $formControl = $('.form-control');

            $formControl.each(function () {
                var fc = $(this);

                if (fc.val() != '') {

                    $("label[for='" + $(this).attr("id") + "']").show().animate({opacity: "1", height: '100%'}, 500);
                } else {
                    $("label[for='" + $(this).attr("id") + "']").hide();
                }
            });

            $formControl.click(function (e) {

                $(this).bind("keyup", function (e) {
                    if ($(this).val() != '') {
                        $("label[for='" + $(this).attr("id") + "']").show().animate({
                            opacity: "1",
                            height: '100%'
                        }, 500);
                    } else {
                        $("label[for='" + $(this).attr("id") + "']").hide().animate({opacity: "1", height: '0'}, 500);
                    }
                })

            });

            $('button[type=submit]').click(function () {

                $("label").hide();
                $(".comment-notice").hide();

            });
        }

    };

    var handleFixedDetails = function(){
        if( $('.end-scroll').offset()) {
            var summaries = $('.fixed-to-footer');
            summaries.each(function (i) {
                var summary = $(summaries[i]);
                var next = summaries[i + 1];

                if (app.width() > 768) {
                    summary.scrollToFixed({
                        marginTop: $('.header').outerHeight(true),
                        limit: function () {
                            var limit = 0;
                            if (next) {
                                limit = $(next).offset().top - $(this).outerHeight(true) - 10;
                            } else {
                                limit = $('.end-scroll').offset().top - $(this).outerHeight(true);
                            }
                            return limit;
                        },
                        zIndex: 999
                    });
                }
            });
        }
    };

    var handleContactDropdown = function(){

        var dropdownToggle = $(".contact-toggle");
        var dropdown    = $(".contact-dropdown");
        var toggleMap   = $(".toggle-map");
        var mobileMap   = $(".map-mobile");
        var closeMap    = $(".close-map");
        var contactWrapper = $(".styled-inner-wrapper");
        dropdownToggle.click(function(){
            $(this).toggleClass("active");
            dropdown.fadeToggle();
            contactWrapper.toggleClass("active");
            $('.map-wrapper').toggleClass('active')
        });

        toggleMap.click(function(){
            mobileMap.addClass("active");
            closeMap.addClass("active");
        });

        closeMap.click(function(){
            mobileMap.removeClass("active");
            closeMap.removeClass("active");
        });

    };


    var HandleInerZoomNinia = function(){

        var attr = $('.product-images img').data('zoom-image');

        if (typeof attr !== typeof undefined && attr !== false) {

            var InerZoomReinit = function(){
                if (typeof($.elevateZoom) == 'function') {
                    $('.product-images .elevatezoom img').elevateZoom({
                        zoomType: "inner",
                        cursor: "crosshair",
                        zoomWindowFadeIn: 500,
                        zoomWindowFadeOut: 750
                    });
                }
            };

            InerZoomReinit();
        }
    };


    var HandleInerZoom = function(){

        // For some browsers, `attr` is undefined; for others,
        // `attr` is false.  Check for both.
       // var attr = $('.slider.product-main img').data('zoom-image');

       // if(typeof(attr) == 'undefined' || attr == null || attr == ""){}else{
        var produvtImg =   $('.slider.product-main .item.slick-active > img');
        if(!produvtImg.length) return;

            var InerZoomReinit = function () {
                if (windowWidth() > 767) {

                    $('.slider.product-main .item.slick-active:not(.image-maped) img').elevateZoom({
                        zoomEnabled: true,
                        zoomActivation: "click",
                        zoomType: "inner",
                        cursor: "crosshair",
                        zoomWindowFadeIn: 500,
                        zoomWindowFadeOut: 750
                    });
                }

            };


            var $zoomOpenBtn = $('.product-images-zoom-open, .slider.product-main .item'), //.slider.product-main .item
                $zoomCloseBtn = $('.fullscreen .close'),
                $thumbsArrows = $('.product-images-thumbs .item, .product-images-thumbs-vertical .item, .product-image-wrapper .slick-arrow, .product-images-thumbs-vertical .slick-arrow');

            $thumbsArrows.click(function () {
                // remove current zoom
                $('.zoomContainer').remove();
                $('#elevate-zoomr').removeData('elevateZoom');
                InerZoomReinit();
            });

            $zoomOpenBtn.click( function(){
                $('.zoomContainer').remove();
                $('#elevate-zoomr').removeData('elevateZoom');
            });

            $zoomCloseBtn.click( function(){
                InerZoomReinit();
            });

            InerZoomReinit();

            if (windowWidth() < 767) {
                $('.zoomContainer').remove();
            }

            $('.product-main .slider-init').on('afterChange', function(event, slick, currentSlide) {
                if($('.product-main .slider-init .item.slick-current').hasClass('video') || $('.product-main .slider-init .item.slick-current').hasClass('image-maped')){
                    setTimeout(function () {
                        $('.zoomContainer').remove();
                        $('#elevate-zoomr').removeData('elevateZoom');
                    }, 50);
                }
            });


       // }
    };

    var handleShowHideFiltersDropdown = function(){

        var $filter_dropdown = $('.filters-dropdown');
        var $buttons = $('.filters-button-dropdown, .filters-dropdown .icon-close');


        $filter_dropdown.hide();
        $buttons.click(function(){
            $filter_dropdown.toggle(500);

        });

    };

    var moveSearchBtn = function () {
        if(app.width() <= app.mobileBreakpoint){
            if($('.main-4level').hasClass('main-4level-with-logo')) {
                $('.nav-main-wrapper .autocomplete-button').appendTo('.header-top');
                $('.header .logo').appendTo('.header-top');
                $('.header .reservation').appendTo('.header-top');
            } else {
                $('.nav-main-wrapper .autocomplete-button').appendTo('.header-top > div');
            };
        }
    };

    var ImagesLightboxLink = function(){

        var $img = $('.page-img-wrapper img');
        var href ;

        $img.each(function(){
            $href = $(this).attr('src');
            $(this).wrap( "<a href='"+$href+"' data-lightbox='roadtrip'></a>" );
        });


    };

    var handleReservation = function(){
        var dropdownToggle  = $(".action-button.reservation"),
            dropdown        = $(".reservation-dropdown");

        //show/hide booking dropdown
        dropdownToggle.click(function(){
            dropdown.fadeToggle({
                easing: "swing"
            });

        });
    };

    var addTableClass = function(){
        $('.price-page table').addClass('table');
    };

    var groupAllPriceItem = function(){
        if ($(".price-page").find(".price-item").length > 0){
            $('<div class="col-xs-12 price-items-wraper"></div>').appendTo('.block.items-generic');
            $('.price-item').each(function() {
                $(this).appendTo(".price-items-wraper");
            });
        }
    };

/*    var scrolledSidebar = function () {
        if ($('.sidebar-menu').length ) {
            var sidebarMenuOffsetTop = $('.sidebar-menu').offset().top;

            var scrolToFixSidebar = function(){
                var scrollTop = $(window).scrollTop();
                var sidebarMenuOffsetBottom = $('.footer-wrapper').offset().top;
                var subsliderHeight = ((sidebarMenuOffsetBottom - scrollTop) - 130);
                if (scrollTop > sidebarMenuOffsetTop) {
                   if ($(window).width() > 768){
                        $('.sidebar-menu').addClass('scroled').css({ 'height': subsliderHeight+'px'});
                    }
                } else {
                    if ($(window).width() > 768){
                        $('.sidebar-menu').removeClass('scroled').css({ 'height': 'initial'});
                    }
                }
            };
            scrolToFixSidebar();
            $(window).scroll(function() {
                scrolToFixSidebar();
            });
        }
    }*/

    var handleTicketModal = function(){

        $("#ticket_modal .btn-ticket").click(function(){
            $("#ticket_modal .ticket-item").toggleClass("active");
            $("#ticket_modal .modal-body .lists-tabs").toggleClass("hidden");
        });

        $("#ticket_modal .lists-tabs .item a").click(function(){
            var curentTicket = $(this).data("ticket-id");
            $('input[name=ticker_id]').val(curentTicket);
        });

        $("#ticket_modal .items-wrapper .item,#ticket_modal .btn-ticket").click(function(){
            $('#ticket_modal .alert').addClass('hidden').removeClass (function (index, className) {
                return (className.match (/(^|\s)alert-\S+/g) || []).join(' ');
            });
        });

        $("#ticket_modal .send-request").click(function(e){

            e.preventDefault();

            var url             = $('#sticket_form').attr("action");
            var ticketingSystem = $('#ticket_modal .lists-tabs .item a').data("ticket-id");

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    ajax: 'yes',
                    task: 'createticketcode',
                    ticketingSystem: ticketingSystem
                },
                dataType: 'json',
                success: function(ret){
                    if(ret.flag){
                        //uspesno
                        $('#ticket_modal .alert').removeClass('hidden').addClass('alert-success').text(ret.info);
                    } else {
                        //greska
                        $('#ticket_modal .alert').removeClass('hidden').addClass('alert-danger').text(ret.info);
                    }
                }
            });

        });

        $("#ticket_modal .ticket-item .btn-verifivation").click(function(e){

            e.preventDefault();

            var url             = $('#sticket_form').attr("action");
            var ticketingSystem = $('#ticket_modal .lists-tabs .item a').data("ticket-id");
            var ticketCode      = $("#ticket_modal .ticket-item .form-control").val();

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    ajax: 'yes',
                    task: 'confirmticketcode',
                    ticketCode: ticketCode,
                    ticketingSystem: ticketingSystem
                },
                dataType: 'json',
                success: function(ret){
                    if(ret.flag){
                        //uspesno
                        $('#ticket_modal .alert').removeClass('hidden').addClass('alert-success').text(ret.info);
                    } else {
                        //greska
                        $('#ticket_modal .alert').removeClass('hidden').addClass('alert-danger').text(ret.info);
                    }
                }
            });

        });

    };

    var miniCartSider = function () {
        $('.header-cart .mini-cart.mini-cart-side, .header-cart-item-side .cart-toggle-overlayer').click(function () {
            $('#miniCartContent').toggleClass('active');
            $('body').toggleClass('search');
        });

        $('.header-cart-item.header-cart-item-side .close-mini-cart').click(function () {
            $('#miniCartContent').removeClass('active');
            $('body').removeClass('search');
        });
    };

    var w = $(window).width();
    $(window).resize(function(){
        if ($(window).width()==w) return;
        w = $(window).width();
        handleNavMain();
        handleAutocomplete();
        handleMainNavMobile();
    });

    window.addEventListener("orientationchange", function() {
        handleNavMain();
        handleAutocomplete();
        handleMainNavMobile();
    }, false);

    return {
        mobileBreakpoint: 767,
        setLocales: setLocales,

        init: function(){

            // scrolledSidebar();
            setToastrOptions();
            handleTicketModal();
            moveSearchBtn();
            handleAppearing($('.appear'));
            handleTooltip($('[rel=tooltip]'));
            handleToggle();
            //handleCountdown();
            handleCheckboxRadio($('input[type="checkbox"], input[type="radio"]'));
            //handleModalCenter();

            //handleForms(); -- ovo je staro i stavljeno je pod komentar kada je radjena korpa
            //handleForms().cart(true); -- ovo je stavljeno pod komentar sato sto je sve stavljeno u funkciju initForms i odatle ze zove
            handleForms().initForms(); //najnovije resenje

            //handleBindedToTab();
            handleAnchorLinks();
            handleProfile();
            handleLangToggle();
            productzoomer();
           // handleScrolls($(".setscrolls"));
            handleSidebarInfo();
            articleBannerStyle();
            handleCurrencyToggle();
            handleHeaderCart();
            miniCartSider();
            handleNavMain();
            handlePhoneVerification();
            handleShowHideElements();
            handleBrendLettersFilter();
            handleHTMLEditorTableResponsive();
            handleGenericSlider();
            handleToggleBanner();
            handleFixedHeader();
            handleShowHideLabel();
            handleFixedDetails();
            addTableClass();
            groupAllPriceItem();

            handlefiltershowhide();
            handleAutocomplete();
            handleReadMore($(".read-more-btn"));
            handleSlideToggle($(".slidetoggle-init"));
            handleProductListing($('.product-listing'));
            handleBuyProductOnListing();
            handleProductDetails();
            handleGalleryImagesSlider();
            handleFavoriteProduct($('.favorite'));
            handleLowerPriceProduct($('.action-lowerprice'));

            //handleFullWidthSlider();
            handleSliderOnLandingPage();
            handleAtributeSlider();
            handleMainTwoImgSlider();
            handleHandlinesSlider();
            //handleSmallSimplelider();
            handleMainSliderPlaneta();
            handleSliderWithText();
            handleSliderWithPadding();
            handleCatalog();
            handleProductsSlider();
            handleRelatedProductsSlider();
            handlePromoSliderBig();
            handlePostsSlider();
            //nbHandleSimilarPostsSlider();
            handleOneitemSlider();
            handleScrollSlider();
            handleStoreMap();
            handleMainNavMobile();
            handleScrollDown();
            handleTabsSlider();

            handlePopover($('[rel=popover]'));

            //handleMap($('.map'));
           // handleModalMap($('.map-link'));
            handleModalPromo($('#onload_modal'));
            handleInvoiceOrderModal();

            //handleAccordion($('#accordion'));
            // handleDatepicker($('.date'));
            handleFileSelect($('.btn-file :file'));
            handlePageOnModal('.showPageOnModal');
            handleContactDropdown();

            handleTypehead();

            handleCountry_lang();

            handleProductDetailsQuickViewOnModal('.showProductDetailsQuickViewOnModal');
            handleLocationBuyProductOnModal('.locationBuyProduct');
            handleSoonSaleProductOnModal('.soonSaleProduct');
            handleMasonry();
            handleFilterDropdown();
            HandleInerZoomNinia();
            HandleInerZoom();
            ImagesLightboxLink();
            handleReservation();
            //handleScrolls($(".list-letters .item-wrapper .content"));
            //handleShowHideFiltersDropdown();
        },

        width: windowWidth,
        height: windowHeight,

        handleBuyProductOnListing: handleBuyProductOnListing,
        handleTooltip: handleTooltip,
        handleAppearing: handleAppearing,
        handleCheckboxRadio: handleCheckboxRadio,
        handlePopover: handlePopover,
        handleProductListing: handleProductListing,
        handleFavoriteProduct: handleFavoriteProduct,
        handleHeaderCart: handleHeaderCart,
        miniCartSider: miniCartSider,
        handleFileSelect:handleFileSelect,
        //handleAccordion: handleAccordion,
       // handleScrolls: handleScrolls,
       // handleMap: handleMap,
        //handleModalMap: handleModalMap,


        scroll: new handleScroll,
        handleProductsSlider: handleProductsSlider,
        print: printFrame,
        // handleDatepicker: handleDatepicker,

        handleMapStoreShowHide: handleMapStoreShowHide,
        handleFixedFiltersButton: handleFixedFiltersButton,
        handlefiltershowhide : handlefiltershowhide,
        handleProductDetailsQuickViewOnModal: handleProductDetailsQuickViewOnModal,
        handleLocationBuyProductOnModal: handleLocationBuyProductOnModal,
        handleSoonSaleProductOnModal: handleSoonSaleProductOnModal,
        //handleProductsThumbsSlider: handleProductsThumbsSlider,
        handleReadMore : handleReadMore,
        handleForms:handleForms
    };
}

window.app = new App();

$(document).ready(function(){
    app.init();
});